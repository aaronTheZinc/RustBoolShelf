{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9","program":"C:\\Users\\aaron\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=95d200895a3730cc","-C","extra-filename=-95d200895a3730cc","--out-dir","c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps\\libbytes-a1a1ddb7dc52b426.rmeta","--extern","futures_core=c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps\\libfutures_core-4e52df78adfde56e.rmeta","--extern","futures_sink=c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps\\libfutures_sink-8d76ba428b335e00.rmeta","--extern","log=c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps\\liblog-f62450e45a57545a.rmeta","--extern","pin_project_lite=c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps\\libpin_project_lite-27325d4b1d45c254.rmeta","--extern","tokio=c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps\\libtokio-54347cd660149b92.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\aaron\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps\\libtokio_util-95d200895a3730cc.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[4249048063553642728,4040844511522618589]},"crate_root":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src","external_crates":[{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[902711862199739234,15082167224296373374]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[5048311760381386034,12753961808535803278]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[847775214756591688,12437863933651081164]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18098153966720408130,4102567439342721650]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14085577876822856882,15393158987199036233]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[3188366355873518403,14471389999965490426]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10237517513868340142,18396708545822173986]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17305999185247584930,14125623615750666193]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7451980452763147359,4800032867518142595]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[842541340887862638,17591716377464122790]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14650435931294811010,18006816567319070280]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[16073749092757737146,5785406473963590530]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[9426002052484834533,14451905897035318657]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":14,"id":{"name":"futures_core","disambiguator":[13964748159169366902,5763244205130919720]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":15,"id":{"name":"futures_sink","disambiguator":[1495171743495538079,16050645887188283722]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":16,"id":{"name":"tokio","disambiguator":[709013067537820212,12698409512211771262]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":17,"id":{"name":"parking_lot","disambiguator":[13006133637450208445,2547954436343408113]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":18,"id":{"name":"instant","disambiguator":[2233395182352627312,9075689005090626204]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":19,"id":{"name":"cfg_if","disambiguator":[5920805980929341637,15126950819943592384]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":20,"id":{"name":"lock_api","disambiguator":[1362090492698933700,1524326129803667476]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":21,"id":{"name":"scopeguard","disambiguator":[9175476050709573502,17932200134425875733]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":22,"id":{"name":"parking_lot_core","disambiguator":[13374991056451029854,10604999410582493046]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":23,"id":{"name":"smallvec","disambiguator":[14448421505833278171,1439306867008014656]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":24,"id":{"name":"winapi","disambiguator":[1690005404320259962,3470533851593621017]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[14884827340029633947,17678863428825162088]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":26,"id":{"name":"mio","disambiguator":[17412840729631972306,4604131031919747314]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","num":27,"id":{"name":"log","disambiguator":[7959388870600472482,1551976684805635354]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":28,"id":{"name":"ntapi","disambiguator":[6976658319930254120,12146262777143368432]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":29,"id":{"name":"miow","disambiguator":[16588441971085201601,10158977930654289469]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","num":30,"id":{"name":"bytes","disambiguator":[17071574347066633541,17584306485224086250]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":31,"id":{"name":"once_cell","disambiguator":[1346013458849264464,4802094885587633853]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":32,"id":{"name":"tokio_macros","disambiguator":[12106947256953847940,16164808126690940921]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":33,"id":{"name":"memchr","disambiguator":[14912130530402578092,9096827653675707505]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","num":34,"id":{"name":"num_cpus","disambiguator":[14749317094106829763,7579850500809028302]}}],"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926812,"byte_end":13926822,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926861,"byte_end":13926868,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926907,"byte_end":13926914,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13927076,"byte_end":13927082,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13927084,"byte_end":13927095,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1472},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13927143,"byte_end":13927153,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13927202,"byte_end":13927213,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13927275,"byte_end":13927295,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13927297,"byte_end":13927322,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13927371,"byte_end":13927381,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13927383,"byte_end":13927398,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13927463,"byte_end":13927480,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13927482,"byte_end":13927504,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mod.rs","byte_start":6970,"byte_end":6979,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mod.rs","byte_start":6981,"byte_end":6998,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mod.rs","byte_start":7000,"byte_end":7025,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1406},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mod.rs","byte_start":7088,"byte_end":7098,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mod.rs","byte_start":7145,"byte_end":7158,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mod.rs","byte_start":7201,"byte_end":7218,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":511},{"krate":0,"index":14},{"krate":0,"index":393},{"krate":0,"index":462}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1188}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13916540,"byte_end":13916593,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13916594,"byte_end":13916597,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13916598,"byte_end":13916673,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13916674,"byte_end":13916739,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13916740,"byte_end":13916743,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13916744,"byte_end":13916824,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13916825,"byte_end":13916900,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13916901,"byte_end":13916949,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13916950,"byte_end":13916953,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13916954,"byte_end":13916977,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13916978,"byte_end":13916981,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13916982,"byte_end":13917061,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917062,"byte_end":13917141,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917142,"byte_end":13917213,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917214,"byte_end":13917284,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917285,"byte_end":13917363,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917364,"byte_end":13917440,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917441,"byte_end":13917474,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917475,"byte_end":13917478,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917479,"byte_end":13917559,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917560,"byte_end":13917640,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917641,"byte_end":13917691,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917692,"byte_end":13917695,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917696,"byte_end":13917747,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917748,"byte_end":13917797,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917798,"byte_end":13917849,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917850,"byte_end":13917853,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917854,"byte_end":13917919,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917920,"byte_end":13917923,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13917924,"byte_end":13918001,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918002,"byte_end":13918043,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918044,"byte_end":13918047,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918048,"byte_end":13918128,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918129,"byte_end":13918208,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918209,"byte_end":13918287,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918288,"byte_end":13918367,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918368,"byte_end":13918382,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918383,"byte_end":13918386,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918387,"byte_end":13918466,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918467,"byte_end":13918546,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918547,"byte_end":13918564,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918565,"byte_end":13918568,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918569,"byte_end":13918646,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918647,"byte_end":13918726,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918727,"byte_end":13918804,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918805,"byte_end":13918875,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918876,"byte_end":13918925,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918926,"byte_end":13918929,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918930,"byte_end":13918943,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918944,"byte_end":13918976,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13918977,"byte_end":13919044,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919045,"byte_end":13919159,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919160,"byte_end":13919197,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919198,"byte_end":13919259,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919260,"byte_end":13919309,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919310,"byte_end":13919313,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919314,"byte_end":13919355,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919356,"byte_end":13919366,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919367,"byte_end":13919451,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919452,"byte_end":13919508,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919509,"byte_end":13919512,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919513,"byte_end":13919534,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919535,"byte_end":13919602,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919603,"byte_end":13919631,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919632,"byte_end":13919645,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919646,"byte_end":13919664,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919665,"byte_end":13919674,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919675,"byte_end":13919678,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919679,"byte_end":13919738,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919739,"byte_end":13919763,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919764,"byte_end":13919773,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919774,"byte_end":13919779,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919780,"byte_end":13919788,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919789,"byte_end":13919796,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919797,"byte_end":13919871,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919872,"byte_end":13919875,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919876,"byte_end":13919898,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919899,"byte_end":13919902,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919903,"byte_end":13919980,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13919981,"byte_end":13920057,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920058,"byte_end":13920137,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920138,"byte_end":13920192,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920193,"byte_end":13920196,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920197,"byte_end":13920241,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920242,"byte_end":13920249,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920250,"byte_end":13920285,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920286,"byte_end":13920317,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920318,"byte_end":13920321,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920322,"byte_end":13920351,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920352,"byte_end":13920355,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920356,"byte_end":13920395,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920396,"byte_end":13920399,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920400,"byte_end":13920438,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920439,"byte_end":13920466,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920467,"byte_end":13920503,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920504,"byte_end":13920507,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920508,"byte_end":13920526,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920527,"byte_end":13920549,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920550,"byte_end":13920580,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920581,"byte_end":13920635,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920636,"byte_end":13920666,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920667,"byte_end":13920724,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920725,"byte_end":13920757,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920758,"byte_end":13920771,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920772,"byte_end":13920775,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920776,"byte_end":13920810,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920811,"byte_end":13920855,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920856,"byte_end":13920908,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920909,"byte_end":13920976,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920977,"byte_end":13920980,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13920981,"byte_end":13921055,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921056,"byte_end":13921122,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921123,"byte_end":13921152,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921153,"byte_end":13921200,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921201,"byte_end":13921253,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921254,"byte_end":13921325,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921326,"byte_end":13921345,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921346,"byte_end":13921359,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921360,"byte_end":13921363,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921364,"byte_end":13921403,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921404,"byte_end":13921459,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921460,"byte_end":13921478,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921479,"byte_end":13921555,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921556,"byte_end":13921622,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921623,"byte_end":13921675,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921676,"byte_end":13921679,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921680,"byte_end":13921760,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921761,"byte_end":13921786,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921787,"byte_end":13921819,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921820,"byte_end":13921833,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921834,"byte_end":13921837,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921838,"byte_end":13921910,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921911,"byte_end":13921937,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921938,"byte_end":13921989,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13921990,"byte_end":13922026,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922027,"byte_end":13922030,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922031,"byte_end":13922109,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922110,"byte_end":13922153,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922154,"byte_end":13922201,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922202,"byte_end":13922238,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922239,"byte_end":13922283,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922284,"byte_end":13922340,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922341,"byte_end":13922389,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922390,"byte_end":13922412,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922413,"byte_end":13922431,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922432,"byte_end":13922445,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922446,"byte_end":13922455,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922456,"byte_end":13922461,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922462,"byte_end":13922469,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922470,"byte_end":13922473,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922474,"byte_end":13922497,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922498,"byte_end":13922501,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922502,"byte_end":13922580,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922581,"byte_end":13922654,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922655,"byte_end":13922731,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922732,"byte_end":13922812,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922813,"byte_end":13922829,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922830,"byte_end":13922833,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922834,"byte_end":13922914,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922915,"byte_end":13922994,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13922995,"byte_end":13923075,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923076,"byte_end":13923148,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923149,"byte_end":13923152,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923153,"byte_end":13923230,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923231,"byte_end":13923309,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923310,"byte_end":13923383,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923384,"byte_end":13923450,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923451,"byte_end":13923454,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923455,"byte_end":13923468,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923469,"byte_end":13923502,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923503,"byte_end":13923537,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923538,"byte_end":13923575,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923576,"byte_end":13923643,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923644,"byte_end":13923679,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923680,"byte_end":13923741,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923742,"byte_end":13923788,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923789,"byte_end":13923850,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923851,"byte_end":13923854,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923855,"byte_end":13923883,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923884,"byte_end":13923887,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923888,"byte_end":13923929,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923930,"byte_end":13923940,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923941,"byte_end":13923965,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13923966,"byte_end":13924040,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924041,"byte_end":13924083,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924084,"byte_end":13924098,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924099,"byte_end":13924156,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924157,"byte_end":13924206,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924207,"byte_end":13924221,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924222,"byte_end":13924259,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924260,"byte_end":13924311,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924312,"byte_end":13924358,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924359,"byte_end":13924389,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924390,"byte_end":13924404,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924405,"byte_end":13924414,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924415,"byte_end":13924420,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924421,"byte_end":13924428,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924429,"byte_end":13924436,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924437,"byte_end":13924512,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924513,"byte_end":13924586,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924587,"byte_end":13924629,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924630,"byte_end":13924633,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924634,"byte_end":13924656,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924657,"byte_end":13924660,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924661,"byte_end":13924738,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924739,"byte_end":13924815,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924816,"byte_end":13924892,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924893,"byte_end":13924916,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924917,"byte_end":13924920,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924921,"byte_end":13924966,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924967,"byte_end":13924974,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13924975,"byte_end":13925010,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925011,"byte_end":13925035,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925036,"byte_end":13925039,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925040,"byte_end":13925069,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925070,"byte_end":13925073,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925074,"byte_end":13925113,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925114,"byte_end":13925117,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925118,"byte_end":13925164,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925165,"byte_end":13925201,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925202,"byte_end":13925205,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925206,"byte_end":13925297,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925298,"byte_end":13925372,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925373,"byte_end":13925395,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925396,"byte_end":13925429,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925430,"byte_end":13925477,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925478,"byte_end":13925530,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925531,"byte_end":13925606,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925607,"byte_end":13925626,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925627,"byte_end":13925640,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925641,"byte_end":13925644,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925645,"byte_end":13925697,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925698,"byte_end":13925775,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925776,"byte_end":13925840,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925841,"byte_end":13925844,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925845,"byte_end":13925888,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925889,"byte_end":13925929,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925930,"byte_end":13925933,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925934,"byte_end":13925991,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13925992,"byte_end":13926038,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926039,"byte_end":13926090,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926091,"byte_end":13926109,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926110,"byte_end":13926119,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926120,"byte_end":13926125,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926126,"byte_end":13926133,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926134,"byte_end":13926137,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926138,"byte_end":13926177,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926178,"byte_end":13926219,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926220,"byte_end":13926256,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926257,"byte_end":13926289,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926290,"byte_end":13926386,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926387,"byte_end":13926438,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926439,"byte_end":13926492,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926493,"byte_end":13926536,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926537,"byte_end":13926581,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926582,"byte_end":13926630,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926631,"byte_end":13926679,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926680,"byte_end":13926726,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13926727,"byte_end":13926766,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928790,"byte_end":13928800,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13927633,"byte_end":13927718,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13927719,"byte_end":13927722,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13927723,"byte_end":13927761,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13927762,"byte_end":13927800,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13927801,"byte_end":13927804,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13927805,"byte_end":13927818,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13927819,"byte_end":13927822,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13927823,"byte_end":13927904,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13927905,"byte_end":13927908,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13927909,"byte_end":13927948,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13927949,"byte_end":13927982,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13927983,"byte_end":13928012,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928013,"byte_end":13928016,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928017,"byte_end":13928024,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928025,"byte_end":13928043,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928044,"byte_end":13928074,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928075,"byte_end":13928099,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928100,"byte_end":13928107,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928108,"byte_end":13928137,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928138,"byte_end":13928190,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928191,"byte_end":13928194,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928195,"byte_end":13928213,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928214,"byte_end":13928231,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928232,"byte_end":13928312,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928313,"byte_end":13928347,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928348,"byte_end":13928401,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928402,"byte_end":13928413,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928414,"byte_end":13928421,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928422,"byte_end":13928427,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928428,"byte_end":13928475,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928476,"byte_end":13928529,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928530,"byte_end":13928588,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928589,"byte_end":13928668,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928669,"byte_end":13928681,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928682,"byte_end":13928689,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928690,"byte_end":13928697,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928698,"byte_end":13928701,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928902,"byte_end":13928905,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928829,"byte_end":13928890,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930906,"byte_end":13930913,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13929620,"byte_end":13929655,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13929656,"byte_end":13929659,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13929660,"byte_end":13929729,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13929730,"byte_end":13929809,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13929810,"byte_end":13929882,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13929883,"byte_end":13929907,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13929908,"byte_end":13929911,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13929912,"byte_end":13929980,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13929981,"byte_end":13930058,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930059,"byte_end":13930120,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930121,"byte_end":13930124,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930125,"byte_end":13930186,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930187,"byte_end":13930249,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930250,"byte_end":13930253,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930254,"byte_end":13930317,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930318,"byte_end":13930381,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930382,"byte_end":13930461,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930462,"byte_end":13930536,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930537,"byte_end":13930556,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930557,"byte_end":13930560,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930561,"byte_end":13930629,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930630,"byte_end":13930692,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930693,"byte_end":13930768,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930769,"byte_end":13930809,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930810,"byte_end":13930813,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930814,"byte_end":13930850,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930851,"byte_end":13930895,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930961,"byte_end":13930965,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930920,"byte_end":13930951,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931731,"byte_end":13931736,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13930972,"byte_end":13931024,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931029,"byte_end":13931032,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931037,"byte_end":13931106,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931111,"byte_end":13931181,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931186,"byte_end":13931232,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931237,"byte_end":13931240,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931245,"byte_end":13931321,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931326,"byte_end":13931401,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931406,"byte_end":13931481,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931486,"byte_end":13931526,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931531,"byte_end":13931534,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931539,"byte_end":13931613,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931618,"byte_end":13931664,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931669,"byte_end":13931672,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931677,"byte_end":13931721,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934672,"byte_end":13934678,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931760,"byte_end":13931825,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931830,"byte_end":13931833,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931838,"byte_end":13931912,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931917,"byte_end":13931989,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13931994,"byte_end":13932067,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932072,"byte_end":13932115,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932120,"byte_end":13932123,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932128,"byte_end":13932201,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932206,"byte_end":13932269,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932274,"byte_end":13932349,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932354,"byte_end":13932429,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932434,"byte_end":13932457,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932462,"byte_end":13932465,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932470,"byte_end":13932542,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932547,"byte_end":13932621,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932626,"byte_end":13932696,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932701,"byte_end":13932704,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932709,"byte_end":13932777,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932782,"byte_end":13932853,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932858,"byte_end":13932938,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932943,"byte_end":13932955,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932960,"byte_end":13932963,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13932968,"byte_end":13933038,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933043,"byte_end":13933118,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933123,"byte_end":13933160,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933165,"byte_end":13933168,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933173,"byte_end":13933209,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933214,"byte_end":13933258,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933263,"byte_end":13933266,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933271,"byte_end":13933294,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933299,"byte_end":13933302,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933307,"byte_end":13933381,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933386,"byte_end":13933460,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933465,"byte_end":13933518,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933523,"byte_end":13933526,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933531,"byte_end":13933602,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933607,"byte_end":13933677,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933682,"byte_end":13933698,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933703,"byte_end":13933706,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933711,"byte_end":13933724,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933729,"byte_end":13933747,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933752,"byte_end":13933757,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933762,"byte_end":13933788,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933793,"byte_end":13933830,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933835,"byte_end":13933840,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933845,"byte_end":13933866,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933871,"byte_end":13933876,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933881,"byte_end":13933911,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933916,"byte_end":13933930,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933935,"byte_end":13933966,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13933971,"byte_end":13934004,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934009,"byte_end":13934012,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934017,"byte_end":13934110,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934115,"byte_end":13934133,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934138,"byte_end":13934141,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934146,"byte_end":13934218,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934223,"byte_end":13934283,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934288,"byte_end":13934340,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934345,"byte_end":13934407,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934412,"byte_end":13934479,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934484,"byte_end":13934487,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934492,"byte_end":13934520,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934525,"byte_end":13934534,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934539,"byte_end":13934544,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934549,"byte_end":13934556,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934561,"byte_end":13934564,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934569,"byte_end":13934638,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934643,"byte_end":13934664,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935844,"byte_end":13935854,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934759,"byte_end":13934831,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934836,"byte_end":13934885,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934890,"byte_end":13934893,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934898,"byte_end":13934966,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13934971,"byte_end":13935038,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935043,"byte_end":13935111,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935116,"byte_end":13935192,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935197,"byte_end":13935263,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935268,"byte_end":13935271,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935276,"byte_end":13935344,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935349,"byte_end":13935424,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935429,"byte_end":13935504,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935509,"byte_end":13935581,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935586,"byte_end":13935628,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935633,"byte_end":13935636,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935641,"byte_end":13935716,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935721,"byte_end":13935799,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13935804,"byte_end":13935836,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13937462,"byte_end":13937468,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13936272,"byte_end":13936352,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13936357,"byte_end":13936433,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13936438,"byte_end":13936441,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13936446,"byte_end":13936521,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13936526,"byte_end":13936596,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13936601,"byte_end":13936672,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13936677,"byte_end":13936749,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13936754,"byte_end":13936812,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13936817,"byte_end":13936820,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13936825,"byte_end":13936894,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13936899,"byte_end":13936974,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13936979,"byte_end":13937055,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13937060,"byte_end":13937082,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13937087,"byte_end":13937090,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13937095,"byte_end":13937168,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13937173,"byte_end":13937246,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13937251,"byte_end":13937327,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13937332,"byte_end":13937335,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13937340,"byte_end":13937376,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13937381,"byte_end":13937413,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\decoder.rs","byte_start":13937418,"byte_end":13937454,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13937802,"byte_end":13937809,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13937647,"byte_end":13937719,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13937720,"byte_end":13937740,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13937741,"byte_end":13937744,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13937745,"byte_end":13937791,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13938074,"byte_end":13938079,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13937822,"byte_end":13937854,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13937859,"byte_end":13937862,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13937867,"byte_end":13937944,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13937949,"byte_end":13938005,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13938010,"byte_end":13938013,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13938018,"byte_end":13938064,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13938430,"byte_end":13938436,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13938103,"byte_end":13938148,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13938153,"byte_end":13938156,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13938161,"byte_end":13938235,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13938240,"byte_end":13938320,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13938325,"byte_end":13938363,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13938368,"byte_end":13938371,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\encoder.rs","byte_start":13938376,"byte_end":13938422,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952073,"byte_end":13952079,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1516}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953852,"byte_end":13953855,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952221,"byte_end":13952301,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952306,"byte_end":13952387,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952392,"byte_end":13952395,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952400,"byte_end":13952475,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952480,"byte_end":13952550,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952555,"byte_end":13952624,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952629,"byte_end":13952701,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952706,"byte_end":13952764,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952769,"byte_end":13952772,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952777,"byte_end":13952848,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952853,"byte_end":13952930,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952935,"byte_end":13953011,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953016,"byte_end":13953038,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953043,"byte_end":13953046,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953051,"byte_end":13953124,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953129,"byte_end":13953202,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953207,"byte_end":13953283,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953288,"byte_end":13953291,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953296,"byte_end":13953372,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953377,"byte_end":13953453,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953458,"byte_end":13953533,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953538,"byte_end":13953573,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953578,"byte_end":13953581,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953586,"byte_end":13953622,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953627,"byte_end":13953659,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953664,"byte_end":13953701,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953706,"byte_end":13953744,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13953749,"byte_end":13953840,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13955463,"byte_end":13955476,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954068,"byte_end":13954148,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954153,"byte_end":13954234,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954239,"byte_end":13954288,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954293,"byte_end":13954296,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954301,"byte_end":13954376,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954381,"byte_end":13954451,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954456,"byte_end":13954525,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954530,"byte_end":13954602,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954607,"byte_end":13954665,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954670,"byte_end":13954673,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954678,"byte_end":13954749,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954754,"byte_end":13954831,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954836,"byte_end":13954912,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954917,"byte_end":13954939,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954944,"byte_end":13954947,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13954952,"byte_end":13955025,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13955030,"byte_end":13955103,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13955108,"byte_end":13955184,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13955189,"byte_end":13955192,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13955197,"byte_end":13955233,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13955238,"byte_end":13955270,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13955275,"byte_end":13955312,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13955317,"byte_end":13955355,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13955360,"byte_end":13955451,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957623,"byte_end":13957633,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956046,"byte_end":13956126,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956131,"byte_end":13956212,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956217,"byte_end":13956220,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956225,"byte_end":13956300,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956305,"byte_end":13956375,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956380,"byte_end":13956451,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956456,"byte_end":13956528,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956533,"byte_end":13956591,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956596,"byte_end":13956599,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956604,"byte_end":13956675,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956680,"byte_end":13956757,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956762,"byte_end":13956838,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956843,"byte_end":13956865,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956870,"byte_end":13956873,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956878,"byte_end":13956957,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956962,"byte_end":13957039,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957044,"byte_end":13957047,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957052,"byte_end":13957125,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957130,"byte_end":13957203,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957208,"byte_end":13957284,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957289,"byte_end":13957292,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957297,"byte_end":13957333,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957338,"byte_end":13957370,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957375,"byte_end":13957413,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957418,"byte_end":13957456,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957461,"byte_end":13957515,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957520,"byte_end":13957611,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958268,"byte_end":13958275,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13957985,"byte_end":13958048,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958053,"byte_end":13958066,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958071,"byte_end":13958074,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958079,"byte_end":13958154,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958159,"byte_end":13958229,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958234,"byte_end":13958256,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958619,"byte_end":13958626,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958328,"byte_end":13958399,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958404,"byte_end":13958417,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958422,"byte_end":13958425,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958430,"byte_end":13958505,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958510,"byte_end":13958580,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958585,"byte_end":13958607,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958989,"byte_end":13959000,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958691,"byte_end":13958769,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958774,"byte_end":13958787,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958792,"byte_end":13958795,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958800,"byte_end":13958875,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958880,"byte_end":13958950,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13958955,"byte_end":13958977,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959347,"byte_end":13959352,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959096,"byte_end":13959154,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959159,"byte_end":13959172,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959177,"byte_end":13959180,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959185,"byte_end":13959259,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959264,"byte_end":13959335,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959664,"byte_end":13959673,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959405,"byte_end":13959471,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959476,"byte_end":13959489,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959494,"byte_end":13959497,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959502,"byte_end":13959576,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959581,"byte_end":13959652,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959793,"byte_end":13959804,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959738,"byte_end":13959781,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959939,"byte_end":13959954,"line_start":213,"line_end":213,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13959876,"byte_end":13959927,"line_start":212,"line_end":212,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960094,"byte_end":13960106,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960038,"byte_end":13960082,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960243,"byte_end":13960259,"line_start":223,"line_end":223,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960179,"byte_end":13960231,"line_start":222,"line_end":222,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960609,"byte_end":13960619,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960344,"byte_end":13960407,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960412,"byte_end":13960415,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960420,"byte_end":13960495,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960500,"byte_end":13960570,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960575,"byte_end":13960597,"line_start":231,"line_end":231,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960991,"byte_end":13961001,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960669,"byte_end":13960743,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960748,"byte_end":13960789,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960794,"byte_end":13960797,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960802,"byte_end":13960877,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960882,"byte_end":13960952,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13960957,"byte_end":13960979,"line_start":241,"line_end":241,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13962975,"byte_end":13962986,"line_start":312,"line_end":312,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13962660,"byte_end":13962731,"line_start":305,"line_end":305,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13962732,"byte_end":13962804,"line_start":306,"line_end":306,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13962805,"byte_end":13962865,"line_start":307,"line_end":307,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13962866,"byte_end":13962869,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13962870,"byte_end":13962906,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13962924,"byte_end":13962963,"line_start":311,"line_end":311,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13963072,"byte_end":13963074,"line_start":314,"line_end":314,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13962999,"byte_end":13963063,"line_start":313,"line_end":313,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13963106,"byte_end":13963111,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13963084,"byte_end":13963097,"line_start":316,"line_end":316,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13963176,"byte_end":13963184,"line_start":320,"line_end":320,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13963121,"byte_end":13963167,"line_start":319,"line_end":319,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13963271,"byte_end":13963280,"line_start":323,"line_end":323,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13963201,"byte_end":13963262,"line_start":322,"line_end":322,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13963513,"byte_end":13963516,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13963461,"byte_end":13963501,"line_start":331,"line_end":331,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1472},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13964245,"byte_end":13964255,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1475}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13964506,"byte_end":13964509,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13964438,"byte_end":13964494,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13964857,"byte_end":13964870,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13964741,"byte_end":13964823,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13964828,"byte_end":13964845,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965624,"byte_end":13965631,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965337,"byte_end":13965400,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965405,"byte_end":13965422,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965427,"byte_end":13965430,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965435,"byte_end":13965510,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965515,"byte_end":13965585,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965590,"byte_end":13965612,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965979,"byte_end":13965986,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965684,"byte_end":13965755,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965760,"byte_end":13965777,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965782,"byte_end":13965785,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965790,"byte_end":13965865,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965870,"byte_end":13965940,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965945,"byte_end":13965967,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966353,"byte_end":13966364,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966051,"byte_end":13966129,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966134,"byte_end":13966151,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966156,"byte_end":13966159,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966164,"byte_end":13966239,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966244,"byte_end":13966314,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966319,"byte_end":13966341,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966729,"byte_end":13966739,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966460,"byte_end":13966527,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966532,"byte_end":13966535,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966540,"byte_end":13966615,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966620,"byte_end":13966690,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966695,"byte_end":13966717,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966851,"byte_end":13966858,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966789,"byte_end":13966839,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966981,"byte_end":13966992,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13966911,"byte_end":13966969,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13967112,"byte_end":13967123,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13967057,"byte_end":13967100,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13967253,"byte_end":13967268,"line_start":117,"line_end":117,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13967190,"byte_end":13967241,"line_start":116,"line_end":116,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13969369,"byte_end":13969380,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1434}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13969587,"byte_end":13969590,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13969518,"byte_end":13969575,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970148,"byte_end":13970155,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13969860,"byte_end":13969923,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13969928,"byte_end":13969946,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13969951,"byte_end":13969954,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13969959,"byte_end":13970034,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970039,"byte_end":13970109,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970114,"byte_end":13970136,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970504,"byte_end":13970511,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970208,"byte_end":13970279,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970284,"byte_end":13970302,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970307,"byte_end":13970310,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970315,"byte_end":13970390,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970395,"byte_end":13970465,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970470,"byte_end":13970492,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970879,"byte_end":13970890,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970576,"byte_end":13970654,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970659,"byte_end":13970677,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970682,"byte_end":13970685,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970690,"byte_end":13970765,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970770,"byte_end":13970840,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970845,"byte_end":13970867,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971256,"byte_end":13971266,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13970986,"byte_end":13971054,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971059,"byte_end":13971062,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971067,"byte_end":13971142,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971147,"byte_end":13971217,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971222,"byte_end":13971244,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971378,"byte_end":13971385,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971316,"byte_end":13971366,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971508,"byte_end":13971519,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971438,"byte_end":13971496,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971640,"byte_end":13971652,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971584,"byte_end":13971628,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971783,"byte_end":13971799,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971719,"byte_end":13971771,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1239},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1008},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1010},{"krate":0,"index":1017},{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973326,"byte_end":13973378,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973379,"byte_end":13973382,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973383,"byte_end":13973453,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973454,"byte_end":13973512,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973513,"byte_end":13973585,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973586,"byte_end":13973656,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973657,"byte_end":13973724,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973725,"byte_end":13973728,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973729,"byte_end":13973750,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973751,"byte_end":13973754,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973755,"byte_end":13973830,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973831,"byte_end":13973902,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973903,"byte_end":13973974,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13973975,"byte_end":13974045,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974046,"byte_end":13974086,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974087,"byte_end":13974090,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974091,"byte_end":13974098,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974099,"byte_end":13974142,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974143,"byte_end":13974201,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974202,"byte_end":13974205,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974206,"byte_end":13974261,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974262,"byte_end":13974304,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974305,"byte_end":13974310,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974311,"byte_end":13974363,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974364,"byte_end":13974369,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974370,"byte_end":13974392,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974393,"byte_end":13974400,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974401,"byte_end":13974404,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974405,"byte_end":13974477,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974478,"byte_end":13974549,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974550,"byte_end":13974569,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974570,"byte_end":13974573,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974574,"byte_end":13974585,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974586,"byte_end":13974635,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974636,"byte_end":13974685,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974686,"byte_end":13974735,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974736,"byte_end":13974743,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974744,"byte_end":13974747,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974748,"byte_end":13974786,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974787,"byte_end":13974790,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974791,"byte_end":13974798,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974799,"byte_end":13974842,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974843,"byte_end":13974901,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974902,"byte_end":13974905,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974906,"byte_end":13974931,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974932,"byte_end":13974953,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974954,"byte_end":13974957,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13974958,"byte_end":13975034,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975035,"byte_end":13975044,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975045,"byte_end":13975087,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975088,"byte_end":13975093,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975094,"byte_end":13975167,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975168,"byte_end":13975215,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975216,"byte_end":13975219,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975220,"byte_end":13975257,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975258,"byte_end":13975272,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975273,"byte_end":13975278,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975279,"byte_end":13975286,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975287,"byte_end":13975290,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975291,"byte_end":13975333,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975334,"byte_end":13975337,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975338,"byte_end":13975349,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975350,"byte_end":13975389,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975390,"byte_end":13975429,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975430,"byte_end":13975469,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975470,"byte_end":13975477,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975478,"byte_end":13975481,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975482,"byte_end":13975496,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975497,"byte_end":13975500,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975501,"byte_end":13975576,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975577,"byte_end":13975650,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975651,"byte_end":13975717,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975718,"byte_end":13975787,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975788,"byte_end":13975853,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975854,"byte_end":13975857,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975858,"byte_end":13975874,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975875,"byte_end":13975878,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975879,"byte_end":13975955,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975956,"byte_end":13975997,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13975998,"byte_end":13976001,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976002,"byte_end":13976009,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976010,"byte_end":13976041,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976042,"byte_end":13976092,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976093,"byte_end":13976134,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976135,"byte_end":13976170,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976171,"byte_end":13976219,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976220,"byte_end":13976251,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976252,"byte_end":13976300,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976301,"byte_end":13976350,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976351,"byte_end":13976373,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976374,"byte_end":13976381,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976382,"byte_end":13976404,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976405,"byte_end":13976412,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976413,"byte_end":13976416,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976417,"byte_end":13976465,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976466,"byte_end":13976469,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976470,"byte_end":13976481,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976482,"byte_end":13976534,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976535,"byte_end":13976600,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976601,"byte_end":13976666,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976667,"byte_end":13976732,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976733,"byte_end":13976740,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976741,"byte_end":13976744,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976745,"byte_end":13976821,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976822,"byte_end":13976896,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976897,"byte_end":13976969,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13976970,"byte_end":13977046,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977047,"byte_end":13977089,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977090,"byte_end":13977093,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977094,"byte_end":13977110,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977111,"byte_end":13977114,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977115,"byte_end":13977190,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977191,"byte_end":13977232,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977233,"byte_end":13977236,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977237,"byte_end":13977244,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977245,"byte_end":13977276,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977277,"byte_end":13977327,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977328,"byte_end":13977369,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977370,"byte_end":13977405,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977406,"byte_end":13977454,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977455,"byte_end":13977486,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977487,"byte_end":13977535,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977536,"byte_end":13977595,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977596,"byte_end":13977618,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977619,"byte_end":13977626,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977627,"byte_end":13977649,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977650,"byte_end":13977657,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977658,"byte_end":13977661,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977662,"byte_end":13977710,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977711,"byte_end":13977714,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977715,"byte_end":13977726,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977727,"byte_end":13977776,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977777,"byte_end":13977831,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977832,"byte_end":13977886,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977887,"byte_end":13977941,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977942,"byte_end":13977949,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977950,"byte_end":13977953,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13977954,"byte_end":13978027,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978028,"byte_end":13978095,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978096,"byte_end":13978099,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978100,"byte_end":13978116,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978117,"byte_end":13978120,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978121,"byte_end":13978197,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978198,"byte_end":13978270,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978271,"byte_end":13978310,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978311,"byte_end":13978314,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978315,"byte_end":13978322,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978323,"byte_end":13978354,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978355,"byte_end":13978405,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978406,"byte_end":13978447,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978448,"byte_end":13978483,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978484,"byte_end":13978532,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978533,"byte_end":13978564,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978565,"byte_end":13978612,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978613,"byte_end":13978633,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978634,"byte_end":13978656,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978657,"byte_end":13978664,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978665,"byte_end":13978687,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978688,"byte_end":13978695,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978696,"byte_end":13978699,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978700,"byte_end":13978748,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978749,"byte_end":13978752,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978753,"byte_end":13978764,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978765,"byte_end":13978817,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978818,"byte_end":13978883,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978884,"byte_end":13978949,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13978950,"byte_end":13979015,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979016,"byte_end":13979023,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979024,"byte_end":13979027,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979028,"byte_end":13979100,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979101,"byte_end":13979176,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979177,"byte_end":13979249,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979250,"byte_end":13979326,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979327,"byte_end":13979400,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979401,"byte_end":13979404,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979405,"byte_end":13979421,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979422,"byte_end":13979425,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979426,"byte_end":13979500,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979501,"byte_end":13979568,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979569,"byte_end":13979572,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979573,"byte_end":13979580,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979581,"byte_end":13979612,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979613,"byte_end":13979663,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979664,"byte_end":13979705,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979706,"byte_end":13979741,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979742,"byte_end":13979790,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979791,"byte_end":13979822,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979823,"byte_end":13979871,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979872,"byte_end":13979892,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979893,"byte_end":13979915,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979916,"byte_end":13979923,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979924,"byte_end":13979946,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979947,"byte_end":13979954,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979955,"byte_end":13979958,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13979959,"byte_end":13980007,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980008,"byte_end":13980011,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980012,"byte_end":13980023,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980024,"byte_end":13980050,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980051,"byte_end":13980096,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980097,"byte_end":13980142,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980143,"byte_end":13980188,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980189,"byte_end":13980192,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980193,"byte_end":13980221,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980222,"byte_end":13980267,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980268,"byte_end":13980313,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980314,"byte_end":13980359,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980360,"byte_end":13980367,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980368,"byte_end":13980371,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980372,"byte_end":13980444,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980445,"byte_end":13980521,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980522,"byte_end":13980592,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980593,"byte_end":13980662,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980663,"byte_end":13980700,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980701,"byte_end":13980704,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980705,"byte_end":13980779,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980780,"byte_end":13980834,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980835,"byte_end":13980838,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980839,"byte_end":13980855,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980856,"byte_end":13980859,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980860,"byte_end":13980933,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13980934,"byte_end":13981010,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981011,"byte_end":13981085,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981086,"byte_end":13981099,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981100,"byte_end":13981103,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981104,"byte_end":13981111,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981112,"byte_end":13981143,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981144,"byte_end":13981194,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981195,"byte_end":13981236,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981237,"byte_end":13981272,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981273,"byte_end":13981322,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981323,"byte_end":13981354,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981355,"byte_end":13981403,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981404,"byte_end":13981448,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981449,"byte_end":13981471,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981472,"byte_end":13981479,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981480,"byte_end":13981502,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981503,"byte_end":13981510,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981511,"byte_end":13981514,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981515,"byte_end":13981563,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981564,"byte_end":13981567,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981568,"byte_end":13981579,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981580,"byte_end":13981606,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981607,"byte_end":13981657,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981658,"byte_end":13981708,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981709,"byte_end":13981759,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981760,"byte_end":13981763,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981764,"byte_end":13981784,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981785,"byte_end":13981815,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981816,"byte_end":13981846,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981847,"byte_end":13981877,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981878,"byte_end":13981885,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981886,"byte_end":13981889,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981890,"byte_end":13981963,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13981964,"byte_end":13982039,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982040,"byte_end":13982112,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982113,"byte_end":13982151,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982152,"byte_end":13982155,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982156,"byte_end":13982230,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982231,"byte_end":13982307,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982308,"byte_end":13982381,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982382,"byte_end":13982410,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982411,"byte_end":13982414,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982415,"byte_end":13982431,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982432,"byte_end":13982435,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982436,"byte_end":13982509,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982510,"byte_end":13982586,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982587,"byte_end":13982661,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982662,"byte_end":13982734,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982735,"byte_end":13982746,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982747,"byte_end":13982750,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982751,"byte_end":13982758,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982759,"byte_end":13982790,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982791,"byte_end":13982841,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982842,"byte_end":13982883,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982884,"byte_end":13982919,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982920,"byte_end":13982969,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13982970,"byte_end":13983001,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983002,"byte_end":13983067,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983068,"byte_end":13983088,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983089,"byte_end":13983111,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983112,"byte_end":13983119,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983120,"byte_end":13983127,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983128,"byte_end":13983131,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983132,"byte_end":13983180,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983181,"byte_end":13983184,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983185,"byte_end":13983196,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983197,"byte_end":13983223,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983224,"byte_end":13983274,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983275,"byte_end":13983325,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983326,"byte_end":13983376,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983377,"byte_end":13983380,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983381,"byte_end":13983401,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983402,"byte_end":13983432,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983433,"byte_end":13983463,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983464,"byte_end":13983494,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983495,"byte_end":13983502,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983503,"byte_end":13983506,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983507,"byte_end":13983580,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983581,"byte_end":13983655,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983656,"byte_end":13983730,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983731,"byte_end":13983804,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983805,"byte_end":13983881,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983882,"byte_end":13983915,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983916,"byte_end":13983919,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983920,"byte_end":13983936,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983937,"byte_end":13983940,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13983941,"byte_end":13984015,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984016,"byte_end":13984083,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984084,"byte_end":13984087,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984088,"byte_end":13984095,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984096,"byte_end":13984127,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984128,"byte_end":13984178,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984179,"byte_end":13984220,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984221,"byte_end":13984256,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984257,"byte_end":13984305,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984306,"byte_end":13984337,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984338,"byte_end":13984385,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984386,"byte_end":13984432,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984433,"byte_end":13984455,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984456,"byte_end":13984463,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984464,"byte_end":13984486,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984487,"byte_end":13984494,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984495,"byte_end":13984498,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984499,"byte_end":13984547,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984548,"byte_end":13984551,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984552,"byte_end":13984563,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984564,"byte_end":13984620,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984621,"byte_end":13984682,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984683,"byte_end":13984744,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984745,"byte_end":13984806,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984807,"byte_end":13984814,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984815,"byte_end":13984818,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984819,"byte_end":13984893,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984894,"byte_end":13984914,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984915,"byte_end":13984918,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984919,"byte_end":13984933,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984934,"byte_end":13984937,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13984938,"byte_end":13985013,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985014,"byte_end":13985086,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985087,"byte_end":13985155,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985156,"byte_end":13985232,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985233,"byte_end":13985274,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985275,"byte_end":13985278,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985279,"byte_end":13985349,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985350,"byte_end":13985368,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985369,"byte_end":13985372,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985373,"byte_end":13985380,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985381,"byte_end":13985413,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985414,"byte_end":13985464,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985465,"byte_end":13985509,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985510,"byte_end":13985523,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985524,"byte_end":13985559,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985560,"byte_end":13985591,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985592,"byte_end":13985615,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985616,"byte_end":13985623,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985624,"byte_end":13985646,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985647,"byte_end":13985654,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985655,"byte_end":13985658,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985659,"byte_end":13985709,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985710,"byte_end":13985713,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985714,"byte_end":13985725,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985726,"byte_end":13985759,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985760,"byte_end":13985793,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985794,"byte_end":13985827,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985828,"byte_end":13985835,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985836,"byte_end":13985839,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985840,"byte_end":13985909,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985910,"byte_end":13985947,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985948,"byte_end":13985987,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13985988,"byte_end":13986033,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13986034,"byte_end":13986081,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13986082,"byte_end":13986112,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13986113,"byte_end":13986146,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13986708,"byte_end":13986715,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13986390,"byte_end":13986445,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13986446,"byte_end":13986449,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13986450,"byte_end":13986525,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13986526,"byte_end":13986606,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13986607,"byte_end":13986666,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13987386,"byte_end":13987411,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1009}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13987301,"byte_end":13987374,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13987763,"byte_end":13987783,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1253}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13987432,"byte_end":13987506,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13987507,"byte_end":13987510,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13987511,"byte_end":13987590,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13987591,"byte_end":13987634,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13987635,"byte_end":13987638,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13987639,"byte_end":13987692,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13987693,"byte_end":13987696,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13987697,"byte_end":13987727,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988127,"byte_end":13988130,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988036,"byte_end":13988115,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988357,"byte_end":13988364,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988254,"byte_end":13988329,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988334,"byte_end":13988345,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988586,"byte_end":13988602,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988414,"byte_end":13988455,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988460,"byte_end":13988463,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988468,"byte_end":13988541,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988546,"byte_end":13988574,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13989023,"byte_end":13989043,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988667,"byte_end":13988701,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988706,"byte_end":13988709,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988714,"byte_end":13988784,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988789,"byte_end":13988864,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988869,"byte_end":13988941,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988946,"byte_end":13989011,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13994299,"byte_end":13994302,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993757,"byte_end":13993832,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993837,"byte_end":13993848,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993853,"byte_end":13993856,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993861,"byte_end":13993875,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993880,"byte_end":13993883,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993888,"byte_end":13993895,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993900,"byte_end":13993931,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993936,"byte_end":13993984,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993989,"byte_end":13993992,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993997,"byte_end":13994038,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13994043,"byte_end":13994078,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13994083,"byte_end":13994114,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13994119,"byte_end":13994150,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13994155,"byte_end":13994184,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13994189,"byte_end":13994209,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13994214,"byte_end":13994236,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13994241,"byte_end":13994248,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13994253,"byte_end":13994275,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13994280,"byte_end":13994287,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995487,"byte_end":13995497,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13994966,"byte_end":13995015,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995020,"byte_end":13995023,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995028,"byte_end":13995060,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995065,"byte_end":13995068,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995073,"byte_end":13995141,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995146,"byte_end":13995149,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995154,"byte_end":13995168,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995173,"byte_end":13995176,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995181,"byte_end":13995188,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995193,"byte_end":13995224,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995229,"byte_end":13995277,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995282,"byte_end":13995285,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995290,"byte_end":13995331,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995336,"byte_end":13995371,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995376,"byte_end":13995397,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995402,"byte_end":13995424,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995429,"byte_end":13995436,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995441,"byte_end":13995463,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995468,"byte_end":13995475,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996129,"byte_end":13996142,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995596,"byte_end":13995648,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995653,"byte_end":13995656,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995661,"byte_end":13995699,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995704,"byte_end":13995707,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995712,"byte_end":13995780,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995785,"byte_end":13995788,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995793,"byte_end":13995807,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995812,"byte_end":13995815,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995820,"byte_end":13995827,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995832,"byte_end":13995863,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995868,"byte_end":13995916,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995921,"byte_end":13995924,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995929,"byte_end":13995970,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13995975,"byte_end":13996010,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996015,"byte_end":13996039,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996044,"byte_end":13996066,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996071,"byte_end":13996078,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996083,"byte_end":13996105,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996110,"byte_end":13996117,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996775,"byte_end":13996788,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996242,"byte_end":13996294,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996299,"byte_end":13996302,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996307,"byte_end":13996345,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996350,"byte_end":13996353,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996358,"byte_end":13996426,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996431,"byte_end":13996434,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996439,"byte_end":13996453,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996458,"byte_end":13996461,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996466,"byte_end":13996473,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996478,"byte_end":13996509,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996514,"byte_end":13996562,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996567,"byte_end":13996570,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996575,"byte_end":13996616,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996621,"byte_end":13996656,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996661,"byte_end":13996685,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996690,"byte_end":13996712,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996717,"byte_end":13996724,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996729,"byte_end":13996751,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996756,"byte_end":13996763,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997869,"byte_end":13997885,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996957,"byte_end":13996986,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996991,"byte_end":13996994,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13996999,"byte_end":13997071,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997076,"byte_end":13997101,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997106,"byte_end":13997109,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997114,"byte_end":13997186,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997191,"byte_end":13997260,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997265,"byte_end":13997338,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997343,"byte_end":13997355,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997360,"byte_end":13997363,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997368,"byte_end":13997443,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997448,"byte_end":13997509,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997514,"byte_end":13997517,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997522,"byte_end":13997536,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997541,"byte_end":13997544,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997549,"byte_end":13997556,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997561,"byte_end":13997592,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997597,"byte_end":13997645,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997650,"byte_end":13997653,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997658,"byte_end":13997699,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997704,"byte_end":13997739,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997744,"byte_end":13997779,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997784,"byte_end":13997806,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997811,"byte_end":13997818,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997823,"byte_end":13997845,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997850,"byte_end":13997857,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998546,"byte_end":13998565,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13997982,"byte_end":13998045,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998050,"byte_end":13998053,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998058,"byte_end":13998109,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998114,"byte_end":13998117,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998122,"byte_end":13998190,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998195,"byte_end":13998198,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998203,"byte_end":13998217,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998222,"byte_end":13998225,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998230,"byte_end":13998237,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998242,"byte_end":13998273,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998278,"byte_end":13998326,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998331,"byte_end":13998334,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998339,"byte_end":13998380,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998385,"byte_end":13998420,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998425,"byte_end":13998456,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998461,"byte_end":13998483,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998488,"byte_end":13998495,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998500,"byte_end":13998522,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998527,"byte_end":13998534,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999224,"byte_end":13999243,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998734,"byte_end":13998800,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998805,"byte_end":13998808,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998813,"byte_end":13998868,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998873,"byte_end":13998876,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998881,"byte_end":13998895,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998900,"byte_end":13998903,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998908,"byte_end":13998915,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998920,"byte_end":13998951,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13998956,"byte_end":13999004,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999009,"byte_end":13999012,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999017,"byte_end":13999058,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999063,"byte_end":13999098,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999103,"byte_end":13999134,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999139,"byte_end":13999161,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999166,"byte_end":13999173,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999178,"byte_end":13999200,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999205,"byte_end":13999212,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999797,"byte_end":13999814,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999346,"byte_end":13999419,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999424,"byte_end":13999442,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999447,"byte_end":13999450,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999455,"byte_end":13999469,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999474,"byte_end":13999477,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999482,"byte_end":13999489,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999494,"byte_end":13999525,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999530,"byte_end":13999578,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999583,"byte_end":13999586,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999591,"byte_end":13999632,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999637,"byte_end":13999672,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999677,"byte_end":13999707,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999712,"byte_end":13999734,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999739,"byte_end":13999746,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999751,"byte_end":13999773,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999778,"byte_end":13999785,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000464,"byte_end":14000472,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999915,"byte_end":13999978,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999983,"byte_end":13999986,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13999991,"byte_end":14000052,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000057,"byte_end":14000060,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000065,"byte_end":14000119,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000124,"byte_end":14000127,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000132,"byte_end":14000146,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000151,"byte_end":14000154,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000159,"byte_end":14000166,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000171,"byte_end":14000202,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000207,"byte_end":14000255,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000260,"byte_end":14000263,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000268,"byte_end":14000309,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000314,"byte_end":14000349,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000354,"byte_end":14000374,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000379,"byte_end":14000401,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000406,"byte_end":14000413,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000418,"byte_end":14000440,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000445,"byte_end":14000452,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000992,"byte_end":14001001,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000570,"byte_end":14000633,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000638,"byte_end":14000641,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000646,"byte_end":14000660,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000665,"byte_end":14000668,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000673,"byte_end":14000680,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000685,"byte_end":14000733,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000738,"byte_end":14000759,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000764,"byte_end":14000799,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000804,"byte_end":14000835,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000840,"byte_end":14000871,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000876,"byte_end":14000905,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000910,"byte_end":14000930,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000935,"byte_end":14000956,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000961,"byte_end":14000968,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14000973,"byte_end":14000980,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001657,"byte_end":14001665,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001153,"byte_end":14001206,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001211,"byte_end":14001214,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001219,"byte_end":14001233,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001238,"byte_end":14001241,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001246,"byte_end":14001253,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001258,"byte_end":14001289,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001294,"byte_end":14001342,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001347,"byte_end":14001350,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001355,"byte_end":14001396,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001401,"byte_end":14001436,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001441,"byte_end":14001472,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001477,"byte_end":14001508,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001513,"byte_end":14001542,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001547,"byte_end":14001567,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001572,"byte_end":14001594,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001599,"byte_end":14001606,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001611,"byte_end":14001633,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001638,"byte_end":14001645,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002238,"byte_end":14002247,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001829,"byte_end":14001883,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001888,"byte_end":14001891,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001896,"byte_end":14001910,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001915,"byte_end":14001918,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001923,"byte_end":14001930,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001935,"byte_end":14001967,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14001972,"byte_end":14002022,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002027,"byte_end":14002071,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002076,"byte_end":14002111,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002116,"byte_end":14002147,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002152,"byte_end":14002175,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002180,"byte_end":14002187,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002192,"byte_end":14002214,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002219,"byte_end":14002226,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002856,"byte_end":14002866,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002408,"byte_end":14002457,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002462,"byte_end":14002465,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002470,"byte_end":14002484,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002489,"byte_end":14002492,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002497,"byte_end":14002504,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002509,"byte_end":14002554,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002559,"byte_end":14002609,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002614,"byte_end":14002670,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002675,"byte_end":14002688,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002693,"byte_end":14002728,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002733,"byte_end":14002764,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002769,"byte_end":14002793,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002798,"byte_end":14002805,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002810,"byte_end":14002832,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14002837,"byte_end":14002844,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14004245,"byte_end":14004255,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14004002,"byte_end":14004089,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14004090,"byte_end":14004093,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14004094,"byte_end":14004132,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14004133,"byte_end":14004171,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005355,"byte_end":14005358,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14004936,"byte_end":14004996,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005001,"byte_end":14005004,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005009,"byte_end":14005019,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005024,"byte_end":14005027,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005032,"byte_end":14005104,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005109,"byte_end":14005182,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005187,"byte_end":14005254,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005259,"byte_end":14005262,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005267,"byte_end":14005343,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006489,"byte_end":14006508,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005516,"byte_end":14005576,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005581,"byte_end":14005584,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005589,"byte_end":14005652,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005657,"byte_end":14005735,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005740,"byte_end":14005807,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005812,"byte_end":14005884,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005889,"byte_end":14005959,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005964,"byte_end":14005987,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14005992,"byte_end":14005995,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006000,"byte_end":14006010,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006015,"byte_end":14006018,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006023,"byte_end":14006098,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006103,"byte_end":14006176,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006181,"byte_end":14006257,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006262,"byte_end":14006335,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006340,"byte_end":14006410,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006415,"byte_end":14006418,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006423,"byte_end":14006477,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14007074,"byte_end":14007084,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006636,"byte_end":14006686,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006691,"byte_end":14006694,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006699,"byte_end":14006706,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006711,"byte_end":14006730,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006735,"byte_end":14006773,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006778,"byte_end":14006781,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006786,"byte_end":14006820,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006825,"byte_end":14006872,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006877,"byte_end":14006884,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006889,"byte_end":14006896,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006901,"byte_end":14006939,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006944,"byte_end":14006947,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14006952,"byte_end":14007005,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14007010,"byte_end":14007050,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14007055,"byte_end":14007062,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011410,"byte_end":14011431,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011364,"byte_end":14011405,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011467,"byte_end":14011469,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011437,"byte_end":14011462,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011342,"byte_end":14011357,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1294}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011259,"byte_end":14011315,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14013391,"byte_end":14013408,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012205,"byte_end":14012346,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012347,"byte_end":14012350,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012351,"byte_end":14012389,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012390,"byte_end":14012428,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012429,"byte_end":14012432,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012433,"byte_end":14012446,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012447,"byte_end":14012514,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012515,"byte_end":14012518,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012519,"byte_end":14012552,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012553,"byte_end":14012582,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012583,"byte_end":14012586,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012587,"byte_end":14012594,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012595,"byte_end":14012651,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012652,"byte_end":14012686,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012687,"byte_end":14012690,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012691,"byte_end":14012696,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012697,"byte_end":14012744,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012745,"byte_end":14012798,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012799,"byte_end":14012876,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012877,"byte_end":14012912,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012913,"byte_end":14012934,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012935,"byte_end":14012985,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14012986,"byte_end":14013049,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14013050,"byte_end":14013113,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14013114,"byte_end":14013177,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14013178,"byte_end":14013234,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14013235,"byte_end":14013284,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14013285,"byte_end":14013297,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14013298,"byte_end":14013305,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14013306,"byte_end":14013313,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14013314,"byte_end":14013317,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14014743,"byte_end":14014746,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14014301,"byte_end":14014369,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14014374,"byte_end":14014377,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14014382,"byte_end":14014392,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14014397,"byte_end":14014400,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14014405,"byte_end":14014484,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14014489,"byte_end":14014563,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14014568,"byte_end":14014635,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14014640,"byte_end":14014643,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14014648,"byte_end":14014731,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016057,"byte_end":14016076,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015026,"byte_end":14015094,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015099,"byte_end":14015102,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015107,"byte_end":14015177,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015182,"byte_end":14015268,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015273,"byte_end":14015343,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015348,"byte_end":14015425,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015430,"byte_end":14015500,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015505,"byte_end":14015528,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015533,"byte_end":14015536,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015541,"byte_end":14015551,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015556,"byte_end":14015559,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015564,"byte_end":14015646,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015651,"byte_end":14015724,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015729,"byte_end":14015806,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015811,"byte_end":14015884,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015889,"byte_end":14015964,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015969,"byte_end":14015972,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14015977,"byte_end":14016045,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016864,"byte_end":14016874,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016333,"byte_end":14016384,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016389,"byte_end":14016392,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016397,"byte_end":14016404,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016409,"byte_end":14016428,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016433,"byte_end":14016478,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016483,"byte_end":14016486,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016491,"byte_end":14016563,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016568,"byte_end":14016615,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016620,"byte_end":14016627,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016632,"byte_end":14016639,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016644,"byte_end":14016689,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016694,"byte_end":14016697,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016702,"byte_end":14016795,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016800,"byte_end":14016840,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016845,"byte_end":14016852,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14020970,"byte_end":14020992,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14020923,"byte_end":14020965,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14021028,"byte_end":14021030,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14020998,"byte_end":14021023,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14020894,"byte_end":14020916,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1326}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14020810,"byte_end":14020867,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":390}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mod.rs","byte_start":6878,"byte_end":6908,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token\\guard.rs","byte_start":40807,"byte_end":40816,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1332}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token\\guard.rs","byte_start":40630,"byte_end":40694,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token\\guard.rs","byte_start":40695,"byte_end":40778,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token\\guard.rs","byte_start":41079,"byte_end":41085,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token\\guard.rs","byte_start":40892,"byte_end":40966,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token\\guard.rs","byte_start":40971,"byte_end":41041,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token\\guard.rs","byte_start":41046,"byte_end":41067,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8905,"byte_end":8922,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":7687,"byte_end":7764,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":7765,"byte_end":7775,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":7776,"byte_end":7779,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":7780,"byte_end":7845,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":7846,"byte_end":7920,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":7921,"byte_end":7924,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":7925,"byte_end":8008,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8009,"byte_end":8012,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8013,"byte_end":8027,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8028,"byte_end":8031,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8032,"byte_end":8045,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8046,"byte_end":8068,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8069,"byte_end":8109,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8110,"byte_end":8113,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8114,"byte_end":8132,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8133,"byte_end":8154,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8155,"byte_end":8200,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8201,"byte_end":8242,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8243,"byte_end":8246,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8247,"byte_end":8298,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8299,"byte_end":8362,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8363,"byte_end":8384,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8385,"byte_end":8434,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8435,"byte_end":8481,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8482,"byte_end":8503,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8504,"byte_end":8521,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8522,"byte_end":8603,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8604,"byte_end":8626,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8627,"byte_end":8644,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8645,"byte_end":8658,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8659,"byte_end":8670,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8671,"byte_end":8674,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8675,"byte_end":8708,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8709,"byte_end":8784,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8785,"byte_end":8812,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8813,"byte_end":8824,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8825,"byte_end":8828,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8829,"byte_end":8879,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8880,"byte_end":8885,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":8886,"byte_end":8893,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":9342,"byte_end":9367,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":9189,"byte_end":9263,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":9264,"byte_end":9281,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":9282,"byte_end":9330,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":11875,"byte_end":11878,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":11800,"byte_end":11863,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13931,"byte_end":13942,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":12668,"byte_end":12739,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":12744,"byte_end":12777,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":12782,"byte_end":12785,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":12790,"byte_end":12861,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":12866,"byte_end":12898,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":12903,"byte_end":12906,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":12911,"byte_end":12925,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":12930,"byte_end":12933,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":12938,"byte_end":12951,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":12956,"byte_end":12978,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":12983,"byte_end":13023,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13028,"byte_end":13031,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13036,"byte_end":13054,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13059,"byte_end":13080,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13085,"byte_end":13130,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13135,"byte_end":13181,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13186,"byte_end":13189,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13194,"byte_end":13245,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13250,"byte_end":13313,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13318,"byte_end":13339,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13344,"byte_end":13392,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13397,"byte_end":13443,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13448,"byte_end":13469,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13474,"byte_end":13491,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13496,"byte_end":13577,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13582,"byte_end":13604,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13609,"byte_end":13626,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13631,"byte_end":13644,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13649,"byte_end":13660,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13665,"byte_end":13668,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13673,"byte_end":13706,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13711,"byte_end":13786,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13791,"byte_end":13818,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13823,"byte_end":13834,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13839,"byte_end":13842,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13847,"byte_end":13897,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13902,"byte_end":13907,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":13912,"byte_end":13919,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":16517,"byte_end":16523,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":16328,"byte_end":16400,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":16405,"byte_end":16425,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":16430,"byte_end":16433,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":16438,"byte_end":16505,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":16651,"byte_end":16663,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":16575,"byte_end":16639,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":16814,"byte_end":16823,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":16728,"byte_end":16802,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":17225,"byte_end":17235,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":17062,"byte_end":17103,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":17108,"byte_end":17111,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":17116,"byte_end":17188,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":17193,"byte_end":17213,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1406},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":71395,"byte_end":71405,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":71257,"byte_end":71314,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":71315,"byte_end":71318,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":71319,"byte_end":71366,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72128,"byte_end":72131,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72086,"byte_end":72116,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72846,"byte_end":72856,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72334,"byte_end":72363,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72368,"byte_end":72371,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72376,"byte_end":72452,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72457,"byte_end":72526,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72531,"byte_end":72549,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72554,"byte_end":72557,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72562,"byte_end":72633,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72638,"byte_end":72711,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72716,"byte_end":72790,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72795,"byte_end":72834,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74377,"byte_end":74391,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73280,"byte_end":73361,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73366,"byte_end":73412,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73417,"byte_end":73420,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73425,"byte_end":73473,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73478,"byte_end":73481,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73486,"byte_end":73570,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73575,"byte_end":73634,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73639,"byte_end":73724,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73729,"byte_end":73748,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73753,"byte_end":73832,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73837,"byte_end":73840,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73845,"byte_end":73920,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":73925,"byte_end":74001,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74006,"byte_end":74061,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74066,"byte_end":74140,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74145,"byte_end":74218,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74223,"byte_end":74257,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74262,"byte_end":74265,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74270,"byte_end":74346,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74351,"byte_end":74365,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75025,"byte_end":75033,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74777,"byte_end":74842,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74847,"byte_end":74850,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74855,"byte_end":74928,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74933,"byte_end":74943,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74948,"byte_end":74951,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":74956,"byte_end":75013,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75145,"byte_end":75154,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75087,"byte_end":75133,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75495,"byte_end":75506,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75296,"byte_end":75330,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75335,"byte_end":75338,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75343,"byte_end":75416,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75421,"byte_end":75483,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75811,"byte_end":75820,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75611,"byte_end":75646,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75651,"byte_end":75654,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75659,"byte_end":75732,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75737,"byte_end":75799,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76520,"byte_end":76537,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":75971,"byte_end":76040,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76045,"byte_end":76048,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76053,"byte_end":76123,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76128,"byte_end":76201,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76206,"byte_end":76252,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76257,"byte_end":76260,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76265,"byte_end":76340,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76345,"byte_end":76419,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76424,"byte_end":76450,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76455,"byte_end":76458,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76463,"byte_end":76508,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76703,"byte_end":76713,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76590,"byte_end":76637,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76642,"byte_end":76645,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76650,"byte_end":76691,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79225,"byte_end":79238,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79094,"byte_end":79167,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79168,"byte_end":79171,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79172,"byte_end":79213,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79432,"byte_end":79435,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79387,"byte_end":79420,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79599,"byte_end":79604,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79562,"byte_end":79587,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79710,"byte_end":79721,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79656,"byte_end":79698,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79836,"byte_end":79846,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79791,"byte_end":79824,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":80580,"byte_end":80592,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79907,"byte_end":79955,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79960,"byte_end":79963,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79968,"byte_end":80009,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":80014,"byte_end":80017,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":80022,"byte_end":80084,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":80089,"byte_end":80149,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":80154,"byte_end":80214,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":80219,"byte_end":80222,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":80227,"byte_end":80302,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":80307,"byte_end":80375,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":80380,"byte_end":80456,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":80461,"byte_end":80529,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":80534,"byte_end":80568,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82020,"byte_end":82037,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":81736,"byte_end":81788,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":81793,"byte_end":81796,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":81801,"byte_end":81877,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":81882,"byte_end":81916,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":81921,"byte_end":81924,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":81929,"byte_end":82008,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82497,"byte_end":82508,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82110,"byte_end":82152,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82157,"byte_end":82160,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82165,"byte_end":82238,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82243,"byte_end":82283,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82288,"byte_end":82291,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82296,"byte_end":82366,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82371,"byte_end":82405,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82410,"byte_end":82413,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82418,"byte_end":82485,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":83651,"byte_end":83668,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":360}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":83451,"byte_end":83508,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":83509,"byte_end":83512,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":83513,"byte_end":83580,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":83581,"byte_end":83639,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":83846,"byte_end":83849,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":83763,"byte_end":83834,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":84430,"byte_end":84433,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":84215,"byte_end":84267,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":84272,"byte_end":84275,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":84280,"byte_end":84352,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":84357,"byte_end":84418,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":84876,"byte_end":84883,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":84635,"byte_end":84687,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":84692,"byte_end":84695,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":84700,"byte_end":84773,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":84778,"byte_end":84848,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":84853,"byte_end":84864,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":86723,"byte_end":86730,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":86659,"byte_end":86711,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87016,"byte_end":87020,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":86961,"byte_end":87004,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":1414},{"krate":0,"index":1423},{"krate":0,"index":1427},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":457}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88133,"byte_end":88168,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":90115,"byte_end":90119,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1420},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":90128,"byte_end":90133,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":90096,"byte_end":90102,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1420}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88345,"byte_end":88451,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88452,"byte_end":88455,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88456,"byte_end":88546,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88547,"byte_end":88550,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88551,"byte_end":88586,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88587,"byte_end":88590,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88591,"byte_end":88604,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88605,"byte_end":88608,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88609,"byte_end":88646,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88647,"byte_end":88650,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88651,"byte_end":88670,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88671,"byte_end":88713,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88714,"byte_end":88764,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88765,"byte_end":88816,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88817,"byte_end":88835,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88836,"byte_end":88857,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88858,"byte_end":88900,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88901,"byte_end":88934,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88935,"byte_end":88951,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":88952,"byte_end":89046,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89047,"byte_end":89057,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89058,"byte_end":89061,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89062,"byte_end":89109,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89110,"byte_end":89115,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89116,"byte_end":89123,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89124,"byte_end":89127,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89328,"byte_end":89331,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89332,"byte_end":89418,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89419,"byte_end":89429,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89430,"byte_end":89433,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89434,"byte_end":89441,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89442,"byte_end":89477,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89478,"byte_end":89520,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89521,"byte_end":89571,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89572,"byte_end":89623,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89624,"byte_end":89627,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89628,"byte_end":89646,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89647,"byte_end":89668,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89669,"byte_end":89711,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89712,"byte_end":89759,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89760,"byte_end":89776,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89777,"byte_end":89826,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89827,"byte_end":89837,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89838,"byte_end":89841,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89842,"byte_end":89875,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89876,"byte_end":89916,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89917,"byte_end":89949,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89950,"byte_end":89955,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89956,"byte_end":89963,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":89964,"byte_end":89986,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928812,"byte_end":13928822,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928973,"byte_end":13928983,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13929310,"byte_end":13929320,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13939550,"byte_end":13939559,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13939791,"byte_end":13939801,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13939952,"byte_end":13939961,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13940316,"byte_end":13940326,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13940572,"byte_end":13940580,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13940677,"byte_end":13940685,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13940796,"byte_end":13940804,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13940904,"byte_end":13940912,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13941022,"byte_end":13941032,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13949319,"byte_end":13949329,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952165,"byte_end":13952171,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956027,"byte_end":13956033,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13961348,"byte_end":13961354,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13961670,"byte_end":13961676,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13962391,"byte_end":13962397,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13963437,"byte_end":13963448,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13964375,"byte_end":13964385,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965314,"byte_end":13965324,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13967421,"byte_end":13967431,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13967744,"byte_end":13967754,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13968480,"byte_end":13968490,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13969469,"byte_end":13969480,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13969836,"byte_end":13969847,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971956,"byte_end":13971967,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13972731,"byte_end":13972742,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13972983,"byte_end":13972994,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988009,"byte_end":13988029,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13991363,"byte_end":13991383,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13992269,"byte_end":13992289,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993630,"byte_end":13993650,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993743,"byte_end":13993750,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14003349,"byte_end":14003356,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14003482,"byte_end":14003507,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14003665,"byte_end":14003690,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14003825,"byte_end":14003850,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14004919,"byte_end":14004929,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14007471,"byte_end":14007481,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14010857,"byte_end":14010867,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011190,"byte_end":14011200,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011507,"byte_end":14011522,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011804,"byte_end":14011819,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011936,"byte_end":14011951,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14014277,"byte_end":14014294,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016943,"byte_end":14016960,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14020252,"byte_end":14020269,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14020633,"byte_end":14020650,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14021068,"byte_end":14021090,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14021419,"byte_end":14021441,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14021572,"byte_end":14021594,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token\\guard.rs","byte_start":40876,"byte_end":40885,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token\\guard.rs","byte_start":41245,"byte_end":41254,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":9125,"byte_end":9142,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":9167,"byte_end":9184,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":9918,"byte_end":9943,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":10017,"byte_end":10034,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":10259,"byte_end":10276,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":10682,"byte_end":10699,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":11669,"byte_end":11686,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":11776,"byte_end":11793,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42135,"byte_end":42143,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42393,"byte_end":42401,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42506,"byte_end":42514,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42823,"byte_end":42833,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72066,"byte_end":72076,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76937,"byte_end":76947,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":77351,"byte_end":77361,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79367,"byte_end":79380,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82592,"byte_end":82605,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82819,"byte_end":82832,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82950,"byte_end":82963,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":83175,"byte_end":83188,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":83736,"byte_end":83753,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87127,"byte_end":87144,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87434,"byte_end":87451,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87669,"byte_end":87686,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87782,"byte_end":87799,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87824,"byte_end":87841,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87985,"byte_end":88002,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":90739,"byte_end":90745,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":90988,"byte_end":90994,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":91267,"byte_end":91273,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":91601,"byte_end":91607,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":91961,"byte_end":91967,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":92519,"byte_end":92525,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":511}},{"kind":"Mod","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\mod.rs","byte_start":13927224,"byte_end":13927240,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":954}},{"kind":"Mod","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928812,"byte_end":13928822,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13928973,"byte_end":13928983,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\bytes_codec.rs","byte_start":13929310,"byte_end":13929320,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13939550,"byte_end":13939559,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13939791,"byte_end":13939801,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13939952,"byte_end":13939961,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13940316,"byte_end":13940326,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13940572,"byte_end":13940580,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2452}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13940677,"byte_end":13940685,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2455}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13940796,"byte_end":13940804,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2452}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13940904,"byte_end":13940912,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2455}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13941022,"byte_end":13941032,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1563},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_impl.rs","byte_start":13949319,"byte_end":13949329,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1563},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13952165,"byte_end":13952171,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13956027,"byte_end":13956033,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13961348,"byte_end":13961354,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1513},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13961670,"byte_end":13961676,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1513},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13962391,"byte_end":13962397,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1513},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed.rs","byte_start":13963437,"byte_end":13963448,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13964375,"byte_end":13964385,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13965314,"byte_end":13965324,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13967421,"byte_end":13967431,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1472},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13967744,"byte_end":13967754,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1472},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_read.rs","byte_start":13968480,"byte_end":13968490,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13969469,"byte_end":13969480,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13969836,"byte_end":13969847,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13971956,"byte_end":13971967,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1431},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13972731,"byte_end":13972742,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1431},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\framed_write.rs","byte_start":13972983,"byte_end":13972994,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1431},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13988009,"byte_end":13988029,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13991363,"byte_end":13991383,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13992269,"byte_end":13992289,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993630,"byte_end":13993650,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1251},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":13993743,"byte_end":13993750,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14003349,"byte_end":14003356,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1239},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14003482,"byte_end":14003507,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1008},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14003665,"byte_end":14003690,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1008},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\length_delimited.rs","byte_start":14003825,"byte_end":14003850,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1008},"to":{"krate":1,"index":2326}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14004919,"byte_end":14004929,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14007471,"byte_end":14007481,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14010857,"byte_end":14010867,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011190,"byte_end":14011200,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011507,"byte_end":14011522,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011804,"byte_end":14011819,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\lines_codec.rs","byte_start":14011936,"byte_end":14011951,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1291},"to":{"krate":1,"index":2326}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14014277,"byte_end":14014294,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14016943,"byte_end":14016960,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1299},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14020252,"byte_end":14020269,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1299},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14020633,"byte_end":14020650,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1299},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14021068,"byte_end":14021090,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14021419,"byte_end":14021441,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\codec\\any_delimiter_codec.rs","byte_start":14021572,"byte_end":14021594,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1323},"to":{"krate":1,"index":2326}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token\\guard.rs","byte_start":40876,"byte_end":40885,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token\\guard.rs","byte_start":41245,"byte_end":41254,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":9125,"byte_end":9142,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2853}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":9167,"byte_end":9184,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2865}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":9918,"byte_end":9943,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2853}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":10017,"byte_end":10034,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":10259,"byte_end":10276,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2474}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":10682,"byte_end":10699,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":11669,"byte_end":11686,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":11776,"byte_end":11793,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12108}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42135,"byte_end":42143,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42393,"byte_end":42401,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1390},"to":{"krate":2,"index":3064}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42506,"byte_end":42514,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1390},"to":{"krate":2,"index":3077}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\intrusive_double_linked_list.rs","byte_start":42823,"byte_end":42833,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":72066,"byte_end":72076,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":76937,"byte_end":76947,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1406},"to":{"krate":2,"index":2474}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\mpsc.rs","byte_start":77351,"byte_end":77361,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1406},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":79367,"byte_end":79380,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82592,"byte_end":82605,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":301},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82819,"byte_end":82832,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2474}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":82950,"byte_end":82963,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\poll_semaphore.rs","byte_start":83175,"byte_end":83188,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2750}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":83736,"byte_end":83753,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87127,"byte_end":87144,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":12108}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87434,"byte_end":87451,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2853}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87669,"byte_end":87686,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2865}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87782,"byte_end":87799,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87824,"byte_end":87841,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\sync\\reusable_box.rs","byte_start":87985,"byte_end":88002,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":90739,"byte_end":90745,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1414},"to":{"krate":2,"index":12108}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":90988,"byte_end":90994,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1414},"to":{"krate":16,"index":227}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":91267,"byte_end":91273,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1414},"to":{"krate":16,"index":185}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":91601,"byte_end":91607,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1414},"to":{"krate":16,"index":266}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":91961,"byte_end":91967,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1414},"to":{"krate":16,"index":306}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.9\\src\\either.rs","byte_start":92519,"byte_end":92525,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1414},"to":{"krate":14,"index":96}}]}