{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14","program":"C:\\Users\\aaron\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","mio","--edition=2018","C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"net\"","--cfg","feature=\"os-ext\"","--cfg","feature=\"os-poll\"","--cfg","feature=\"os-util\"","--cfg","feature=\"tcp\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","-C","metadata=8a51cd53a383e63b","-C","extra-filename=-8a51cd53a383e63b","--out-dir","c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps","--extern","log=c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps\\liblog-f62450e45a57545a.rmeta","--extern","miow=c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps\\libmiow-ac23f08a8653fa62.rmeta","--extern","ntapi=c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps\\libntapi-612aa46de96ce024.rmeta","--extern","winapi=c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps\\libwinapi-ca1ff9eb73eca770.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\aaron\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\aaron\\Documents\\RustAlgo\\target\\rls\\debug\\deps\\libmio-8a51cd53a383e63b.rmeta"},"prelude":{"crate_id":{"name":"mio","disambiguator":[17412840729631972306,4604131031919747314]},"crate_root":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src","external_crates":[{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[902711862199739234,15082167224296373374]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5048311760381386034,12753961808535803278]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[847775214756591688,12437863933651081164]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18098153966720408130,4102567439342721650]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14085577876822856882,15393158987199036233]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[3188366355873518403,14471389999965490426]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10237517513868340142,18396708545822173986]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17305999185247584930,14125623615750666193]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7451980452763147359,4800032867518142595]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[842541340887862638,17591716377464122790]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14650435931294811010,18006816567319070280]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[16073749092757737146,5785406473963590530]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[9426002052484834533,14451905897035318657]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","num":14,"id":{"name":"log","disambiguator":[7959388870600472482,1551976684805635354]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","num":15,"id":{"name":"cfg_if","disambiguator":[5920805980929341637,15126950819943592384]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\afd.rs","num":16,"id":{"name":"ntapi","disambiguator":[6976658319930254120,12146262777143368432]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\afd.rs","num":17,"id":{"name":"winapi","disambiguator":[1690005404320259962,3470533851593621017]}},{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\event.rs","num":18,"id":{"name":"miow","disambiguator":[16588441971085201601,10158977930654289469]}}],"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":0,"byte_end":9508,"line_start":1,"line_end":265,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\mod.rs","byte_start":52599,"byte_end":52604,"line_start":8,"line_end":8,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":118}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\mod.rs","byte_start":52629,"byte_end":52635,"line_start":9,"line_end":9,"column_start":24,"column_end":30},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":118}},{"kind":"Use","ref_id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\mod.rs","byte_start":52637,"byte_end":52641,"line_start":9,"line_end":9,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":118}},{"kind":"Use","ref_id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\mod.rs","byte_start":52666,"byte_end":52672,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":118}},{"kind":"Use","ref_id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11989207,"byte_end":11989218,"line_start":11,"line_end":11,"column_start":21,"column_end":32},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11989220,"byte_end":11989229,"line_start":11,"line_end":11,"column_start":34,"column_end":43},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11989231,"byte_end":11989240,"line_start":11,"line_end":11,"column_start":45,"column_end":54},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11989242,"byte_end":11989254,"line_start":11,"line_end":11,"column_start":56,"column_end":68},"alias_span":null,"name":"TcpKeepalive","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11989286,"byte_end":11989295,"line_start":14,"line_end":14,"column_start":20,"column_end":29},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1487,"byte_end":1493,"line_start":65,"line_end":65,"column_start":16,"column_end":22},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1513,"byte_end":1521,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1538,"byte_end":1542,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1544,"byte_end":1552,"line_start":67,"line_end":67,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1570,"byte_end":1575,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1570,"byte_end":1575,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1592,"byte_end":1597,"line_start":69,"line_end":69,"column_start":16,"column_end":21},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2152,"byte_end":2161,"line_start":92,"line_end":92,"column_start":37,"column_end":46},"alias_span":null,"name":"NamedPipe","value":"","parent":{"krate":0,"index":237}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":0,"byte_end":9508,"line_start":1,"line_end":265,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":41},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":118},{"krate":0,"index":1472},{"krate":0,"index":1555},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":241},{"krate":0,"index":242}],"decl_id":null,"docs":" Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs\n and event notification for building high performance I/O apps with as little\n overhead as possible over the OS abstractions.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unused_imports, dead_code)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":54,"byte_end":174,"line_start":2,"line_end":8,"column_start":1,"column_end":3}},{"value":"/ Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":361,"byte_end":440,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ and event notification for building high performance I/O apps with as little","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":441,"byte_end":521,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ overhead as possible over the OS abstractions.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":522,"byte_end":572,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":573,"byte_end":576,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":577,"byte_end":588,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":589,"byte_end":592,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Using Mio starts by creating a [`Poll`], which reads events from the OS and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":593,"byte_end":672,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ puts them into [`Events`]. You can handle I/O events from the OS with it.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":673,"byte_end":750,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":751,"byte_end":754,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ For more detail, see [`Poll`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":755,"byte_end":789,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":790,"byte_end":793,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../mio/struct.Poll.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":794,"byte_end":831,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/ [`Events`]: ../mio/event/struct.Events.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":832,"byte_end":879,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":880,"byte_end":883,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":884,"byte_end":899,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":900,"byte_end":903,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Examples can found in the `examples` directory of the source code, or [on","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":904,"byte_end":981,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ GitHub].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":982,"byte_end":994,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":995,"byte_end":998,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [on GitHub]: https://github.com/tokio-rs/mio/tree/master/examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":999,"byte_end":1068,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1069,"byte_end":1072,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Guide","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1073,"byte_end":1085,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1086,"byte_end":1089,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ A getting started guide is available in the [`guide`] module.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1090,"byte_end":1155,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1156,"byte_end":1159,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Available features","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1160,"byte_end":1185,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1186,"byte_end":1189,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The available features are described in the [`features`] module.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1190,"byte_end":1258,"line_start":42,"line_end":42,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11947,"byte_end":11955,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Interest","qualname":"::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Interest used in registering.","sig":null,"attributes":[{"value":"/ Interest used in registering.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11308,"byte_end":11341,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11342,"byte_end":11345,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Interest are used in [registering] [`event::Source`]s with [`Poll`], they","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11346,"byte_end":11423,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ indicate what readiness should be monitored for. For example if a socket is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11424,"byte_end":11503,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ registered with [readable] interests and the socket becomes writable, no","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11504,"byte_end":11580,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ event will be returned from a call to [`poll`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11581,"byte_end":11632,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11633,"byte_end":11636,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [registering]: struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11637,"byte_end":11692,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11693,"byte_end":11741,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11742,"byte_end":11772,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ [readable]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11773,"byte_end":11837,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":11838,"byte_end":11880,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":12488,"byte_end":12496,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing readable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing readable interests.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":12412,"byte_end":12473,"line_start":37,"line_end":37,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":12647,"byte_end":12655,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing writable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing writable interests.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":12571,"byte_end":12632,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13667,"byte_end":13670,"line_start":69,"line_end":69,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interest`.","sig":null,"attributes":[{"value":"/ Add together two `Interest`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13216,"byte_end":13248,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13253,"byte_end":13256,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This does the same thing as the `BitOr` implementation, but is a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13261,"byte_end":13329,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ constant function.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13334,"byte_end":13356,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13361,"byte_end":13364,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13369,"byte_end":13376,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13381,"byte_end":13403,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13408,"byte_end":13411,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ const INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13416,"byte_end":13491,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ # fn silent_dead_code_warning(_: Interest) { }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13496,"byte_end":13546,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ # silent_dead_code_warning(INTERESTS)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13551,"byte_end":13592,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13597,"byte_end":13604,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13609,"byte_end":13649,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14601,"byte_end":14607,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"remove","qualname":"<Interest>::remove","value":"pub fn remove(Self, Interest) -> Option<Interest>","parent":null,"children":[],"decl_id":null,"docs":" Removes `other` `Interest` from `self`.","sig":null,"attributes":[{"value":"/ Removes `other` `Interest` from `self`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13803,"byte_end":13846,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13851,"byte_end":13854,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the set would be empty after removing `other`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13859,"byte_end":13927,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13932,"byte_end":13935,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13940,"byte_end":13947,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13952,"byte_end":13974,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13979,"byte_end":13982,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ const RW_INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":13987,"byte_end":14065,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14070,"byte_end":14073,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ // As long a one interest remain this will return `Some`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14078,"byte_end":14139,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ let w_interest = RW_INTERESTS.remove(Interest::READABLE).unwrap();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14144,"byte_end":14214,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ assert!(!w_interest.is_readable());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14219,"byte_end":14258,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/ assert!(w_interest.is_writable());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14263,"byte_end":14301,"line_start":85,"line_end":85,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14306,"byte_end":14309,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // Removing all interests from the set will return `None`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14314,"byte_end":14376,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(w_interest.remove(Interest::WRITABLE), None);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14381,"byte_end":14441,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14446,"byte_end":14449,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ // Its also possible to remove multiple interests at once.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14454,"byte_end":14516,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(RW_INTERESTS.remove(RW_INTERESTS), None);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14521,"byte_end":14577,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14582,"byte_end":14589,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14808,"byte_end":14819,"line_start":98,"line_end":98,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable readiness.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14732,"byte_end":14790,"line_start":97,"line_end":97,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14962,"byte_end":14973,"line_start":103,"line_end":103,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable readiness.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":14886,"byte_end":14944,"line_start":102,"line_end":102,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":15111,"byte_end":15117,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"name":"is_aio","qualname":"<Interest>::is_aio","value":"pub const fn is_aio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains AIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains AIO readiness","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":15040,"byte_end":15093,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":15250,"byte_end":15256,"line_start":113,"line_end":113,"column_start":18,"column_end":24},"name":"is_lio","qualname":"<Interest>::is_lio","value":"pub const fn is_lio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains LIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains LIO readiness","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":15179,"byte_end":15232,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25249,"byte_end":25253,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"Poll","qualname":"::poll::Poll","value":"Poll {  }","parent":null,"children":[{"krate":0,"index":72}],"decl_id":null,"docs":" Polls for readiness events on all registered values.","sig":null,"attributes":[{"value":"/ Polls for readiness events on all registered values.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":16955,"byte_end":17011,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17012,"byte_end":17015,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Poll` allows a program to monitor a large number of [`event::Source`]s,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17016,"byte_end":17092,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ waiting until one or more become \"ready\" for some class of operations; e.g.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17093,"byte_end":17172,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ reading and writing. An event source is considered ready if it is possible","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17173,"byte_end":17251,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ to immediately perform a corresponding operation; e.g. [`read`] or","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17252,"byte_end":17322,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17323,"byte_end":17337,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17338,"byte_end":17341,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To use `Poll`, an `event::Source` must first be registered with the `Poll`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17342,"byte_end":17420,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ instance using the [`register`] method on its associated `Register`,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17421,"byte_end":17493,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ supplying readiness interest. The readiness interest tells `Poll` which","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17494,"byte_end":17569,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ specific operations on the handle to monitor for readiness. A `Token` is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17570,"byte_end":17646,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ also passed to the [`register`] function. When `Poll` returns a readiness","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17647,"byte_end":17724,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ event, it will include this token.  This associates the event with the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17725,"byte_end":17799,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ event source that generated the event.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17800,"byte_end":17842,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17843,"byte_end":17846,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17847,"byte_end":17895,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ [`read`]: ./net/struct.TcpStream.html#method.read","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17896,"byte_end":17949,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ [`write`]: ./net/struct.TcpStream.html#method.write","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":17950,"byte_end":18005,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18006,"byte_end":18060,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18061,"byte_end":18064,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18065,"byte_end":18079,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18080,"byte_end":18083,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18084,"byte_end":18145,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18146,"byte_end":18149,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18299,"byte_end":18327,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18328,"byte_end":18375,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18376,"byte_end":18421,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18422,"byte_end":18450,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18451,"byte_end":18454,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use std::net::{self, SocketAddr};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18455,"byte_end":18492,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18493,"byte_end":18496,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18497,"byte_end":18539,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18540,"byte_end":18590,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ let server = net::TcpListener::bind(addr)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18591,"byte_end":18638,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18639,"byte_end":18642,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18643,"byte_end":18720,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18721,"byte_end":18753,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18754,"byte_end":18803,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18804,"byte_end":18807,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Connect the stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18808,"byte_end":18833,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ let mut stream = TcpStream::connect(server.local_addr()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18834,"byte_end":18897,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18898,"byte_end":18901,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18902,"byte_end":18940,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":18941,"byte_end":19035,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19036,"byte_end":19039,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19040,"byte_end":19116,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19117,"byte_end":19148,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19149,"byte_end":19159,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19160,"byte_end":19198,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19199,"byte_end":19202,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19203,"byte_end":19233,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19234,"byte_end":19299,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19300,"byte_end":19379,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/             // wakeup)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19380,"byte_end":19406,"line_start":64,"line_end":64,"column_start":1,"column_end":27}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19407,"byte_end":19437,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19438,"byte_end":19451,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19452,"byte_end":19461,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19462,"byte_end":19467,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19468,"byte_end":19475,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19476,"byte_end":19483,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19484,"byte_end":19487,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19488,"byte_end":19505,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19506,"byte_end":19509,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Using `Poll` provides a portable interface across supported platforms as","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19510,"byte_end":19586,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ long as the caller takes the following into consideration:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19587,"byte_end":19649,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19650,"byte_end":19653,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Spurious events","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19654,"byte_end":19677,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19678,"byte_end":19681,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`] may return readiness events even if the associated","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19682,"byte_end":19751,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ event source is not actually ready. Given the same code, this may","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19752,"byte_end":19821,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ happen more on some platforms than others. It is important to never assume","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19822,"byte_end":19900,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ that, just because a readiness event was received, that the associated","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19901,"byte_end":19975,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ operation will succeed as well.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":19976,"byte_end":20011,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20012,"byte_end":20015,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ If operation fails with [`WouldBlock`], then the caller should not treat","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20016,"byte_end":20092,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ this as an error, but instead should wait until another readiness event is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20093,"byte_end":20171,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ received.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20172,"byte_end":20185,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20186,"byte_end":20189,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Draining readiness","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20190,"byte_end":20216,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20217,"byte_end":20220,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Once a readiness event is received, the corresponding operation must be","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20221,"byte_end":20296,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ performed repeatedly until it returns [`WouldBlock`]. Unless this is done,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20297,"byte_end":20375,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ there is no guarantee that another readiness event will be delivered, even","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20376,"byte_end":20454,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ if further data is received for the event source.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20455,"byte_end":20508,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20509,"byte_end":20512,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20513,"byte_end":20563,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20564,"byte_end":20567,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ### Readiness operations","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20568,"byte_end":20596,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20597,"byte_end":20600,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The only readiness operations that are guaranteed to be present on all","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20601,"byte_end":20675,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ supported platforms are [`readable`] and [`writable`]. All other readiness","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20676,"byte_end":20754,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ operations may have false negatives and as such should be considered","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20755,"byte_end":20827,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/ **hints**. This means that if a socket is registered with [`readable`]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20828,"byte_end":20902,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ interest and either an error or close is received, a readiness event will","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20903,"byte_end":20980,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ be generated for the socket, but it **may** only include `readable`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":20981,"byte_end":21052,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ readiness. Also note that, given the potential for spurious events,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21053,"byte_end":21124,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ receiving a readiness event with `read_closed`, `write_closed`, or `error`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21125,"byte_end":21203,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ doesn't actually mean that a `read` on the socket will return a result","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21204,"byte_end":21278,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ matching the readiness event.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21279,"byte_end":21312,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21313,"byte_end":21316,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ In other words, portable programs that explicitly check for [`read_closed`],","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21317,"byte_end":21397,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ [`write_closed`], or [`error`] readiness should be doing so as an","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21398,"byte_end":21467,"line_start":112,"line_end":112,"column_start":1,"column_end":70}},{"value":"/ **optimization** and always be able to handle an error or close situation","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21468,"byte_end":21545,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ when performing the actual read operation.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21546,"byte_end":21592,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21593,"byte_end":21596,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21597,"byte_end":21659,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/ [`writable`]: ./event/struct.Event.html#method.is_writable","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21660,"byte_end":21722,"line_start":117,"line_end":117,"column_start":1,"column_end":63}},{"value":"/ [`error`]: ./event/struct.Event.html#method.is_error","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21723,"byte_end":21779,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ [`read_closed`]: ./event/struct.Event.html#method.is_read_closed","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21780,"byte_end":21848,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ [`write_closed`]: ./event/struct.Event.html#method.is_write_closed","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21849,"byte_end":21919,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21920,"byte_end":21923,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ### Registering handles","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21924,"byte_end":21951,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21952,"byte_end":21955,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Unless otherwise noted, it should be assumed that types implementing","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":21956,"byte_end":22028,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ [`event::Source`] will never become ready unless they are registered with","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22029,"byte_end":22106,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ `Poll`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22107,"byte_end":22118,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22119,"byte_end":22122,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22123,"byte_end":22139,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22140,"byte_end":22143,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22293,"byte_end":22321,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/ # use std::net;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22322,"byte_end":22341,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22342,"byte_end":22389,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22390,"byte_end":22427,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22428,"byte_end":22456,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22457,"byte_end":22486,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22487,"byte_end":22515,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22516,"byte_end":22536,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22537,"byte_end":22540,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22541,"byte_end":22594,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22595,"byte_end":22647,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/ let mut sock = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22648,"byte_end":22711,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22712,"byte_end":22715,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ thread::sleep(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22716,"byte_end":22758,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22759,"byte_end":22762,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22763,"byte_end":22791,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22792,"byte_end":22795,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // The connect is not guaranteed to have started until it is registered at","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22796,"byte_end":22874,"line_start":149,"line_end":149,"column_start":1,"column_end":79}},{"value":"/ // this point","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22875,"byte_end":22892,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ poll.registry().register(&mut sock, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22893,"byte_end":22985,"line_start":151,"line_end":151,"column_start":1,"column_end":93}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":22986,"byte_end":23002,"line_start":152,"line_end":152,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23003,"byte_end":23010,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23011,"byte_end":23018,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23019,"byte_end":23022,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ### Dropping `Poll`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23023,"byte_end":23046,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23047,"byte_end":23050,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When the `Poll` instance is dropped it may cancel in-flight operations for","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23051,"byte_end":23129,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ the registered [event sources], meaning that no further events for them may","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23130,"byte_end":23209,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ be received. It also means operations on the registered event sources may no","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23210,"byte_end":23290,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ longer work. It is up to the user to keep the `Poll` instance alive while","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23291,"byte_end":23368,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ registered event sources are being used.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23369,"byte_end":23413,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23414,"byte_end":23417,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [event sources]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23418,"byte_end":23464,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23465,"byte_end":23468,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23469,"byte_end":23495,"line_start":166,"line_end":166,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23496,"byte_end":23499,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ `Poll` is backed by the selector provided by the operating system.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23500,"byte_end":23570,"line_start":168,"line_end":168,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23571,"byte_end":23574,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ |      OS       |  Selector |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23575,"byte_end":23608,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ |---------------|-----------|","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23609,"byte_end":23642,"line_start":171,"line_end":171,"column_start":1,"column_end":34}},{"value":"/ | Android       | [epoll]   |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23643,"byte_end":23676,"line_start":172,"line_end":172,"column_start":1,"column_end":34}},{"value":"/ | DragonFly BSD | [kqueue]  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23677,"byte_end":23710,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/ | FreeBSD       | [kqueue]  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23711,"byte_end":23744,"line_start":174,"line_end":174,"column_start":1,"column_end":34}},{"value":"/ | Linux         | [epoll]   |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23745,"byte_end":23778,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/ | NetBSD        | [kqueue]  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23779,"byte_end":23812,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ | OpenBSD       | [kqueue]  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23813,"byte_end":23846,"line_start":177,"line_end":177,"column_start":1,"column_end":34}},{"value":"/ | Solaris       | [epoll]   |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23847,"byte_end":23880,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/ | illumos       | [epoll]   |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23881,"byte_end":23914,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/ | Windows       | [IOCP]    |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23915,"byte_end":23948,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ | iOS           | [kqueue]  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23949,"byte_end":23982,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/ | macOS         | [kqueue]  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":23983,"byte_end":24016,"line_start":182,"line_end":182,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24017,"byte_end":24020,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ On all supported platforms, socket operations are handled by using the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24021,"byte_end":24095,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/ system selector. Platform specific extensions (e.g. [`SourceFd`]) allow","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24096,"byte_end":24171,"line_start":185,"line_end":185,"column_start":1,"column_end":76}},{"value":"/ accessing other features provided by individual system selectors. For","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24172,"byte_end":24245,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ example, Linux's [`signalfd`] feature can be used by registering the FD with","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24246,"byte_end":24326,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ `Poll` via [`SourceFd`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24327,"byte_end":24355,"line_start":188,"line_end":188,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24356,"byte_end":24359,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ On all platforms except windows, a call to [`Poll::poll`] is mostly just a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24360,"byte_end":24438,"line_start":190,"line_end":190,"column_start":1,"column_end":79}},{"value":"/ direct call to the system selector. However, [IOCP] uses a completion model","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24439,"byte_end":24518,"line_start":191,"line_end":191,"column_start":1,"column_end":80}},{"value":"/ instead of a readiness model. In this case, `Poll` must adapt the completion","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24519,"byte_end":24599,"line_start":192,"line_end":192,"column_start":1,"column_end":81}},{"value":"/ model Mio's API. While non-trivial, the bridge layer is still quite","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24600,"byte_end":24671,"line_start":193,"line_end":193,"column_start":1,"column_end":72}},{"value":"/ efficient. The most expensive part being calls to `read` and `write` require","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24672,"byte_end":24752,"line_start":194,"line_end":194,"column_start":1,"column_end":81}},{"value":"/ data to be copied into an intermediate buffer before it is passed to the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24753,"byte_end":24829,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/ kernel.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24830,"byte_end":24841,"line_start":196,"line_end":196,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24842,"byte_end":24845,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24846,"byte_end":24908,"line_start":198,"line_end":198,"column_start":1,"column_end":63}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24909,"byte_end":24981,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"/ [IOCP]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365198(v=vs.85).aspx","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":24982,"byte_end":25073,"line_start":200,"line_end":200,"column_start":1,"column_end":92}},{"value":"/ [`signalfd`]: http://man7.org/linux/man-pages/man2/signalfd.2.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25074,"byte_end":25144,"line_start":201,"line_end":201,"column_start":1,"column_end":71}},{"value":"/ [`SourceFd`]: unix/struct.SourceFd.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25145,"byte_end":25188,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"/ [`Poll::poll`]: struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25189,"byte_end":25237,"line_start":203,"line_end":203,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25323,"byte_end":25331,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"Registry","qualname":"::poll::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":74}],"decl_id":null,"docs":" Registers I/O resources.\n","sig":null,"attributes":[{"value":"/ Registers I/O resources.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25283,"byte_end":25311,"line_start":208,"line_end":208,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25482,"byte_end":25490,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"registry","qualname":"<Poll>::registry","value":"pub fn registry(&Self) -> &Registry","parent":null,"children":[],"decl_id":null,"docs":" Create a separate `Registry` which can be used to register\n `event::Source`s.\n","sig":null,"attributes":[{"value":"/ Create a separate `Registry` which can be used to register","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25382,"byte_end":25444,"line_start":214,"line_end":214,"column_start":5,"column_end":67}},{"value":"/ `event::Source`s.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25449,"byte_end":25470,"line_start":215,"line_end":215,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29412,"byte_end":29416,"line_start":313,"line_end":313,"column_start":12,"column_end":16},"name":"poll","qualname":"<Poll>::poll","value":"pub fn poll(&mut Self, &mut Events, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for readiness events","sig":null,"attributes":[{"value":"/ Wait for readiness events","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25547,"byte_end":25576,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25581,"byte_end":25584,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Blocks the current thread and waits for readiness events for any of the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25589,"byte_end":25664,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ [`event::Source`]s that have been registered with this `Poll` instance.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25669,"byte_end":25744,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ The function will block until either at least one readiness event has","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25749,"byte_end":25822,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ been received or `timeout` has elapsed. A `timeout` of `None` means that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25827,"byte_end":25903,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ `poll` will block until a readiness event has been received.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25908,"byte_end":25972,"line_start":226,"line_end":226,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25977,"byte_end":25980,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The supplied `events` will be cleared and newly received readiness events","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25985,"byte_end":26062,"line_start":228,"line_end":228,"column_start":5,"column_end":82}},{"value":"/ will be pushed onto the end. At most `events.capacity()` events will be","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26067,"byte_end":26142,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ returned. If there are further pending readiness events, they will be","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26147,"byte_end":26220,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ returned on the next call to `poll`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26225,"byte_end":26265,"line_start":231,"line_end":231,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26270,"byte_end":26273,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ A single call to `poll` may result in multiple readiness events being","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26278,"byte_end":26351,"line_start":233,"line_end":233,"column_start":5,"column_end":78}},{"value":"/ returned for a single event source. For example, if a TCP socket becomes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26356,"byte_end":26432,"line_start":234,"line_end":234,"column_start":5,"column_end":81}},{"value":"/ both readable and writable, it may be possible for a single readiness","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26437,"byte_end":26510,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ event to be returned with both [`readable`] and [`writable`] readiness","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26515,"byte_end":26589,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ **OR** two separate events may be returned, one with [`readable`] set","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26594,"byte_end":26667,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ and one with [`writable`] set.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26672,"byte_end":26706,"line_start":238,"line_end":238,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26711,"byte_end":26714,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Note that the `timeout` will be rounded up to the system clock","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26719,"byte_end":26785,"line_start":240,"line_end":240,"column_start":5,"column_end":71}},{"value":"/ granularity (usually 1ms), and kernel scheduling delays mean that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26790,"byte_end":26859,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ the blocking interval may be overrun by a small amount.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26864,"byte_end":26923,"line_start":242,"line_end":242,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26928,"byte_end":26931,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ See the [struct] level documentation for a higher level discussion of","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":26936,"byte_end":27009,"line_start":244,"line_end":244,"column_start":5,"column_end":78}},{"value":"/ polling.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27014,"byte_end":27026,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27031,"byte_end":27034,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27039,"byte_end":27087,"line_start":247,"line_end":247,"column_start":5,"column_end":53}},{"value":"/ [`readable`]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27092,"byte_end":27158,"line_start":248,"line_end":248,"column_start":5,"column_end":71}},{"value":"/ [`writable`]: struct.Interest.html#associatedconstant.WRITABLE","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27163,"byte_end":27229,"line_start":249,"line_end":249,"column_start":5,"column_end":71}},{"value":"/ [struct]: struct.Poll.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27234,"byte_end":27264,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/ [`iter`]: ./event/struct.Events.html#method.iter","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27269,"byte_end":27321,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27326,"byte_end":27329,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27334,"byte_end":27345,"line_start":253,"line_end":253,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27350,"byte_end":27353,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This returns any errors without attempting to retry, previous versions","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27358,"byte_end":27432,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/ of Mio would automatically retry the poll call if it was interrupted","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27437,"byte_end":27509,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ (if `EINTR` was returned).","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27514,"byte_end":27544,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27549,"byte_end":27552,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27557,"byte_end":27571,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27576,"byte_end":27579,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27584,"byte_end":27645,"line_start":261,"line_end":261,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27650,"byte_end":27653,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27815,"byte_end":27843,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27848,"byte_end":27895,"line_start":266,"line_end":266,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27900,"byte_end":27945,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27950,"byte_end":27978,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27983,"byte_end":27986,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ use std::net::{TcpListener, SocketAddr};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":27991,"byte_end":28035,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28040,"byte_end":28060,"line_start":271,"line_end":271,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28065,"byte_end":28068,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28073,"byte_end":28115,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28120,"byte_end":28170,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ let server = TcpListener::bind(addr)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28175,"byte_end":28217,"line_start":275,"line_end":275,"column_start":5,"column_end":47}},{"value":"/ let addr = server.local_addr()?.clone();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28222,"byte_end":28266,"line_start":276,"line_end":276,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28271,"byte_end":28274,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ // Spawn a thread to accept the socket","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28279,"byte_end":28321,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28326,"byte_end":28353,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/     let _ = server.accept();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28358,"byte_end":28390,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28395,"byte_end":28402,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28407,"byte_end":28410,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28415,"byte_end":28492,"line_start":283,"line_end":283,"column_start":5,"column_end":82}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28497,"byte_end":28529,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28534,"byte_end":28583,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28588,"byte_end":28591,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ // Connect the stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28596,"byte_end":28621,"line_start":287,"line_end":287,"column_start":5,"column_end":30}},{"value":"/ let mut stream = TcpStream::connect(addr)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28626,"byte_end":28673,"line_start":288,"line_end":288,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28678,"byte_end":28681,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28686,"byte_end":28724,"line_start":290,"line_end":290,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28729,"byte_end":28758,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/     &mut stream,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28763,"byte_end":28783,"line_start":292,"line_end":292,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28788,"byte_end":28805,"line_start":293,"line_end":293,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28810,"byte_end":28860,"line_start":294,"line_end":294,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28865,"byte_end":28868,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28873,"byte_end":28949,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28954,"byte_end":28985,"line_start":297,"line_end":297,"column_start":5,"column_end":36}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":28990,"byte_end":29000,"line_start":298,"line_end":298,"column_start":5,"column_end":15}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29005,"byte_end":29043,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29048,"byte_end":29051,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29056,"byte_end":29086,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29091,"byte_end":29156,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29161,"byte_end":29240,"line_start":303,"line_end":303,"column_start":5,"column_end":84}},{"value":"/             // wakeup)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29245,"byte_end":29271,"line_start":304,"line_end":304,"column_start":5,"column_end":31}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29276,"byte_end":29306,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29311,"byte_end":29324,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29329,"byte_end":29338,"line_start":307,"line_end":307,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29343,"byte_end":29348,"line_start":308,"line_end":308,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29353,"byte_end":29360,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29365,"byte_end":29372,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29377,"byte_end":29380,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [struct]: #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29385,"byte_end":29400,"line_start":312,"line_end":312,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":30846,"byte_end":30849,"line_start":353,"line_end":353,"column_start":16,"column_end":19},"name":"new","qualname":"<Poll>::new","value":"pub fn new() -> io::Result<Poll>","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Poll` handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35282,"byte_end":35290,"line_start":474,"line_end":474,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"pub fn register<S: ?Sized>(&Self, &mut S, Token, Interest) -> io::Result<()>\nwhere S: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31290,"byte_end":31349,"line_start":375,"line_end":375,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31354,"byte_end":31357,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Once registered, the `Poll` instance will monitor the event source for","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31362,"byte_end":31436,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/ readiness state changes. When it notices a state change, it will return","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31441,"byte_end":31516,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ a readiness event for the handle the next time [`poll`] is called.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31521,"byte_end":31591,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31596,"byte_end":31599,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ See [`Poll`] docs for a high level overview.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31604,"byte_end":31652,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31657,"byte_end":31660,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31665,"byte_end":31680,"line_start":383,"line_end":383,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31685,"byte_end":31688,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ `source: &S: event::Source`: This is the source of events that the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31693,"byte_end":31763,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/ `Poll` instance should monitor for readiness state changes.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31768,"byte_end":31831,"line_start":386,"line_end":386,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31836,"byte_end":31839,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ `token: Token`: The caller picks a token to associate with the socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31844,"byte_end":31918,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ When [`poll`] returns an event for the handle, this token is included.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31923,"byte_end":31997,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ This allows the caller to map the event to its source. The token","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32002,"byte_end":32070,"line_start":390,"line_end":390,"column_start":5,"column_end":73}},{"value":"/ associated with the `event::Source` can be changed at any time by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32075,"byte_end":32144,"line_start":391,"line_end":391,"column_start":5,"column_end":74}},{"value":"/ calling [`reregister`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32149,"byte_end":32176,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32181,"byte_end":32184,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ See documentation on [`Token`] for an example showing how to pick","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32189,"byte_end":32258,"line_start":394,"line_end":394,"column_start":5,"column_end":74}},{"value":"/ [`Token`] values.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32263,"byte_end":32284,"line_start":395,"line_end":395,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32289,"byte_end":32292,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ `interest: Interest`: Specifies which operations `Poll` should monitor","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32297,"byte_end":32371,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ for readiness. `Poll` will only return readiness events for operations","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32376,"byte_end":32450,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ specified by this argument.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32455,"byte_end":32486,"line_start":399,"line_end":399,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32491,"byte_end":32494,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If a socket is registered with readable interest and the socket becomes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32499,"byte_end":32574,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ writable, no event will be returned from [`poll`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32579,"byte_end":32633,"line_start":402,"line_end":402,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32638,"byte_end":32641,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The readiness interest for an `event::Source` can be changed at any time","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32646,"byte_end":32722,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ by calling [`reregister`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32727,"byte_end":32757,"line_start":405,"line_end":405,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32762,"byte_end":32765,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32770,"byte_end":32781,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32786,"byte_end":32789,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure that if a source being registered with a `Poll`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32794,"byte_end":32865,"line_start":409,"line_end":409,"column_start":5,"column_end":76}},{"value":"/ instance was previously registered with that `Poll` instance, then a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32870,"byte_end":32942,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/ call to [`deregister`] has already occurred. Consecutive calls to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":32947,"byte_end":33016,"line_start":411,"line_end":411,"column_start":5,"column_end":74}},{"value":"/ `register` is undefined behavior.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33021,"byte_end":33058,"line_start":412,"line_end":412,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33063,"byte_end":33066,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Unless otherwise specified, the caller should assume that once an event","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33071,"byte_end":33146,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ source is registered with a `Poll` instance, it is bound to that `Poll`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33151,"byte_end":33226,"line_start":415,"line_end":415,"column_start":5,"column_end":80}},{"value":"/ instance for the lifetime of the event source. This remains true even","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33231,"byte_end":33304,"line_start":416,"line_end":416,"column_start":5,"column_end":78}},{"value":"/ if the event source is deregistered from the poll instance using","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33309,"byte_end":33377,"line_start":417,"line_end":417,"column_start":5,"column_end":73}},{"value":"/ [`deregister`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33382,"byte_end":33401,"line_start":418,"line_end":418,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33406,"byte_end":33409,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33414,"byte_end":33462,"line_start":420,"line_end":420,"column_start":5,"column_end":53}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33467,"byte_end":33509,"line_start":421,"line_end":421,"column_start":5,"column_end":47}},{"value":"/ [`reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33514,"byte_end":33572,"line_start":422,"line_end":422,"column_start":5,"column_end":63}},{"value":"/ [`deregister`]: struct.Registry.html#method.deregister","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33577,"byte_end":33635,"line_start":423,"line_end":423,"column_start":5,"column_end":63}},{"value":"/ [`Token`]: struct.Token.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33640,"byte_end":33672,"line_start":424,"line_end":424,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33677,"byte_end":33680,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33685,"byte_end":33699,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33704,"byte_end":33707,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33869,"byte_end":33897,"line_start":430,"line_end":430,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33902,"byte_end":33921,"line_start":431,"line_end":431,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33926,"byte_end":33973,"line_start":432,"line_end":432,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":33978,"byte_end":34023,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34028,"byte_end":34056,"line_start":434,"line_end":434,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34061,"byte_end":34090,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34095,"byte_end":34134,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34139,"byte_end":34142,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34147,"byte_end":34179,"line_start":438,"line_end":438,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34184,"byte_end":34187,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34192,"byte_end":34245,"line_start":440,"line_end":440,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34250,"byte_end":34302,"line_start":441,"line_end":441,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34307,"byte_end":34372,"line_start":442,"line_end":442,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34377,"byte_end":34380,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34385,"byte_end":34423,"line_start":444,"line_end":444,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34428,"byte_end":34457,"line_start":445,"line_end":445,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34462,"byte_end":34482,"line_start":446,"line_end":446,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34487,"byte_end":34504,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34509,"byte_end":34559,"line_start":448,"line_end":448,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34564,"byte_end":34567,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34572,"byte_end":34621,"line_start":450,"line_end":450,"column_start":5,"column_end":54}},{"value":"/ let start = Instant::now();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34626,"byte_end":34657,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/ let timeout = Duration::from_millis(500);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34662,"byte_end":34707,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34712,"byte_end":34715,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34720,"byte_end":34730,"line_start":454,"line_end":454,"column_start":5,"column_end":15}},{"value":"/     let elapsed = start.elapsed();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34735,"byte_end":34773,"line_start":455,"line_end":455,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34778,"byte_end":34781,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     if elapsed >= timeout {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34786,"byte_end":34817,"line_start":457,"line_end":457,"column_start":5,"column_end":36}},{"value":"/         // Connection timed out","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34822,"byte_end":34857,"line_start":458,"line_end":458,"column_start":5,"column_end":40}},{"value":"/         return Ok(());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34862,"byte_end":34888,"line_start":459,"line_end":459,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34893,"byte_end":34902,"line_start":460,"line_end":460,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34907,"byte_end":34910,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/     let remaining = timeout - elapsed;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34915,"byte_end":34957,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/     poll.poll(&mut events, Some(remaining))?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":34962,"byte_end":35011,"line_start":463,"line_end":463,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35016,"byte_end":35019,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35024,"byte_end":35054,"line_start":465,"line_end":465,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35059,"byte_end":35101,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/             // Something (probably) happened on the socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35106,"byte_end":35169,"line_start":467,"line_end":467,"column_start":5,"column_end":68}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35174,"byte_end":35204,"line_start":468,"line_end":468,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35209,"byte_end":35222,"line_start":469,"line_end":469,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35227,"byte_end":35236,"line_start":470,"line_end":470,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35241,"byte_end":35246,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35251,"byte_end":35258,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35263,"byte_end":35270,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37958,"byte_end":37968,"line_start":542,"line_end":542,"column_start":12,"column_end":22},"name":"reregister","qualname":"<Registry>::reregister","value":"pub fn reregister<S: ?Sized>(&Self, &mut S, Token, Interest) -> io::Result<()>\nwhere S: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Re-register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Re-register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35628,"byte_end":35690,"line_start":486,"line_end":486,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35695,"byte_end":35698,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Re-registering an event source allows changing the details of the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35703,"byte_end":35772,"line_start":488,"line_end":488,"column_start":5,"column_end":74}},{"value":"/ registration. Specifically, it allows updating the associated `token`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35777,"byte_end":35850,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ and `interests` specified in previous `register` and `reregister` calls.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35855,"byte_end":35931,"line_start":490,"line_end":490,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35936,"byte_end":35939,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ The `reregister` arguments fully override the previous values. In other","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":35944,"byte_end":36019,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/ words, if a socket is registered with [`readable`] interest and the call","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36024,"byte_end":36100,"line_start":493,"line_end":493,"column_start":5,"column_end":81}},{"value":"/ to `reregister` specifies [`writable`], then read interest is no longer","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36105,"byte_end":36180,"line_start":494,"line_end":494,"column_start":5,"column_end":80}},{"value":"/ requested for the handle.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36185,"byte_end":36214,"line_start":495,"line_end":495,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36219,"byte_end":36222,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36227,"byte_end":36303,"line_start":497,"line_end":497,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is undefined.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36308,"byte_end":36359,"line_start":498,"line_end":498,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36364,"byte_end":36367,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ See the [`register`] documentation for details about the function","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36372,"byte_end":36441,"line_start":500,"line_end":500,"column_start":5,"column_end":74}},{"value":"/ arguments and see the [`struct`] docs for a high level overview of","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36446,"byte_end":36516,"line_start":501,"line_end":501,"column_start":5,"column_end":75}},{"value":"/ polling.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36521,"byte_end":36533,"line_start":502,"line_end":502,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36538,"byte_end":36541,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36546,"byte_end":36560,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36565,"byte_end":36568,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36730,"byte_end":36758,"line_start":508,"line_end":508,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36763,"byte_end":36782,"line_start":509,"line_end":509,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36787,"byte_end":36834,"line_start":510,"line_end":510,"column_start":5,"column_end":52}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36839,"byte_end":36876,"line_start":511,"line_end":511,"column_start":5,"column_end":42}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36881,"byte_end":36909,"line_start":512,"line_end":512,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36914,"byte_end":36943,"line_start":513,"line_end":513,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36948,"byte_end":36951,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36956,"byte_end":36984,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36989,"byte_end":36992,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":36997,"byte_end":37050,"line_start":517,"line_end":517,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37055,"byte_end":37107,"line_start":518,"line_end":518,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37112,"byte_end":37177,"line_start":519,"line_end":519,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37182,"byte_end":37185,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`, requesting readable","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37190,"byte_end":37249,"line_start":521,"line_end":521,"column_start":5,"column_end":64}},{"value":"/ poll.registry().register(","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37254,"byte_end":37283,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37288,"byte_end":37308,"line_start":523,"line_end":523,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37313,"byte_end":37330,"line_start":524,"line_end":524,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37335,"byte_end":37364,"line_start":525,"line_end":525,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37369,"byte_end":37372,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ // Reregister the socket specifying write interest instead. Even though","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37377,"byte_end":37452,"line_start":527,"line_end":527,"column_start":5,"column_end":80}},{"value":"/ // the token is the same it must be specified.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37457,"byte_end":37507,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ poll.registry().reregister(","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37512,"byte_end":37543,"line_start":529,"line_end":529,"column_start":5,"column_end":36}},{"value":"/     &mut socket,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37548,"byte_end":37568,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37573,"byte_end":37590,"line_start":531,"line_end":531,"column_start":5,"column_end":22}},{"value":"/     Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37595,"byte_end":37624,"line_start":532,"line_end":532,"column_start":5,"column_end":34}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37629,"byte_end":37645,"line_start":533,"line_end":533,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37650,"byte_end":37657,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37662,"byte_end":37669,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37674,"byte_end":37677,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37682,"byte_end":37730,"line_start":537,"line_end":537,"column_start":5,"column_end":53}},{"value":"/ [`struct`]: struct.Poll.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37735,"byte_end":37767,"line_start":538,"line_end":538,"column_start":5,"column_end":37}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37772,"byte_end":37826,"line_start":539,"line_end":539,"column_start":5,"column_end":59}},{"value":"/ [`readable`]: ./event/struct.Event.html#is_readable","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37831,"byte_end":37886,"line_start":540,"line_end":540,"column_start":5,"column_end":60}},{"value":"/ [`writable`]: ./event/struct.Event.html#is_writable","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":37891,"byte_end":37946,"line_start":541,"line_end":541,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40437,"byte_end":40447,"line_start":605,"line_end":605,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registry>::deregister","value":"pub fn deregister<S: ?Sized>(&Self, &mut S) -> io::Result<()> where\nS: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Deregister an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Deregister an [`event::Source`] with the `Poll` instance.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":38310,"byte_end":38371,"line_start":554,"line_end":554,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":38376,"byte_end":38379,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ When an event source is deregistered, the `Poll` instance will no longer","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":38384,"byte_end":38460,"line_start":556,"line_end":556,"column_start":5,"column_end":81}},{"value":"/ monitor it for readiness state changes. Deregistering clears up any","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":38465,"byte_end":38536,"line_start":557,"line_end":557,"column_start":5,"column_end":76}},{"value":"/ internal resources needed to track the handle.  After an explicit call","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":38541,"byte_end":38615,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ to this method completes, it is guaranteed that the token previously","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":38620,"byte_end":38692,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/ registered to this handle will not be returned by a future poll, so long","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":38697,"byte_end":38773,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ as a happens-before relationship is established between this call and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":38778,"byte_end":38851,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ the poll.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":38856,"byte_end":38869,"line_start":562,"line_end":562,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":38874,"byte_end":38877,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":38882,"byte_end":38958,"line_start":564,"line_end":564,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is undefined.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":38963,"byte_end":39014,"line_start":565,"line_end":565,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39019,"byte_end":39022,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ A handle can be passed back to `register` after it has been","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39027,"byte_end":39090,"line_start":567,"line_end":567,"column_start":5,"column_end":68}},{"value":"/ deregistered; however, it must be passed back to the **same** `Poll`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39095,"byte_end":39167,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ instance, otherwise the behavior is undefined.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39172,"byte_end":39222,"line_start":569,"line_end":569,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39227,"byte_end":39230,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39235,"byte_end":39249,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39254,"byte_end":39257,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39419,"byte_end":39447,"line_start":575,"line_end":575,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39452,"byte_end":39471,"line_start":576,"line_end":576,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39476,"byte_end":39523,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39528,"byte_end":39573,"line_start":578,"line_end":578,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39578,"byte_end":39606,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39611,"byte_end":39640,"line_start":580,"line_end":580,"column_start":5,"column_end":34}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39645,"byte_end":39673,"line_start":581,"line_end":581,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39678,"byte_end":39681,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39686,"byte_end":39718,"line_start":583,"line_end":583,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39723,"byte_end":39726,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39731,"byte_end":39784,"line_start":585,"line_end":585,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39789,"byte_end":39841,"line_start":586,"line_end":586,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39846,"byte_end":39911,"line_start":587,"line_end":587,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39916,"byte_end":39919,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39924,"byte_end":39962,"line_start":589,"line_end":589,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":39967,"byte_end":39996,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40001,"byte_end":40021,"line_start":591,"line_end":591,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40026,"byte_end":40043,"line_start":592,"line_end":592,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40048,"byte_end":40077,"line_start":593,"line_end":593,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40082,"byte_end":40085,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ poll.registry().deregister(&mut socket)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40090,"byte_end":40135,"line_start":595,"line_end":595,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40140,"byte_end":40143,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40148,"byte_end":40197,"line_start":597,"line_end":597,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40202,"byte_end":40205,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ // Set a timeout because this poll should never receive any events.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40210,"byte_end":40281,"line_start":599,"line_end":599,"column_start":5,"column_end":76}},{"value":"/ poll.poll(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40286,"byte_end":40344,"line_start":600,"line_end":600,"column_start":5,"column_end":63}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40349,"byte_end":40380,"line_start":601,"line_end":601,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40385,"byte_end":40401,"line_start":602,"line_end":602,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40406,"byte_end":40413,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40418,"byte_end":40425,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40844,"byte_end":40853,"line_start":617,"line_end":617,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Registry>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned `Registry`.","sig":null,"attributes":[{"value":"/ Creates a new independently owned `Registry`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40644,"byte_end":40693,"line_start":613,"line_end":613,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40698,"byte_end":40701,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Event sources registered with this `Registry` will be registered with","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40706,"byte_end":40779,"line_start":615,"line_end":615,"column_start":5,"column_end":78}},{"value":"/ the original `Registry` and `Poll` instance.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":40784,"byte_end":40832,"line_start":616,"line_end":616,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955773,"byte_end":11955782,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"NamedPipe","qualname":"::sys::windows::named_pipe::NamedPipe","value":"NamedPipe {  }","parent":null,"children":[{"krate":0,"index":1284}],"decl_id":null,"docs":" Non-blocking windows named pipe.","sig":null,"attributes":[{"value":"/ Non-blocking windows named pipe.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11953692,"byte_end":11953728,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11953729,"byte_end":11953732,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This structure internally contains a `HANDLE` which represents the named","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11953733,"byte_end":11953809,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ pipe, and also maintains state associated with the mio event loop and active","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11953810,"byte_end":11953890,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ I/O operations that have been scheduled to translate IOCP to a readiness","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11953891,"byte_end":11953967,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ model.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11953968,"byte_end":11953978,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11953979,"byte_end":11953982,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note, IOCP is a *completion* based model whereas mio is a *readiness* based","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11953983,"byte_end":11954062,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ model. To bridge this, `NamedPipe` performs internal buffering. Writes are","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954063,"byte_end":11954141,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ written to an internal buffer and the buffer is submitted to IOCP. IOCP","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954142,"byte_end":11954217,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ reads are submitted using internal buffers and `NamedPipe::read` reads from","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954218,"byte_end":11954297,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ this internal buffer.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954298,"byte_end":11954323,"line_start":31,"line_end":31,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954324,"byte_end":11954327,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Trait implementations","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954328,"byte_end":11954355,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954356,"byte_end":11954359,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The `Read` and `Write` traits are implemented for `NamedPipe` and for","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954360,"byte_end":11954433,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ `&NamedPipe`. This represents that a named pipe can be concurrently read and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954434,"byte_end":11954514,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ written to and also can be read and written to at all. Typically a named","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954515,"byte_end":11954591,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ pipe needs to be connected to a client before it can be read or written,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954592,"byte_end":11954668,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ however.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954669,"byte_end":11954681,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954682,"byte_end":11954685,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Note that for I/O operations on a named pipe to succeed then the named pipe","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954686,"byte_end":11954765,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ needs to be associated with an event loop. Until this happens all I/O","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954766,"byte_end":11954839,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ operations will return a \"would block\" error.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954840,"byte_end":11954889,"line_start":43,"line_end":43,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954890,"byte_end":11954893,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Managing connections","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954894,"byte_end":11954920,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954921,"byte_end":11954924,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The `NamedPipe` type supports a `connect` method to connect to a client and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11954925,"byte_end":11955004,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ a `disconnect` method to disconnect from that client. These two methods only","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955005,"byte_end":11955085,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ work once a named pipe is associated with an event loop.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955086,"byte_end":11955146,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955147,"byte_end":11955150,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The `connect` method will succeed asynchronously and a completion can be","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955151,"byte_end":11955227,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ detected once the object receives a writable notification.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955228,"byte_end":11955290,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955291,"byte_end":11955294,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Named pipe clients","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955295,"byte_end":11955319,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955320,"byte_end":11955323,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Currently to create a client of a named pipe server then you can use the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955324,"byte_end":11955400,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ `OpenOptions` type in the standard library to create a `File` that connects","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955401,"byte_end":11955480,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ to a named pipe. Afterwards you can use the `into_raw_handle` method coupled","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955481,"byte_end":11955561,"line_start":58,"line_end":58,"column_start":1,"column_end":81}},{"value":"/ with the `NamedPipe::from_raw_handle` method to convert that to a named pipe","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955562,"byte_end":11955642,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ that can operate asynchronously. Don't forget to pass the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955643,"byte_end":11955704,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/ `FILE_FLAG_OVERLAPPED` flag when opening the `File`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11955705,"byte_end":11955761,"line_start":61,"line_end":61,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11958766,"byte_end":11958769,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"new","qualname":"<NamedPipe>::new","value":"pub fn new<A: AsRef<OsStr>>(A) -> io::Result<NamedPipe>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new named pipe at the specified `addr` given a \"reasonable\n set\" of initial configuration options.\n","sig":null,"attributes":[{"value":"/ Creates a new named pipe at the specified `addr` given a \"reasonable","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11958635,"byte_end":11958707,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ set\" of initial configuration options.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11958712,"byte_end":11958754,"line_start":161,"line_end":161,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11960034,"byte_end":11960041,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"connect","qualname":"<NamedPipe>::connect","value":"pub fn connect(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to call `ConnectNamedPipe`, if possible.","sig":null,"attributes":[{"value":"/ Attempts to call `ConnectNamedPipe`, if possible.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959054,"byte_end":11959107,"line_start":169,"line_end":169,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959112,"byte_end":11959115,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to connect this pipe to a client in an","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959120,"byte_end":11959189,"line_start":171,"line_end":171,"column_start":5,"column_end":74}},{"value":"/ asynchronous fashion. If the function immediately establishes a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959194,"byte_end":11959261,"line_start":172,"line_end":172,"column_start":5,"column_end":72}},{"value":"/ connection to a client then `Ok(())` is returned. Otherwise if a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959266,"byte_end":11959334,"line_start":173,"line_end":173,"column_start":5,"column_end":73}},{"value":"/ connection attempt was issued and is now in progress then a \"would","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959339,"byte_end":11959409,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ block\" error is returned.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959414,"byte_end":11959443,"line_start":175,"line_end":175,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959448,"byte_end":11959451,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ When the connection is finished then this object will be flagged as","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959456,"byte_end":11959527,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ being ready for a write, or otherwise in the writable state.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959532,"byte_end":11959596,"line_start":178,"line_end":178,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959601,"byte_end":11959604,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959609,"byte_end":11959621,"line_start":180,"line_end":180,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959626,"byte_end":11959629,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This function will return a \"would block\" error if the pipe has not yet","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959634,"byte_end":11959709,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ been registered with an event loop, if the connection operation has","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959714,"byte_end":11959785,"line_start":183,"line_end":183,"column_start":5,"column_end":76}},{"value":"/ previously been issued but has not yet completed, or if the connect","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959790,"byte_end":11959861,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/ itself was issued and didn't finish immediately.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959866,"byte_end":11959918,"line_start":185,"line_end":185,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959923,"byte_end":11959926,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Normal I/O errors from the call to `ConnectNamedPipe` are returned","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11959931,"byte_end":11960001,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ immediately.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11960006,"byte_end":11960022,"line_start":188,"line_end":188,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962323,"byte_end":11962333,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"take_error","qualname":"<NamedPipe>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Takes any internal error that has happened after the last I/O operation\n which hasn't been retrieved yet.","sig":null,"attributes":[{"value":"/ Takes any internal error that has happened after the last I/O operation","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11961773,"byte_end":11961848,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ which hasn't been retrieved yet.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11961853,"byte_end":11961889,"line_start":233,"line_end":233,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11961894,"byte_end":11961897,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ This is particularly useful when detecting failed attempts to `connect`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11961902,"byte_end":11961978,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ After a completed `connect` flags this pipe as writable then callers","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11961983,"byte_end":11962055,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ must invoke this method to determine whether the connection actually","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962060,"byte_end":11962132,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/ succeeded. If this function returns `None` then a client is connected,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962137,"byte_end":11962211,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ otherwise it returns an error of what happened and a client shouldn't be","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962216,"byte_end":11962292,"line_start":239,"line_end":239,"column_start":5,"column_end":81}},{"value":"/ connected.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962297,"byte_end":11962311,"line_start":240,"line_end":240,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962794,"byte_end":11962804,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<NamedPipe>::disconnect","value":"pub fn disconnect(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this named pipe from a connected client.","sig":null,"attributes":[{"value":"/ Disconnects this named pipe from a connected client.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962450,"byte_end":11962506,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962511,"byte_end":11962514,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This function will disconnect the pipe from a connected client, if any,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962519,"byte_end":11962594,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ transitively calling the `DisconnectNamedPipe` function.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962599,"byte_end":11962659,"line_start":248,"line_end":248,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962664,"byte_end":11962667,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ After a `disconnect` is issued, then a `connect` may be called again to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962672,"byte_end":11962747,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ connect to another client.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962752,"byte_end":11962782,"line_start":251,"line_end":251,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":49293,"byte_end":49298,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Token","qualname":"::token::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Associates readiness events with [`event::Source`]s.","sig":null,"attributes":[{"value":"/ Associates readiness events with [`event::Source`]s.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44342,"byte_end":44398,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44399,"byte_end":44402,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Token` is a wrapper around `usize` and is used as an argument to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44403,"byte_end":44472,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ [`Registry::register`] and [`Registry::reregister`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44473,"byte_end":44529,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44530,"byte_end":44533,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44534,"byte_end":44585,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44586,"byte_end":44589,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44590,"byte_end":44638,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44639,"byte_end":44669,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ [`Registry::register`]: struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44670,"byte_end":44734,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`Registry::reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44735,"byte_end":44803,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44804,"byte_end":44807,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44808,"byte_end":44821,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44822,"byte_end":44825,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Using `Token` to track which socket generated the event. In this example,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44826,"byte_end":44903,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ `HashMap` is used, but usually something like [`slab`] is better.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44904,"byte_end":44973,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44974,"byte_end":44977,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/slab","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":44978,"byte_end":45021,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45022,"byte_end":45025,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45175,"byte_end":45203,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45204,"byte_end":45251,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45252,"byte_end":45297,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45298,"byte_end":45328,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45329,"byte_end":45332,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45333,"byte_end":45353,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45354,"byte_end":45384,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45385,"byte_end":45419,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45420,"byte_end":45423,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // After this number of sockets is accepted, the server will shutdown.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45424,"byte_end":45498,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ const MAX_SOCKETS: usize = 32;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45499,"byte_end":45533,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45534,"byte_end":45537,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Pick a token that will not be used by any other socket and use that one","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45538,"byte_end":45616,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ // for the listener.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45617,"byte_end":45641,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ const LISTENER: Token = Token(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45642,"byte_end":45682,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45683,"byte_end":45686,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Used to store the sockets.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45687,"byte_end":45720,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ let mut sockets = HashMap::new();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45721,"byte_end":45758,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45759,"byte_end":45762,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // This is used to generate a unique token for a socket","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45763,"byte_end":45822,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ let mut next_socket_index = 0;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45823,"byte_end":45857,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45858,"byte_end":45861,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The `Poll` instance","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45862,"byte_end":45888,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45889,"byte_end":45921,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45922,"byte_end":45925,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Tcp listener","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45926,"byte_end":45945,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":45946,"byte_end":46012,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46013,"byte_end":46016,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46017,"byte_end":46045,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(&mut listener, LISTENER, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46046,"byte_end":46121,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46122,"byte_end":46125,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Spawn a thread that will connect a bunch of sockets then close them","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46126,"byte_end":46200,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46201,"byte_end":46239,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46240,"byte_end":46267,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     use std::net::TcpStream;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46268,"byte_end":46300,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46301,"byte_end":46304,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // +1 here is to connect an extra socket to signal the socket to close","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46305,"byte_end":46383,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/     for _ in 0..(MAX_SOCKETS+1) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46384,"byte_end":46421,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/         // Connect then drop the socket","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46422,"byte_end":46465,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         let _ = TcpStream::connect(addr).unwrap();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46466,"byte_end":46520,"line_start":61,"line_end":61,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46521,"byte_end":46530,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46531,"byte_end":46538,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46539,"byte_end":46542,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Event storage","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46543,"byte_end":46563,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46564,"byte_end":46613,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46614,"byte_end":46617,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Read buffer, this will never actually get filled","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46618,"byte_end":46673,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ let mut buf = [0; 256];","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46674,"byte_end":46701,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46702,"byte_end":46705,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // The main event loop","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46706,"byte_end":46732,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46733,"byte_end":46743,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     // Wait for events","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46744,"byte_end":46770,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46771,"byte_end":46809,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46810,"byte_end":46813,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46814,"byte_end":46844,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/         match event.token() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46845,"byte_end":46878,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/             LISTENER => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46879,"byte_end":46908,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/                 // Perform operations in a loop until `WouldBlock` is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46909,"byte_end":46982,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/                 // encountered.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":46983,"byte_end":47018,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47019,"byte_end":47045,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/                     match listener.accept() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47046,"byte_end":47095,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/                         Ok((mut socket, _)) => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47096,"byte_end":47148,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/                             // Shutdown the server","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47149,"byte_end":47203,"line_start":84,"line_end":84,"column_start":1,"column_end":55}},{"value":"/                             if next_socket_index == MAX_SOCKETS {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47204,"byte_end":47273,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/                                 return Ok(());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47274,"byte_end":47324,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/                             }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47325,"byte_end":47358,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47359,"byte_end":47362,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/                             // Get the token for the socket","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47363,"byte_end":47426,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/                             let token = Token(next_socket_index);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47427,"byte_end":47496,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/                             next_socket_index += 1;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47497,"byte_end":47552,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47553,"byte_end":47556,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/                             // Register the new socket w/ poll","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47557,"byte_end":47623,"line_start":93,"line_end":93,"column_start":1,"column_end":67}},{"value":"/                             poll.registry().register(&mut socket, token, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47624,"byte_end":47722,"line_start":94,"line_end":94,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47723,"byte_end":47726,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                             // Store the socket","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47727,"byte_end":47778,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/                             sockets.insert(token, socket);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47779,"byte_end":47841,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/                         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47842,"byte_end":47871,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47872,"byte_end":47956,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop accepting","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":47957,"byte_end":48035,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/                             break;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48036,"byte_end":48074,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48075,"byte_end":48104,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48105,"byte_end":48180,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48181,"byte_end":48206,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48207,"byte_end":48228,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48229,"byte_end":48246,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/             token => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48247,"byte_end":48273,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/                 // Always operate in a loop","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48274,"byte_end":48321,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48322,"byte_end":48348,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/                     match sockets.get_mut(&token).unwrap().read(&mut buf) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48349,"byte_end":48428,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/                         Ok(0) => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48429,"byte_end":48467,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"/                             // Socket is closed, remove it from the map","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48468,"byte_end":48543,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/                             sockets.remove(&token);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48544,"byte_end":48599,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/                             break;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48600,"byte_end":48638,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48639,"byte_end":48668,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/                         // Data is not actually sent in this example","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48669,"byte_end":48741,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/                         Ok(_) => unreachable!(),","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48742,"byte_end":48794,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48795,"byte_end":48879,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop reading","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48880,"byte_end":48956,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/                             break;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48957,"byte_end":48995,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":48996,"byte_end":49025,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":49026,"byte_end":49101,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":49102,"byte_end":49127,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":49128,"byte_end":49149,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":49150,"byte_end":49167,"line_start":125,"line_end":125,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":49168,"byte_end":49181,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":49182,"byte_end":49191,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":49192,"byte_end":49197,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":49198,"byte_end":49205,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":49206,"byte_end":49213,"line_start":130,"line_end":130,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\token.rs","byte_start":49299,"byte_end":49308,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"name":"0","qualname":"::token::Token::0","value":"usize","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51973,"byte_end":51978,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Waker","qualname":"::waker::Waker","value":"Waker {  }","parent":null,"children":[{"krate":0,"index":1455}],"decl_id":null,"docs":" Waker allows cross-thread waking of [`Poll`].","sig":null,"attributes":[{"value":"/ Waker allows cross-thread waking of [`Poll`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49455,"byte_end":49504,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49505,"byte_end":49508,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ When created it will cause events with [`readable`] readiness and the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49509,"byte_end":49582,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ provided `token` if [`wake`] is called, possibly from another thread.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49583,"byte_end":49656,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49657,"byte_end":49660,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49661,"byte_end":49691,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49692,"byte_end":49754,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ [`wake`]: struct.Waker.html#method.wake","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49755,"byte_end":49798,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49799,"byte_end":49802,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49803,"byte_end":49814,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49815,"byte_end":49818,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Waker` events are only guaranteed to be delivered while the `Waker` value","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49819,"byte_end":49897,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is alive.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49898,"byte_end":49911,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49912,"byte_end":49915,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Only a single `Waker` can be active per [`Poll`], if multiple threads need","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49916,"byte_end":49994,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ access to the `Waker` it can be shared via for example an `Arc`. What","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":49995,"byte_end":50068,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ happens if multiple `Waker`s are registered with the same `Poll` is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50069,"byte_end":50140,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ undefined.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50141,"byte_end":50155,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50156,"byte_end":50159,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50160,"byte_end":50186,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50187,"byte_end":50190,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ On platforms that support kqueue this will use the `EVFILT_USER` event","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50191,"byte_end":50265,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ filter, see [implementation notes of `Poll`] to see what platforms support","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50266,"byte_end":50344,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ kqueue. On Linux it uses [eventfd].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50345,"byte_end":50384,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50385,"byte_end":50388,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [implementation notes of `Poll`]: struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50389,"byte_end":50464,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ [eventfd]: http://man7.org/linux/man-pages/man2/eventfd.2.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50465,"byte_end":50531,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50532,"byte_end":50535,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50536,"byte_end":50550,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50551,"byte_end":50554,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Wake a [`Poll`] instance from another thread.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50555,"byte_end":50604,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50605,"byte_end":50608,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50712,"byte_end":50771,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50772,"byte_end":50792,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50793,"byte_end":50821,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50822,"byte_end":50845,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50846,"byte_end":50849,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ use mio::{Events, Token, Poll, Waker};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50850,"byte_end":50892,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50893,"byte_end":50896,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ const WAKE_TOKEN: Token = Token(10);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50897,"byte_end":50937,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50938,"byte_end":50941,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50942,"byte_end":50974,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(2);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":50975,"byte_end":51021,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51022,"byte_end":51025,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let waker = Arc::new(Waker::new(poll.registry(), WAKE_TOKEN)?);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51026,"byte_end":51093,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51094,"byte_end":51097,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // We need to keep the Waker alive, so we'll create a clone for the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51098,"byte_end":51169,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ // thread we create below.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51170,"byte_end":51200,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ let waker1 = waker.clone();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51201,"byte_end":51232,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ let handle = thread::spawn(move || {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51233,"byte_end":51273,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/     // Working hard, or hardly working?","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51274,"byte_end":51317,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51318,"byte_end":51368,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51369,"byte_end":51372,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     // Now we'll wake the queue on the other thread.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51373,"byte_end":51429,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/     waker1.wake().expect(\"unable to wake\");","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51430,"byte_end":51477,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51478,"byte_end":51485,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51486,"byte_end":51489,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // On our current thread we'll poll for events, without a timeout.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51490,"byte_end":51560,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51561,"byte_end":51595,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51596,"byte_end":51599,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // After about 500 milliseconds we should be awoken by the other thread and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51600,"byte_end":51679,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ // get a single event.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51680,"byte_end":51706,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/ assert!(!events.is_empty());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51707,"byte_end":51739,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ let waker_event = events.iter().next().unwrap();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51740,"byte_end":51792,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/ assert!(waker_event.is_readable());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51793,"byte_end":51832,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(waker_event.token(), WAKE_TOKEN);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51833,"byte_end":51881,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51882,"byte_end":51911,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51912,"byte_end":51928,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51929,"byte_end":51936,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":51937,"byte_end":51944,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":52061,"byte_end":52064,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Waker>::new","value":"pub fn new(&Registry, Token) -> io::Result<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Waker`.\n","sig":null,"attributes":[{"value":"/ Create a new `Waker`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":52024,"byte_end":52049,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":52398,"byte_end":52402,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"wake","qualname":"<Waker>::wake","value":"pub fn wake(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wake up the [`Poll`] associated with this `Waker`.","sig":null,"attributes":[{"value":"/ Wake up the [`Poll`] associated with this `Waker`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":52289,"byte_end":52343,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":52348,"byte_end":52351,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":52356,"byte_end":52386,"line_start":92,"line_end":92,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\mod.rs","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":150},{"krate":0,"index":182},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215}],"decl_id":null,"docs":" Readiness event types and utilities.\n","sig":null,"attributes":[{"value":"/ Readiness event types and utilities.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\mod.rs","byte_start":52465,"byte_end":52505,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53082,"byte_end":53087,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":1459}],"decl_id":null,"docs":" A readiness event.","sig":null,"attributes":[{"value":"/ A readiness event.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":52716,"byte_end":52738,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":52739,"byte_end":52742,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `Event` is a readiness state paired with a [`Token`]. It is returned by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":52743,"byte_end":52818,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ [`Poll::poll`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":52819,"byte_end":52838,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":52839,"byte_end":52842,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For more documentation on polling and events, see [`Poll`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":52843,"byte_end":52906,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":52907,"byte_end":52910,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":52911,"byte_end":52962,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":52963,"byte_end":52996,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ [`Token`]: ../struct.Token.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":52997,"byte_end":53032,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53050,"byte_end":53070,"line_start":16,"line_end":16,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53175,"byte_end":53180,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"token","qualname":"<Event>::token","value":"pub fn token(&Self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" Returns the event's token.\n","sig":null,"attributes":[{"value":"/ Returns the event's token.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53133,"byte_end":53163,"line_start":22,"line_end":22,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53319,"byte_end":53330,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Event>::is_readable","value":"pub fn is_readable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains readable readiness.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53249,"byte_end":53307,"line_start":27,"line_end":27,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53474,"byte_end":53485,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Event>::is_writable","value":"pub fn is_writable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains writable readiness.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53404,"byte_end":53462,"line_start":32,"line_end":32,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54487,"byte_end":54495,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Event>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains error readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains error readiness.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53559,"byte_end":53614,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53619,"byte_end":53622,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Error events occur when the socket enters an error state. In this case,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53627,"byte_end":53702,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ the socket will also receive a readable or writable event. Reading or","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53707,"byte_end":53780,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ writing to the socket will result in an error.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53785,"byte_end":53835,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53840,"byte_end":53843,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53848,"byte_end":53859,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53864,"byte_end":53867,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53872,"byte_end":53947,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ error event.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53952,"byte_end":53968,"line_start":46,"line_end":46,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53973,"byte_end":53976,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53981,"byte_end":54041,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54046,"byte_end":54049,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54054,"byte_end":54093,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54098,"byte_end":54137,"line_start":51,"line_end":51,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLERR`      |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54142,"byte_end":54181,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | `EV_ERROR` and `EV_EOF` with `fflags` set to `0`. |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54186,"byte_end":54259,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54264,"byte_end":54267,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54272,"byte_end":54331,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54336,"byte_end":54398,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54403,"byte_end":54475,"line_start":57,"line_end":57,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55808,"byte_end":55822,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Event>::is_read_closed","value":"pub fn is_read_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains read closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains read closed readiness.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54566,"byte_end":54627,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54632,"byte_end":54635,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54640,"byte_end":54651,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54656,"byte_end":54659,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Read closed readiness can be expected after any of the following have","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54664,"byte_end":54737,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ occurred:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54742,"byte_end":54755,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/ * The local stream has shutdown the read half of its socket","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54760,"byte_end":54823,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/ * The local stream has shutdown both the read half and the write half","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54828,"byte_end":54901,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/   of its socket","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54906,"byte_end":54925,"line_start":70,"line_end":70,"column_start":5,"column_end":24}},{"value":"/ * The peer stream has shutdown the write half its socket; this sends a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":54930,"byte_end":55004,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/   `FIN` packet that has been received by the local stream","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55009,"byte_end":55070,"line_start":72,"line_end":72,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55075,"byte_end":55078,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55083,"byte_end":55155,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ return readiness when read half is closed, it is guaranteed that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55160,"byte_end":55228,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/ false-positives will not occur.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55233,"byte_end":55268,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55273,"byte_end":55276,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55281,"byte_end":55341,"line_start":78,"line_end":78,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55346,"byte_end":55349,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55354,"byte_end":55393,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55398,"byte_end":55437,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55442,"byte_end":55481,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/ |               | `EPOLLIN` and `EPOLLRDHUP` |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55486,"byte_end":55536,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55541,"byte_end":55580,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55585,"byte_end":55588,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55593,"byte_end":55652,"line_start":86,"line_end":86,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55657,"byte_end":55719,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55724,"byte_end":55796,"line_start":88,"line_end":88,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57053,"byte_end":57068,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Event>::is_write_closed","value":"pub fn is_write_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains write closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains write closed readiness.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55899,"byte_end":55961,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55966,"byte_end":55969,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55974,"byte_end":55985,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55990,"byte_end":55993,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ On [epoll] this is essentially a check for `EPOLLHUP` flag as the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":55998,"byte_end":56067,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ local stream shutting down its write half does not trigger this event.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56072,"byte_end":56146,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56151,"byte_end":56154,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ On [kqueue] the local stream shutting down the write half of its","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56159,"byte_end":56227,"line_start":100,"line_end":100,"column_start":5,"column_end":73}},{"value":"/ socket will trigger this event.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56232,"byte_end":56267,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56272,"byte_end":56275,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56280,"byte_end":56352,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ return readiness when write half is closed, it is guaranteed that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56357,"byte_end":56426,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ false-positives will not occur.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56431,"byte_end":56466,"line_start":105,"line_end":105,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56471,"byte_end":56474,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56479,"byte_end":56539,"line_start":107,"line_end":107,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56544,"byte_end":56547,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56552,"byte_end":56591,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56596,"byte_end":56635,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56640,"byte_end":56679,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/ |               | only `EPOLLERR`, or |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56684,"byte_end":56727,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ |               | `EPOLLOUT` and `EPOLLERR` |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56732,"byte_end":56781,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56786,"byte_end":56825,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56830,"byte_end":56833,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56838,"byte_end":56897,"line_start":116,"line_end":116,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56902,"byte_end":56964,"line_start":117,"line_end":117,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":56969,"byte_end":57041,"line_start":118,"line_end":118,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57839,"byte_end":57850,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<Event>::is_priority","value":"pub fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains priority readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains priority readiness.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57146,"byte_end":57204,"line_start":123,"line_end":123,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57209,"byte_end":57212,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57217,"byte_end":57228,"line_start":125,"line_end":125,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57233,"byte_end":57236,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57241,"byte_end":57316,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ priority event.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57321,"byte_end":57340,"line_start":128,"line_end":128,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57345,"byte_end":57348,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57353,"byte_end":57413,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57418,"byte_end":57421,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57426,"byte_end":57465,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57470,"byte_end":57509,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLPRI`      |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57514,"byte_end":57553,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | *Not supported* |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57558,"byte_end":57597,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57602,"byte_end":57605,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57610,"byte_end":57669,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57674,"byte_end":57736,"line_start":138,"line_end":138,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57741,"byte_end":57813,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57818,"byte_end":57827,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58655,"byte_end":58661,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"is_aio","qualname":"<Event>::is_aio","value":"pub fn is_aio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains AIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains AIO readiness.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57924,"byte_end":57977,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57982,"byte_end":57985,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":57990,"byte_end":58001,"line_start":147,"line_end":147,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58006,"byte_end":58009,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms support AIO.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58014,"byte_end":58090,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58095,"byte_end":58098,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58103,"byte_end":58163,"line_start":151,"line_end":151,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58168,"byte_end":58171,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58176,"byte_end":58215,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58220,"byte_end":58259,"line_start":154,"line_end":154,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | *Not supported* |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58264,"byte_end":58303,"line_start":155,"line_end":155,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]<sup>1</sup> | `EVFILT_AIO` |","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58308,"byte_end":58351,"line_start":156,"line_end":156,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58356,"byte_end":58359,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ 1: Only supported on DragonFly BSD, FreeBSD, iOS and macOS.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58364,"byte_end":58427,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58432,"byte_end":58435,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58440,"byte_end":58499,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58504,"byte_end":58566,"line_start":161,"line_end":161,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58571,"byte_end":58643,"line_start":162,"line_end":162,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58965,"byte_end":58971,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"is_lio","qualname":"<Event>::is_lio","value":"pub fn is_lio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains LIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains LIO readiness.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58730,"byte_end":58783,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58788,"byte_end":58791,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58796,"byte_end":58807,"line_start":169,"line_end":169,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58812,"byte_end":58815,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but only FreeBSD supports LIO. On","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58820,"byte_end":58895,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ FreeBSD this method checks the `EVFILT_LIO` flag.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":58900,"byte_end":58953,"line_start":172,"line_end":172,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61968,"byte_end":61974,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Events","qualname":"::event::events::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":161}],"decl_id":null,"docs":" A collection of readiness events.","sig":null,"attributes":[{"value":"/ A collection of readiness events.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":60858,"byte_end":60895,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":60896,"byte_end":60899,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `Events` is passed as an argument to [`Poll::poll`] and will be used to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":60900,"byte_end":60975,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ receive any new readiness events received since the last poll. Usually, a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":60976,"byte_end":61053,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ single `Events` instance is created at the same time as a [`Poll`] and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61054,"byte_end":61128,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ reused on each call to [`Poll::poll`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61129,"byte_end":61171,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61172,"byte_end":61175,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61176,"byte_end":61227,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61228,"byte_end":61231,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61232,"byte_end":61283,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61284,"byte_end":61317,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61318,"byte_end":61321,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61322,"byte_end":61336,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61337,"byte_end":61340,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61444,"byte_end":61472,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61473,"byte_end":61520,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61521,"byte_end":61549,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61550,"byte_end":61578,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61579,"byte_end":61582,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61583,"byte_end":61632,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61633,"byte_end":61665,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61666,"byte_end":61671,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # assert!(events.is_empty());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61672,"byte_end":61705,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61706,"byte_end":61709,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Register `event::Source`s with `poll`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61710,"byte_end":61755,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61756,"byte_end":61759,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61760,"byte_end":61822,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61823,"byte_end":61826,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61827,"byte_end":61859,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61860,"byte_end":61917,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61918,"byte_end":61923,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61924,"byte_end":61940,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61941,"byte_end":61948,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":61949,"byte_end":61956,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62807,"byte_end":62811,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"Iter","qualname":"::event::events::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465}],"decl_id":null,"docs":" [`Events`] iterator.","sig":null,"attributes":[{"value":"/ [`Events`] iterator.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62004,"byte_end":62028,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62029,"byte_end":62032,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Events`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62033,"byte_end":62097,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62098,"byte_end":62101,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Events`]: struct.Events.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62102,"byte_end":62136,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ [`iter`]: struct.Events.html#method.iter","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62137,"byte_end":62181,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62182,"byte_end":62185,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62186,"byte_end":62200,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62201,"byte_end":62204,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62308,"byte_end":62336,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62337,"byte_end":62384,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62385,"byte_end":62413,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62414,"byte_end":62442,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62443,"byte_end":62446,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62447,"byte_end":62496,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62497,"byte_end":62529,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62530,"byte_end":62533,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62534,"byte_end":62570,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62571,"byte_end":62574,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62575,"byte_end":62637,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62638,"byte_end":62641,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62642,"byte_end":62674,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62675,"byte_end":62732,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62733,"byte_end":62738,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62739,"byte_end":62755,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62756,"byte_end":62763,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62764,"byte_end":62771,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63146,"byte_end":63159,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Events>::with_capacity","value":"pub fn with_capacity(usize) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Events` capable of holding up to `capacity` events.","sig":null,"attributes":[{"value":"/ Return a new `Events` capable of holding up to `capacity` events.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62878,"byte_end":62947,"line_start":82,"line_end":82,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62952,"byte_end":62955,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62960,"byte_end":62974,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62979,"byte_end":62982,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62987,"byte_end":62994,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62999,"byte_end":63019,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63024,"byte_end":63027,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63032,"byte_end":63077,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63082,"byte_end":63122,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63127,"byte_end":63134,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63518,"byte_end":63526,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Events>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `Event` values that `self` can hold.","sig":null,"attributes":[{"value":"/ Returns the number of `Event` values that `self` can hold.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63284,"byte_end":63346,"line_start":98,"line_end":98,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63351,"byte_end":63354,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63359,"byte_end":63366,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63371,"byte_end":63391,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63396,"byte_end":63399,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63404,"byte_end":63449,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63454,"byte_end":63494,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63499,"byte_end":63506,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63832,"byte_end":63840,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Events>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains no `Event` values.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains no `Event` values.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63586,"byte_end":63642,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63647,"byte_end":63650,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63655,"byte_end":63669,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63674,"byte_end":63677,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63682,"byte_end":63689,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63694,"byte_end":63714,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63719,"byte_end":63722,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63727,"byte_end":63772,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63777,"byte_end":63808,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63813,"byte_end":63820,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64641,"byte_end":64645,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"iter","qualname":"<Events>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Event` values.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Event` values.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63899,"byte_end":63947,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63952,"byte_end":63955,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63960,"byte_end":63974,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":63979,"byte_end":63982,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64098,"byte_end":64126,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64131,"byte_end":64178,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64183,"byte_end":64211,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64216,"byte_end":64244,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64249,"byte_end":64252,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64257,"byte_end":64306,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64311,"byte_end":64343,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64348,"byte_end":64351,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64356,"byte_end":64392,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64397,"byte_end":64400,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64405,"byte_end":64467,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64472,"byte_end":64475,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ for event in events.iter() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64480,"byte_end":64512,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64517,"byte_end":64574,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64579,"byte_end":64584,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64589,"byte_end":64605,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64610,"byte_end":64617,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64622,"byte_end":64629,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65613,"byte_end":65618,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"clear","qualname":"<Events>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clearing all `Event` values from container explicitly.","sig":null,"attributes":[{"value":"/ Clearing all `Event` values from container explicitly.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64748,"byte_end":64806,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64811,"byte_end":64814,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64819,"byte_end":64830,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64835,"byte_end":64838,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Events are cleared before every `poll`, so it is not required to call","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64843,"byte_end":64916,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ this manually.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64921,"byte_end":64939,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64944,"byte_end":64947,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64952,"byte_end":64966,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":64971,"byte_end":64974,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65090,"byte_end":65118,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65123,"byte_end":65170,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65175,"byte_end":65203,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65208,"byte_end":65236,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65241,"byte_end":65244,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65249,"byte_end":65298,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65303,"byte_end":65335,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65340,"byte_end":65343,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65348,"byte_end":65384,"line_start":174,"line_end":174,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65389,"byte_end":65392,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65397,"byte_end":65459,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65464,"byte_end":65467,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // Clear all events.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65472,"byte_end":65496,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ events.clear();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65501,"byte_end":65520,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65525,"byte_end":65556,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65561,"byte_end":65577,"line_start":181,"line_end":181,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65582,"byte_end":65589,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65594,"byte_end":65601,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69198,"byte_end":69204,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"Source","qualname":"::event::source::Source","value":"Source","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"decl_id":null,"docs":" An event source that may be registered with [`Registry`].","sig":null,"attributes":[{"value":"/ An event source that may be registered with [`Registry`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":66649,"byte_end":66710,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":66711,"byte_end":66714,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Types that implement `event::Source` can be registered with","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":66715,"byte_end":66778,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ `Registry`. Users of Mio **should not** use the `event::Source` trait","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":66779,"byte_end":66852,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ functions directly. Instead, the equivalent functions on `Registry` should","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":66853,"byte_end":66931,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ be used.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":66932,"byte_end":66944,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":66945,"byte_end":66948,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`Registry`] for more details.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":66949,"byte_end":66987,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":66988,"byte_end":66991,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Registry`]: ../struct.Registry.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":66992,"byte_end":67033,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67034,"byte_end":67037,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Implementing `event::Source`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67038,"byte_end":67072,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67073,"byte_end":67076,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Event sources are always backed by system handles, such as sockets or other","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67077,"byte_end":67156,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ system handles. These `event::Source`s will be monitored by the system","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67157,"byte_end":67231,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ selector. An implementation of `Source` will almost always delegates to a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67232,"byte_end":67309,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ lower level handle. Examples of this are [`TcpStream`]s, or the *unix only*","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67310,"byte_end":67389,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ [`SourceFd`].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67390,"byte_end":67407,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67408,"byte_end":67411,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67412,"byte_end":67459,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ [`SourceFd`]: ../unix/struct.SourceFd.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67460,"byte_end":67506,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67507,"byte_end":67510,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Dropping `event::Source`s","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67511,"byte_end":67542,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67543,"byte_end":67546,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All `event::Source`s, unless otherwise specified, need to be [deregistered]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67547,"byte_end":67626,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ before being dropped for them to not leak resources. This goes against the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67627,"byte_end":67705,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ normal drop behaviour of types in Rust which cleanup after themselves, e.g.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67706,"byte_end":67785,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ a `File` will close itself. However since deregistering needs access to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67786,"byte_end":67861,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ [`Registry`] this cannot be done while being dropped.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67862,"byte_end":67919,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67920,"byte_end":67923,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [deregistered]: ../struct.Registry.html#method.deregister","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67924,"byte_end":67985,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67986,"byte_end":67989,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":67990,"byte_end":68004,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68005,"byte_end":68008,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Implementing `Source` on a struct containing a socket:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68009,"byte_end":68067,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68068,"byte_end":68071,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use mio::{Interest, Registry, Token};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68221,"byte_end":68262,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ use mio::event::Source;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68263,"byte_end":68290,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68291,"byte_end":68319,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68320,"byte_end":68323,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68324,"byte_end":68340,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68341,"byte_end":68344,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68345,"byte_end":68370,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ pub struct MySource {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68371,"byte_end":68396,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/     socket: TcpStream,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68397,"byte_end":68423,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68424,"byte_end":68429,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68430,"byte_end":68433,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Source for MySource {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68434,"byte_end":68464,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68465,"byte_end":68551,"line_start":55,"line_end":55,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68552,"byte_end":68581,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68582,"byte_end":68591,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `register` call to `socket`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68592,"byte_end":68647,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/         self.socket.register(registry, token, interests)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68648,"byte_end":68708,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68709,"byte_end":68718,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68719,"byte_end":68722,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68723,"byte_end":68811,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68812,"byte_end":68841,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68842,"byte_end":68851,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `reregister` call to `socket`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68852,"byte_end":68909,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/         self.socket.reregister(registry, token, interests)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68910,"byte_end":68972,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68973,"byte_end":68982,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68983,"byte_end":68986,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":68987,"byte_end":69060,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/         // Delegate the `deregister` call to `socket`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69061,"byte_end":69118,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/         self.socket.deregister(registry)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69119,"byte_end":69163,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69164,"byte_end":69173,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69174,"byte_end":69179,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69180,"byte_end":69187,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69556,"byte_end":69564,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"register","qualname":"::event::source::Source::register","value":"pub fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":" Register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Register `self` with the given `Registry` instance.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69211,"byte_end":69266,"line_start":76,"line_end":76,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69271,"byte_end":69274,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use [`Registry::register`]","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69279,"byte_end":69354,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ instead. Implementors should handle registration by delegating the call","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69359,"byte_end":69434,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to another `Source` type.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69439,"byte_end":69468,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69473,"byte_end":69476,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69481,"byte_end":69548,"line_start":82,"line_end":82,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":70059,"byte_end":70069,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"reregister","qualname":"::event::source::Source::reregister","value":"pub fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":" Re-register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Re-register `self` with the given `Registry` instance.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69695,"byte_end":69753,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69758,"byte_end":69761,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69766,"byte_end":69818,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/ [`Registry::reregister`] instead. Implementors should handle","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69823,"byte_end":69887,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/ re-registration by either delegating the call to another `Source` type.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69892,"byte_end":69967,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69972,"byte_end":69975,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`Registry::reregister`]: ../struct.Registry.html#method.reregister","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":69980,"byte_end":70051,"line_start":96,"line_end":96,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":70555,"byte_end":70565,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"deregister","qualname":"::event::source::Source::deregister","value":"pub fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":" Deregister `self` from the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Deregister `self` from the given `Registry` instance.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":70200,"byte_end":70257,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":70262,"byte_end":70265,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":70270,"byte_end":70322,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/ [`Registry::deregister`] instead. Implementors should handle","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":70327,"byte_end":70391,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ deregistration by delegating the call to another `Source` type.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":70396,"byte_end":70463,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":70468,"byte_end":70471,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`Registry::deregister`]: ../struct.Registry.html#method.deregister","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":70476,"byte_end":70547,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1838},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1943}],"decl_id":null,"docs":" Networking primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\macros.rs","byte_start":10432,"byte_end":10455,"line_start":42,"line_end":42,"column_start":13,"column_end":36}},{"value":"/ Networking primitives.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11988816,"byte_end":11988842,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11988843,"byte_end":11988846,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types provided in this module are non-blocking by default and are","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11988847,"byte_end":11988920,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ designed to be portable across all supported Mio platforms. As long as the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11988921,"byte_end":11988999,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ [portability guidelines] are followed, the behavior should be identical no","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11989000,"byte_end":11989078,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ matter the target platform.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11989079,"byte_end":11989110,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11989111,"byte_end":11989114,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [portability guidelines]: ../struct.Poll.html#portability","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\mod.rs","byte_start":11989115,"byte_end":11989176,"line_start":8,"line_end":8,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990715,"byte_end":11990726,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":1612}],"decl_id":null,"docs":" A structure representing a socket server","sig":null,"attributes":[{"value":"/ A structure representing a socket server","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11989916,"byte_end":11989960,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11989961,"byte_end":11989964,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11989965,"byte_end":11989979,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11989980,"byte_end":11989983,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990087,"byte_end":11990115,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990116,"byte_end":11990163,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990164,"byte_end":11990209,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990210,"byte_end":11990240,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990241,"byte_end":11990269,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990270,"byte_end":11990273,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:34255\".parse()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990274,"byte_end":11990344,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990345,"byte_end":11990348,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990349,"byte_end":11990381,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990382,"byte_end":11990430,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990431,"byte_end":11990434,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990435,"byte_end":11990473,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut listener, Token(0), Interest::READABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990474,"byte_end":11990549,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990550,"byte_end":11990553,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990554,"byte_end":11990616,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990617,"byte_end":11990620,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // There may be a socket ready to be accepted","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990621,"byte_end":11990670,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990671,"byte_end":11990687,"line_start":35,"line_end":35,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990688,"byte_end":11990695,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990696,"byte_end":11990703,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11991220,"byte_end":11991224,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"pub fn bind(SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to bind a new TCP listener to the specified address\n to receive new connections.","sig":null,"attributes":[{"value":"/ Convenience method to bind a new TCP listener to the specified address","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990794,"byte_end":11990868,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ to receive new connections.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990873,"byte_end":11990904,"line_start":44,"line_end":44,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990909,"byte_end":11990912,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function will take the following steps:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990917,"byte_end":11990965,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990970,"byte_end":11990973,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ 1. Create a new TCP socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990978,"byte_end":11991009,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/ 2. Set the `SO_REUSEADDR` option on the socket on Unix.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11991014,"byte_end":11991073,"line_start":49,"line_end":49,"column_start":5,"column_end":64}},{"value":"/ 3. Bind the socket to the specified address.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11991078,"byte_end":11991126,"line_start":50,"line_end":50,"column_start":5,"column_end":53}},{"value":"/ 4. Calls `listen` on the socket to prepare it to receive new connections.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11991131,"byte_end":11991208,"line_start":51,"line_end":51,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992276,"byte_end":11992284,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> TcpListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` from a standard `net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` from a standard `net::TcpListener`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11991926,"byte_end":11991993,"line_start":69,"line_end":69,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11991998,"byte_end":11992001,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992006,"byte_end":11992078,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992083,"byte_end":11992157,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; ; it is left up to the user to set it","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992162,"byte_end":11992234,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992239,"byte_end":11992264,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992799,"byte_end":11992805,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"pub fn accept(&Self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new `TcpStream`.","sig":null,"attributes":[{"value":"/ Accepts a new `TcpStream`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992417,"byte_end":11992447,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992452,"byte_end":11992455,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This may return an `Err(e)` where `e.kind()` is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992460,"byte_end":11992511,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ `io::ErrorKind::WouldBlock`. This means a stream may be ready at a later","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992516,"byte_end":11992592,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ point and one should wait for an event before calling `accept` again.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992597,"byte_end":11992670,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992675,"byte_end":11992678,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If an accepted stream is returned, the remote address of the peer is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992683,"byte_end":11992755,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned along with it.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11992760,"byte_end":11992787,"line_start":88,"line_end":88,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993071,"byte_end":11993081,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993005,"byte_end":11993059,"line_start":95,"line_end":95,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993345,"byte_end":11993352,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993160,"byte_end":11993218,"line_start":100,"line_end":100,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993223,"byte_end":11993226,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993231,"byte_end":11993307,"line_start":102,"line_end":102,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993312,"byte_end":11993333,"line_start":103,"line_end":103,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993622,"byte_end":11993625,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993433,"byte_end":11993491,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993496,"byte_end":11993499,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993504,"byte_end":11993570,"line_start":110,"line_end":110,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993575,"byte_end":11993578,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993583,"byte_end":11993610,"line_start":112,"line_end":112,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993943,"byte_end":11993953,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993690,"byte_end":11993748,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993753,"byte_end":11993756,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993761,"byte_end":11993835,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993840,"byte_end":11993916,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11993921,"byte_end":11993931,"line_start":121,"line_end":121,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11996679,"byte_end":11996688,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":1947}],"decl_id":null,"docs":" A non-blocking TCP socket used to configure a stream or listener.","sig":null,"attributes":[{"value":"/ A non-blocking TCP socket used to configure a stream or listener.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11996320,"byte_end":11996389,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11996390,"byte_end":11996393,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `TcpSocket` type wraps the operating-system's socket handle. This type","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11996394,"byte_end":11996472,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ is used to configure the socket before establishing a connection or start","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11996473,"byte_end":11996550,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ listening for inbound connections.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11996551,"byte_end":11996589,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11996590,"byte_end":11996593,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11996594,"byte_end":11996650,"line_start":19,"line_end":19,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11996820,"byte_end":11996832,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"TcpKeepalive","qualname":"::net::tcp::socket::TcpKeepalive","value":"TcpKeepalive {  }","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1952}],"decl_id":null,"docs":" Configures a socket's TCP keepalive parameters.\n","sig":null,"attributes":[{"value":"/ Configures a socket's TCP keepalive parameters.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11996724,"byte_end":11996775,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11997432,"byte_end":11997438,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new IPv4 TCP socket.","sig":null,"attributes":[{"value":"/ Create a new IPv4 TCP socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11997347,"byte_end":11997380,"line_start":49,"line_end":49,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11997385,"byte_end":11997388,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This calls `socket(2)`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11997393,"byte_end":11997420,"line_start":51,"line_end":51,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11997627,"byte_end":11997633,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new IPv6 TCP socket.","sig":null,"attributes":[{"value":"/ Create a new IPv6 TCP socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11997542,"byte_end":11997575,"line_start":56,"line_end":56,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11997580,"byte_end":11997583,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This calls `socket(2)`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11997588,"byte_end":11997615,"line_start":58,"line_end":58,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11997985,"byte_end":11997989,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind `addr` to the TCP socket.\n","sig":null,"attributes":[{"value":"/ Bind `addr` to the TCP socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11997939,"byte_end":11997973,"line_start":71,"line_end":71,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11998324,"byte_end":11998331,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub fn connect(Self, SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Connect the socket to `addr`.","sig":null,"attributes":[{"value":"/ Connect the socket to `addr`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11998085,"byte_end":11998118,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11998123,"byte_end":11998126,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This consumes the socket and performs the connect operation. Once the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11998131,"byte_end":11998204,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ connection completes, the socket is now a non-blocking `TcpStream` and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11998209,"byte_end":11998283,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ can be used as such.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11998288,"byte_end":11998312,"line_start":80,"line_end":80,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11998650,"byte_end":11998656,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Listen for inbound connections, converting the socket to a\n `TcpListener`.\n","sig":null,"attributes":[{"value":"/ Listen for inbound connections, converting the socket to a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11998553,"byte_end":11998615,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/ `TcpListener`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11998620,"byte_end":11998638,"line_start":90,"line_end":90,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11998948,"byte_end":11998961,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_REUSEADDR` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_REUSEADDR` on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11998884,"byte_end":11998936,"line_start":99,"line_end":99,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11999137,"byte_end":11999150,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"get_reuseaddr","qualname":"<TcpSocket>::get_reuseaddr","value":"pub fn get_reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_REUSEADDR` set on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of `SO_REUSEADDR` set on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11999070,"byte_end":11999125,"line_start":104,"line_end":104,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11999881,"byte_end":11999891,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpSocket>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_LINGER` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_LINGER` on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11999820,"byte_end":11999869,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000057,"byte_end":12000067,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"get_linger","qualname":"<TcpSocket>::get_linger","value":"pub fn get_linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of `SO_LINGER` on this socket\n","sig":null,"attributes":[{"value":"/ Gets the value of `SO_LINGER` on this socket","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11999997,"byte_end":12000045,"line_start":128,"line_end":128,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000220,"byte_end":12000240,"line_start":134,"line_end":134,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_RCVBUF` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_RCVBUF` on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000159,"byte_end":12000208,"line_start":133,"line_end":133,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001467,"byte_end":12001487,"line_start":158,"line_end":158,"column_start":12,"column_end":32},"name":"get_recv_buffer_size","qualname":"<TcpSocket>::get_recv_buffer_size","value":"pub fn get_recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_RCVBUF` set on this socket.","sig":null,"attributes":[{"value":"/ Get the value of `SO_RCVBUF` set on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000345,"byte_end":12000397,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000402,"byte_end":12000405,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000410,"byte_end":12000482,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000487,"byte_end":12000561,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_recv_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000566,"byte_end":12000634,"line_start":142,"line_end":142,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000639,"byte_end":12000661,"line_start":143,"line_end":143,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000666,"byte_end":12000669,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000674,"byte_end":12000749,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000754,"byte_end":12000828,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000833,"byte_end":12000909,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000914,"byte_end":12000933,"line_start":148,"line_end":148,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12000938,"byte_end":12001013,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001018,"byte_end":12001093,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001098,"byte_end":12001114,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket receive buffer in bytes. The","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001119,"byte_end":12001187,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001192,"byte_end":12001257,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001262,"byte_end":12001334,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001339,"byte_end":12001384,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001389,"byte_end":12001392,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001397,"byte_end":12001455,"line_start":157,"line_end":157,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001637,"byte_end":12001657,"line_start":163,"line_end":163,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_SNDBUF` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_SNDBUF` on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001576,"byte_end":12001625,"line_start":162,"line_end":162,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002881,"byte_end":12002901,"line_start":187,"line_end":187,"column_start":12,"column_end":32},"name":"get_send_buffer_size","qualname":"<TcpSocket>::get_send_buffer_size","value":"pub fn get_send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_SNDBUF` set on this socket.","sig":null,"attributes":[{"value":"/ Get the value of `SO_SNDBUF` set on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001762,"byte_end":12001814,"line_start":167,"line_end":167,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001819,"byte_end":12001822,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001827,"byte_end":12001899,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001904,"byte_end":12001978,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12001983,"byte_end":12002051,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002056,"byte_end":12002078,"line_start":172,"line_end":172,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002083,"byte_end":12002086,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002091,"byte_end":12002166,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002171,"byte_end":12002245,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002250,"byte_end":12002326,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002331,"byte_end":12002350,"line_start":177,"line_end":177,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002355,"byte_end":12002430,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002435,"byte_end":12002510,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002515,"byte_end":12002531,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002536,"byte_end":12002601,"line_start":181,"line_end":181,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002606,"byte_end":12002671,"line_start":182,"line_end":182,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002676,"byte_end":12002748,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002753,"byte_end":12002798,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002803,"byte_end":12002806,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002811,"byte_end":12002869,"line_start":186,"line_end":186,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003148,"byte_end":12003161,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpSocket>::set_keepalive","value":"pub fn set_keepalive(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12002990,"byte_end":12003064,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003069,"byte_end":12003072,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This will set the `SO_KEEPALIVE` option on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003077,"byte_end":12003136,"line_start":193,"line_end":193,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003358,"byte_end":12003371,"line_start":199,"line_end":199,"column_start":12,"column_end":25},"name":"get_keepalive","qualname":"<TcpSocket>::get_keepalive","value":"pub fn get_keepalive(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not TCP keepalive probes will be sent by this socket.\n","sig":null,"attributes":[{"value":"/ Returns whether or not TCP keepalive probes will be sent by this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003270,"byte_end":12003346,"line_start":198,"line_end":198,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12005167,"byte_end":12005187,"line_start":240,"line_end":240,"column_start":12,"column_end":32},"name":"set_keepalive_params","qualname":"<TcpSocket>::set_keepalive_params","value":"pub fn set_keepalive_params(&Self, TcpKeepalive) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets parameters configuring TCP keepalive probes for this socket.","sig":null,"attributes":[{"value":"/ Sets parameters configuring TCP keepalive probes for this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003454,"byte_end":12003523,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003528,"byte_end":12003531,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The supported parameters depend on the operating system, and are","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003536,"byte_end":12003604,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ configured using the [`TcpKeepalive`] struct. At a minimum, all systems","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003609,"byte_end":12003684,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ support configuring the [keepalive time]: the time after which the OS","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003689,"byte_end":12003762,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ will start sending keepalive messages on an idle connection.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003767,"byte_end":12003831,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003836,"byte_end":12003839,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003844,"byte_end":12003855,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003860,"byte_end":12003863,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ * This will enable TCP keepalive on this socket, if it is not already","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003868,"byte_end":12003941,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/   enabled.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003946,"byte_end":12003960,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/ * On some platforms, such as Windows, any keepalive parameters *not*","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12003965,"byte_end":12004037,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/   configured by the `TcpKeepalive` struct passed to this function may be","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004042,"byte_end":12004118,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/   overwritten with their default values. Therefore, this function should","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004123,"byte_end":12004199,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/   either only be called once per socket, or the same parameters should","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004204,"byte_end":12004278,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/   be passed every time it is called.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004283,"byte_end":12004323,"line_start":218,"line_end":218,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004328,"byte_end":12004331,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004336,"byte_end":12004350,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/ use mio::net::{TcpSocket, TcpKeepalive};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004466,"byte_end":12004510,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004515,"byte_end":12004543,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004548,"byte_end":12004551,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004556,"byte_end":12004603,"line_start":226,"line_end":226,"column_start":5,"column_end":52}},{"value":"/ let socket = TcpSocket::new_v6()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004608,"byte_end":12004646,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/ let keepalive = TcpKeepalive::default()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004651,"byte_end":12004694,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/     .with_time(Duration::from_secs(4));","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004699,"byte_end":12004742,"line_start":229,"line_end":229,"column_start":5,"column_end":48}},{"value":"/     // Depending on the target operating system, we may also be able to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004747,"byte_end":12004822,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/     // configure the keepalive probe interval and/or the number of retries","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004827,"byte_end":12004905,"line_start":231,"line_end":231,"column_start":5,"column_end":83}},{"value":"/     // here as well.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004910,"byte_end":12004934,"line_start":232,"line_end":232,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004939,"byte_end":12004942,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ socket.set_keepalive_params(keepalive)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004947,"byte_end":12004991,"line_start":234,"line_end":234,"column_start":5,"column_end":49}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12004996,"byte_end":12005010,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12005015,"byte_end":12005022,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12005027,"byte_end":12005030,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`TcpKeepalive`]: ../struct.TcpKeepalive.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12005035,"byte_end":12005084,"line_start":238,"line_end":238,"column_start":5,"column_end":54}},{"value":"/ [keepalive time]: ../struct.TcpKeepalive.html#method.with_time","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12005089,"byte_end":12005155,"line_start":239,"line_end":239,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12008364,"byte_end":12008377,"line_start":327,"line_end":327,"column_start":12,"column_end":25},"name":"get_localaddr","qualname":"<TcpSocket>::get_localaddr","value":"pub fn get_localaddr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address of this socket","sig":null,"attributes":[{"value":"/ Returns the local address of this socket","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12008224,"byte_end":12008268,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12008273,"byte_end":12008276,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` result in windows if called before calling `bind`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12008281,"byte_end":12008352,"line_start":326,"line_end":326,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010714,"byte_end":12010723,"line_start":417,"line_end":417,"column_start":12,"column_end":21},"name":"with_time","qualname":"<TcpKeepalive>::with_time","value":"pub fn with_time(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" on idle connections.","sig":null,"attributes":[{"value":"/ on idle connections.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010257,"byte_end":12010281,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010286,"byte_end":12010289,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This will set the value of `SO_KEEPALIVE` + `IPPROTO_TCP` on OpenBSD,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010294,"byte_end":12010367,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ NetBSD, and Haiku, `TCP_KEEPALIVE` on macOS and iOS, and `TCP_KEEPIDLE`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010372,"byte_end":12010447,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ on all other Unix operating systems. On Windows, this sets the value of","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010452,"byte_end":12010527,"line_start":412,"line_end":412,"column_start":5,"column_end":80}},{"value":"/ the `tcp_keepalive` struct's `keepalivetime` field.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010532,"byte_end":12010587,"line_start":413,"line_end":413,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010592,"byte_end":12010595,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010600,"byte_end":12010663,"line_start":415,"line_end":415,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010668,"byte_end":12010702,"line_start":416,"line_end":416,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12011686,"byte_end":12011699,"line_start":450,"line_end":450,"column_start":12,"column_end":25},"name":"with_interval","qualname":"<TcpKeepalive>::with_interval","value":"pub fn with_interval(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the time interval between TCP keepalive probes.\n This sets the value of `TCP_KEEPINTVL` on supported Unix operating\n systems. On Windows, this sets the value of the `tcp_keepalive` struct's\n `keepaliveinterval` field.","sig":null,"attributes":[{"value":"/ Sets the time interval between TCP keepalive probes.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010841,"byte_end":12010897,"line_start":424,"line_end":424,"column_start":5,"column_end":61}},{"value":"/ This sets the value of `TCP_KEEPINTVL` on supported Unix operating","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010902,"byte_end":12010972,"line_start":425,"line_end":425,"column_start":5,"column_end":75}},{"value":"/ systems. On Windows, this sets the value of the `tcp_keepalive` struct's","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010977,"byte_end":12011053,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ `keepaliveinterval` field.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12011058,"byte_end":12011088,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12011093,"byte_end":12011096,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12011101,"byte_end":12011164,"line_start":429,"line_end":429,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12011169,"byte_end":12011203,"line_start":430,"line_end":430,"column_start":5,"column_end":39}},{"value":"cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"ios\",\n          target_os = \"freebsd\", target_os = \"netbsd\", target_os =\n          \"windows\"))","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12011480,"byte_end":12011674,"line_start":442,"line_end":449,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12012719,"byte_end":12012722,"line_start":487,"line_end":487,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpKeepalive>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new, empty set of TCP keepalive parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new, empty set of TCP keepalive parameters.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12012650,"byte_end":12012707,"line_start":486,"line_end":486,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014195,"byte_end":12014204,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":1777}],"decl_id":null,"docs":" A non-blocking TCP stream between a local socket and a remote socket.","sig":null,"attributes":[{"value":"/ A non-blocking TCP stream between a local socket and a remote socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013163,"byte_end":12013236,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013237,"byte_end":12013240,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013241,"byte_end":12013297,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013298,"byte_end":12013301,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013302,"byte_end":12013316,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013317,"byte_end":12013320,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # use std::net::{TcpListener, SocketAddr};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013424,"byte_end":12013470,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013471,"byte_end":12013499,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013500,"byte_end":12013505,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013506,"byte_end":12013553,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013554,"byte_end":12013607,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ let listener = TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013608,"byte_end":12013655,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013656,"byte_end":12013701,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013702,"byte_end":12013730,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013731,"byte_end":12013759,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013760,"byte_end":12013763,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013764,"byte_end":12013829,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013830,"byte_end":12013833,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013834,"byte_end":12013866,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013867,"byte_end":12013915,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013916,"byte_end":12013919,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013920,"byte_end":12013958,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12013959,"byte_end":12014032,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014033,"byte_end":12014036,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014037,"byte_end":12014099,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014100,"byte_end":12014103,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // The socket might be ready at this point","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014104,"byte_end":12014150,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014151,"byte_end":12014167,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014168,"byte_end":12014175,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014176,"byte_end":12014183,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014374,"byte_end":12014381,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"pub fn connect(SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream and issue a non-blocking connect to the\n specified address.\n","sig":null,"attributes":[{"value":"/ Create a new TCP stream and issue a non-blocking connect to the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014268,"byte_end":12014335,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ specified address.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014340,"byte_end":12014362,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015071,"byte_end":12015079,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from a standard `net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpStream` from a standard `net::TcpStream`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014520,"byte_end":12014583,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014588,"byte_end":12014591,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014596,"byte_end":12014666,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014671,"byte_end":12014745,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014750,"byte_end":12014821,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014826,"byte_end":12014848,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014853,"byte_end":12014856,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014861,"byte_end":12014871,"line_start":64,"line_end":64,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014876,"byte_end":12014879,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The TCP stream here will not have `connect` called on it, so it","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014884,"byte_end":12014951,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014956,"byte_end":12015028,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015033,"byte_end":12015059,"line_start":68,"line_end":68,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015287,"byte_end":12015296,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015202,"byte_end":12015275,"line_start":75,"line_end":75,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015458,"byte_end":12015468,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015374,"byte_end":12015446,"line_start":80,"line_end":80,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015822,"byte_end":12015830,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015547,"byte_end":12015613,"line_start":85,"line_end":85,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015618,"byte_end":12015621,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015626,"byte_end":12015698,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015703,"byte_end":12015772,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015777,"byte_end":12015810,"line_start":89,"line_end":89,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016572,"byte_end":12016583,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015917,"byte_end":12015979,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015984,"byte_end":12015987,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12015992,"byte_end":12016061,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016066,"byte_end":12016139,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016144,"byte_end":12016217,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016222,"byte_end":12016297,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016302,"byte_end":12016320,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016325,"byte_end":12016328,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016333,"byte_end":12016344,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016349,"byte_end":12016352,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016357,"byte_end":12016433,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `nodelay` on an","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016438,"byte_end":12016505,"line_start":105,"line_end":105,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016510,"byte_end":12016560,"line_start":106,"line_end":106,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017118,"byte_end":12017125,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016677,"byte_end":12016739,"line_start":111,"line_end":111,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016744,"byte_end":12016747,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016752,"byte_end":12016822,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016827,"byte_end":12016830,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016835,"byte_end":12016866,"line_start":115,"line_end":115,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016871,"byte_end":12016874,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016879,"byte_end":12016890,"line_start":117,"line_end":117,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016895,"byte_end":12016898,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016903,"byte_end":12016979,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `nodelay` on an","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12016984,"byte_end":12017051,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017056,"byte_end":12017106,"line_start":121,"line_end":121,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017616,"byte_end":12017623,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017195,"byte_end":12017253,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017258,"byte_end":12017261,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017266,"byte_end":12017342,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017347,"byte_end":12017368,"line_start":129,"line_end":129,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017373,"byte_end":12017376,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017381,"byte_end":12017392,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017397,"byte_end":12017400,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017405,"byte_end":12017481,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `ttl` on an","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017486,"byte_end":12017549,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017554,"byte_end":12017604,"line_start":135,"line_end":135,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018129,"byte_end":12018132,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017704,"byte_end":12017762,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017767,"byte_end":12017770,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017775,"byte_end":12017841,"line_start":142,"line_end":142,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017846,"byte_end":12017849,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017854,"byte_end":12017865,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017870,"byte_end":12017873,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017878,"byte_end":12017954,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `ttl` on an","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12017959,"byte_end":12018022,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018027,"byte_end":12018077,"line_start":148,"line_end":148,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018082,"byte_end":12018085,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018090,"byte_end":12018117,"line_start":150,"line_end":150,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018450,"byte_end":12018460,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018197,"byte_end":12018255,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018260,"byte_end":12018263,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018268,"byte_end":12018342,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018347,"byte_end":12018423,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018428,"byte_end":12018438,"line_start":159,"line_end":159,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018898,"byte_end":12018902,"line_start":170,"line_end":170,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018546,"byte_end":12018616,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018621,"byte_end":12018690,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018695,"byte_end":12018734,"line_start":166,"line_end":166,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018739,"byte_end":12018742,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018747,"byte_end":12018821,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12018826,"byte_end":12018886,"line_start":169,"line_end":169,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025723,"byte_end":12025732,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":1897}],"decl_id":null,"docs":" A User Datagram Protocol socket.","sig":null,"attributes":[{"value":"/ A User Datagram Protocol socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023085,"byte_end":12023121,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023122,"byte_end":12023125,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of a bound UDP socket. This supports both IPv4 and","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023126,"byte_end":12023206,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ IPv6 addresses, and there is no corresponding notion of a server because UDP","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023207,"byte_end":12023287,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ is a datagram protocol.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023288,"byte_end":12023315,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023316,"byte_end":12023319,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023320,"byte_end":12023334,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023335,"byte_end":12023338,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023442,"byte_end":12023470,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023471,"byte_end":12023476,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023477,"byte_end":12023524,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ // An Echo program:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023525,"byte_end":12023548,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ // SENDER -> sends a message.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023549,"byte_end":12023582,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ // ECHOER -> listens and prints the message received.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023583,"byte_end":12023640,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023641,"byte_end":12023644,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023645,"byte_end":12023673,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023674,"byte_end":12023719,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023720,"byte_end":12023748,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023749,"byte_end":12023752,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ const SENDER: Token = Token(0);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023753,"byte_end":12023788,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ const ECHOER: Token = Token(1);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023789,"byte_end":12023824,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023825,"byte_end":12023828,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // This operation will fail if the address is in use, so we select different ports for each","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023829,"byte_end":12023924,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ // socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023925,"byte_end":12023939,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ let mut sender_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12023940,"byte_end":12024009,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ let mut echoer_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024010,"byte_end":12024079,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024080,"byte_end":12024083,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // If we do not use connect here, SENDER and ECHOER would need to call send_to and recv_from","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024084,"byte_end":12024180,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/ // respectively.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024181,"byte_end":12024201,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/ sender_socket.connect(echoer_socket.local_addr()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024202,"byte_end":12024258,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024259,"byte_end":12024262,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // We need a Poll to check if SENDER is ready to be written into, and if ECHOER is ready to be","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024263,"byte_end":12024361,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ // read from.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024362,"byte_end":12024379,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024380,"byte_end":12024412,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024413,"byte_end":12024416,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // We register our sockets here so that we can check if they are ready to be written/read.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024417,"byte_end":12024511,"line_start":59,"line_end":59,"column_start":1,"column_end":95}},{"value":"/ poll.registry().register(&mut sender_socket, SENDER, Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024512,"byte_end":12024590,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ poll.registry().register(&mut echoer_socket, ECHOER, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024591,"byte_end":12024669,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024670,"byte_end":12024673,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let msg_to_send = [9; 9];","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024674,"byte_end":12024703,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ let mut buffer = [0; 9];","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024704,"byte_end":12024732,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024733,"byte_end":12024736,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024737,"byte_end":12024785,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024786,"byte_end":12024796,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024797,"byte_end":12024863,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/     for event in events.iter() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024864,"byte_end":12024900,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024901,"byte_end":12024934,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/             // Our SENDER is ready to be written into.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024935,"byte_end":12024993,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/             SENDER => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12024994,"byte_end":12025021,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/                 let bytes_sent = sender_socket.send(&msg_to_send)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025022,"byte_end":12025093,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/                 assert_eq!(bytes_sent, 9);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025094,"byte_end":12025140,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/                 println!(\"sent {:?} -> {:?} bytes\", msg_to_send, bytes_sent);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025141,"byte_end":12025222,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/             },","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025223,"byte_end":12025241,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/             // Our ECHOER is ready to be read from.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025242,"byte_end":12025297,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/             ECHOER => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025298,"byte_end":12025325,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/                 let num_recv = echoer_socket.recv(&mut buffer)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025326,"byte_end":12025394,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/                 println!(\"echo {:?} -> {:?}\", buffer, num_recv);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025395,"byte_end":12025463,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/                 buffer = [0; 9];","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025464,"byte_end":12025500,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 # drop(buffer); // Silence unused assignment warning.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025501,"byte_end":12025574,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/                 # return Ok(());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025575,"byte_end":12025611,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"/             }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025612,"byte_end":12025629,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!()","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025630,"byte_end":12025665,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025666,"byte_end":12025679,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025680,"byte_end":12025689,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025690,"byte_end":12025695,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025696,"byte_end":12025703,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025704,"byte_end":12025711,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026706,"byte_end":12026710,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub fn bind(SocketAddr) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025796,"byte_end":12025844,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025849,"byte_end":12025852,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025857,"byte_end":12025871,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025876,"byte_end":12025879,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025995,"byte_end":12026023,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026028,"byte_end":12026033,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026038,"byte_end":12026085,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026090,"byte_end":12026118,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026123,"byte_end":12026126,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // We must bind it to an open address.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026131,"byte_end":12026173,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ let socket = match UdpSocket::bind(\"127.0.0.1:0\".parse()?) {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026178,"byte_end":12026242,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/     Ok(new_socket) => new_socket,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026247,"byte_end":12026284,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/     Err(fail) => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026289,"byte_end":12026311,"line_start":110,"line_end":110,"column_start":5,"column_end":27}},{"value":"/         // We panic! here, but you could try to bind it again on another address.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026316,"byte_end":12026401,"line_start":111,"line_end":111,"column_start":5,"column_end":90}},{"value":"/         panic!(\"Failed to bind socket. {:?}\", fail);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026406,"byte_end":12026462,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026467,"byte_end":12026476,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026481,"byte_end":12026487,"line_start":114,"line_end":114,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026492,"byte_end":12026495,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Our socket was created, but we should not use it before checking it's readiness.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026500,"byte_end":12026587,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ #    drop(socket); // Silence unused variable warning.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026592,"byte_end":12026650,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026655,"byte_end":12026670,"line_start":118,"line_end":118,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026675,"byte_end":12026682,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026687,"byte_end":12026694,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027161,"byte_end":12027169,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from a standard `net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from a standard `net::UdpSocket`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026821,"byte_end":12026884,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026889,"byte_end":12026892,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026897,"byte_end":12026967,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12026972,"byte_end":12027046,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027051,"byte_end":12027122,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027127,"byte_end":12027149,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028123,"byte_end":12028133,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address that this socket was created from.","sig":null,"attributes":[{"value":"/ Returns the socket address that this socket was created from.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027292,"byte_end":12027357,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027362,"byte_end":12027365,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027370,"byte_end":12027384,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027389,"byte_end":12027392,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027790,"byte_end":12027818,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027823,"byte_end":12027828,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027833,"byte_end":12027880,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027885,"byte_end":12027913,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027918,"byte_end":12027921,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027926,"byte_end":12027964,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12027969,"byte_end":12028009,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(socket.local_addr()?.ip(), addr.ip());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028014,"byte_end":12028067,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028072,"byte_end":12028087,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028092,"byte_end":12028099,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028104,"byte_end":12028111,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029015,"byte_end":12029022,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub fn send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028212,"byte_end":12028286,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028291,"byte_end":12028319,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028324,"byte_end":12028327,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of `ToSocketAddrs` trait. See its","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028332,"byte_end":12028405,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ documentation for concrete examples.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028410,"byte_end":12028450,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028455,"byte_end":12028458,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028463,"byte_end":12028477,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028482,"byte_end":12028485,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028490,"byte_end":12028503,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028508,"byte_end":12028536,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028541,"byte_end":12028588,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028593,"byte_end":12028621,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028626,"byte_end":12028629,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028634,"byte_end":12028692,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028697,"byte_end":12028700,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is writable before calling send_to,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028705,"byte_end":12028775,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028780,"byte_end":12028827,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028832,"byte_end":12028835,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let bytes_sent = socket.send_to(&[9; 9], \"127.0.0.1:11100\".parse()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028840,"byte_end":12028914,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(bytes_sent, 9);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028919,"byte_end":12028949,"line_start":183,"line_end":183,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028954,"byte_end":12028959,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028964,"byte_end":12028979,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028984,"byte_end":12028991,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12028996,"byte_end":12029003,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030323,"byte_end":12030332,"line_start":223,"line_end":223,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029157,"byte_end":12029231,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029236,"byte_end":12029287,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029292,"byte_end":12029295,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029300,"byte_end":12029311,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029316,"byte_end":12029319,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029324,"byte_end":12029399,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv_from returns the error","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029404,"byte_end":12029482,"line_start":198,"line_end":198,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029487,"byte_end":12029535,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029540,"byte_end":12029607,"line_start":200,"line_end":200,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029612,"byte_end":12029680,"line_start":201,"line_end":201,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029685,"byte_end":12029688,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029693,"byte_end":12029707,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029712,"byte_end":12029715,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029720,"byte_end":12029733,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029738,"byte_end":12029766,"line_start":206,"line_end":206,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029771,"byte_end":12029776,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029781,"byte_end":12029828,"line_start":208,"line_end":208,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029833,"byte_end":12029861,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029866,"byte_end":12029869,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029874,"byte_end":12029932,"line_start":211,"line_end":211,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029937,"byte_end":12029940,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12029945,"byte_end":12030017,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030022,"byte_end":12030069,"line_start":214,"line_end":214,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030074,"byte_end":12030077,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030082,"byte_end":12030107,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.recv_from(&mut buf)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030112,"byte_end":12030172,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030177,"byte_end":12030257,"line_start":218,"line_end":218,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030262,"byte_end":12030267,"line_start":219,"line_end":219,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030272,"byte_end":12030287,"line_start":220,"line_end":220,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030292,"byte_end":12030299,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030304,"byte_end":12030311,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031675,"byte_end":12031684,"line_start":259,"line_end":259,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub fn peek_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030459,"byte_end":12030535,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030540,"byte_end":12030616,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030621,"byte_end":12030639,"line_start":229,"line_end":229,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030644,"byte_end":12030647,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030652,"byte_end":12030663,"line_start":231,"line_end":231,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030668,"byte_end":12030671,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030676,"byte_end":12030751,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030756,"byte_end":12030834,"line_start":234,"line_end":234,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030839,"byte_end":12030887,"line_start":235,"line_end":235,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030892,"byte_end":12030959,"line_start":236,"line_end":236,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12030964,"byte_end":12031032,"line_start":237,"line_end":237,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031037,"byte_end":12031040,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031045,"byte_end":12031059,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031064,"byte_end":12031067,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031072,"byte_end":12031085,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031090,"byte_end":12031118,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031123,"byte_end":12031128,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031133,"byte_end":12031180,"line_start":244,"line_end":244,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031185,"byte_end":12031213,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031218,"byte_end":12031221,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031226,"byte_end":12031284,"line_start":247,"line_end":247,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031289,"byte_end":12031292,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031297,"byte_end":12031369,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031374,"byte_end":12031421,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031426,"byte_end":12031429,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031434,"byte_end":12031459,"line_start":252,"line_end":252,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.peek_from(&mut buf)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031464,"byte_end":12031524,"line_start":253,"line_end":253,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031529,"byte_end":12031609,"line_start":254,"line_end":254,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031614,"byte_end":12031619,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031624,"byte_end":12031639,"line_start":256,"line_end":256,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031644,"byte_end":12031651,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031656,"byte_end":12031663,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031955,"byte_end":12031959,"line_start":265,"line_end":265,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the address previously bound via connect(). On success,\n returns the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the address previously bound via connect(). On success,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031811,"byte_end":12031898,"line_start":263,"line_end":263,"column_start":5,"column_end":92}},{"value":"/ returns the number of bytes written.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12031903,"byte_end":12031943,"line_start":264,"line_end":264,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032583,"byte_end":12032587,"line_start":279,"line_end":279,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket previously bound with connect(). On success, returns\n the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket previously bound with connect(). On success, returns","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032063,"byte_end":12032149,"line_start":269,"line_end":269,"column_start":5,"column_end":91}},{"value":"/ the number of bytes read.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032154,"byte_end":12032183,"line_start":270,"line_end":270,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032188,"byte_end":12032191,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032196,"byte_end":12032207,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032212,"byte_end":12032215,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032220,"byte_end":12032295,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv returns the error","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032300,"byte_end":12032373,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032378,"byte_end":12032426,"line_start":276,"line_end":276,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032431,"byte_end":12032498,"line_start":277,"line_end":277,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032503,"byte_end":12032571,"line_start":278,"line_end":278,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033225,"byte_end":12033229,"line_start":293,"line_end":293,"column_start":12,"column_end":16},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032695,"byte_end":12032771,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032776,"byte_end":12032825,"line_start":284,"line_end":284,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032830,"byte_end":12032833,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032838,"byte_end":12032849,"line_start":286,"line_end":286,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032854,"byte_end":12032857,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032862,"byte_end":12032937,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12032942,"byte_end":12033015,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033020,"byte_end":12033068,"line_start":290,"line_end":290,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033073,"byte_end":12033140,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033145,"byte_end":12033213,"line_start":292,"line_end":292,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033521,"byte_end":12033528,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub fn connect(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for `send()`\n and limiting packets that are read via `recv` from the address specified\n in `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for `send()`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033337,"byte_end":12033409,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ and limiting packets that are read via `recv` from the address specified","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033414,"byte_end":12033490,"line_start":298,"line_end":298,"column_start":5,"column_end":81}},{"value":"/ in `addr`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033495,"byte_end":12033509,"line_start":299,"line_end":299,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034382,"byte_end":12034395,"line_start":328,"line_end":328,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033618,"byte_end":12033682,"line_start":304,"line_end":304,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033687,"byte_end":12033690,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033695,"byte_end":12033766,"line_start":306,"line_end":306,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033771,"byte_end":12033783,"line_start":307,"line_end":307,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033788,"byte_end":12033791,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033796,"byte_end":12033810,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033815,"byte_end":12033818,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033934,"byte_end":12033962,"line_start":313,"line_end":313,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033967,"byte_end":12033972,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12033977,"byte_end":12034024,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034029,"byte_end":12034057,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034062,"byte_end":12034065,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034070,"byte_end":12034138,"line_start":318,"line_end":318,"column_start":5,"column_end":73}},{"value":"/ if broadcast_socket.broadcast()? == false {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034143,"byte_end":12034190,"line_start":319,"line_end":319,"column_start":5,"column_end":52}},{"value":"/     broadcast_socket.set_broadcast(true)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034195,"byte_end":12034241,"line_start":320,"line_end":320,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034246,"byte_end":12034251,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034256,"byte_end":12034259,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, true);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034264,"byte_end":12034316,"line_start":323,"line_end":323,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034321,"byte_end":12034326,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034331,"byte_end":12034346,"line_start":325,"line_end":325,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034351,"byte_end":12034358,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034363,"byte_end":12034370,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035163,"byte_end":12035172,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034481,"byte_end":12034545,"line_start":332,"line_end":332,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034550,"byte_end":12034553,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034558,"byte_end":12034605,"line_start":334,"line_end":334,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034610,"byte_end":12034638,"line_start":335,"line_end":335,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034643,"byte_end":12034646,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034651,"byte_end":12034684,"line_start":337,"line_end":337,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034689,"byte_end":12034692,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034697,"byte_end":12034711,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034716,"byte_end":12034719,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034835,"byte_end":12034863,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034868,"byte_end":12034873,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034878,"byte_end":12034925,"line_start":345,"line_end":345,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034930,"byte_end":12034958,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034963,"byte_end":12034966,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12034971,"byte_end":12035039,"line_start":348,"line_end":348,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, false);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035044,"byte_end":12035097,"line_start":349,"line_end":349,"column_start":5,"column_end":58}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035102,"byte_end":12035107,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035112,"byte_end":12035127,"line_start":351,"line_end":351,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035132,"byte_end":12035139,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035144,"byte_end":12035151,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035476,"byte_end":12035497,"line_start":362,"line_end":362,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035244,"byte_end":12035313,"line_start":358,"line_end":358,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035318,"byte_end":12035321,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035326,"byte_end":12035400,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035405,"byte_end":12035464,"line_start":361,"line_end":361,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035827,"byte_end":12035844,"line_start":372,"line_end":372,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035591,"byte_end":12035660,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035665,"byte_end":12035668,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035673,"byte_end":12035720,"line_start":368,"line_end":368,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035725,"byte_end":12035761,"line_start":369,"line_end":369,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035766,"byte_end":12035769,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035774,"byte_end":12035815,"line_start":371,"line_end":371,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036305,"byte_end":12036325,"line_start":383,"line_end":383,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035924,"byte_end":12035992,"line_start":376,"line_end":376,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12035997,"byte_end":12036000,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036005,"byte_end":12036075,"line_start":378,"line_end":378,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036080,"byte_end":12036154,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036159,"byte_end":12036221,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036226,"byte_end":12036229,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036234,"byte_end":12036293,"line_start":382,"line_end":382,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036652,"byte_end":12036668,"line_start":393,"line_end":393,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036419,"byte_end":12036487,"line_start":387,"line_end":387,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036492,"byte_end":12036495,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036500,"byte_end":12036547,"line_start":389,"line_end":389,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036552,"byte_end":12036587,"line_start":390,"line_end":390,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036592,"byte_end":12036595,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036600,"byte_end":12036640,"line_start":392,"line_end":392,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036982,"byte_end":12037003,"line_start":401,"line_end":401,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036746,"byte_end":12036817,"line_start":397,"line_end":397,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036822,"byte_end":12036825,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036830,"byte_end":12036906,"line_start":399,"line_end":399,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12036911,"byte_end":12036970,"line_start":400,"line_end":400,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037335,"byte_end":12037352,"line_start":411,"line_end":411,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037097,"byte_end":12037168,"line_start":405,"line_end":405,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037173,"byte_end":12037176,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037181,"byte_end":12037228,"line_start":407,"line_end":407,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037233,"byte_end":12037269,"line_start":408,"line_end":408,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037274,"byte_end":12037277,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037282,"byte_end":12037323,"line_start":410,"line_end":410,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038141,"byte_end":12038148,"line_start":439,"line_end":439,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037432,"byte_end":12037490,"line_start":415,"line_end":415,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037495,"byte_end":12037498,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037503,"byte_end":12037579,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037584,"byte_end":12037605,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037610,"byte_end":12037613,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037618,"byte_end":12037632,"line_start":420,"line_end":420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037637,"byte_end":12037640,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037756,"byte_end":12037784,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037789,"byte_end":12037794,"line_start":425,"line_end":425,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037799,"byte_end":12037846,"line_start":426,"line_end":426,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037851,"byte_end":12037879,"line_start":427,"line_end":427,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037884,"byte_end":12037887,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037892,"byte_end":12037950,"line_start":429,"line_end":429,"column_start":5,"column_end":63}},{"value":"/ if socket.ttl()? < 255 {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037955,"byte_end":12037983,"line_start":430,"line_end":430,"column_start":5,"column_end":33}},{"value":"/     socket.set_ttl(255)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12037988,"byte_end":12038017,"line_start":431,"line_end":431,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038022,"byte_end":12038027,"line_start":432,"line_end":432,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038032,"byte_end":12038035,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038040,"byte_end":12038075,"line_start":434,"line_end":434,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038080,"byte_end":12038085,"line_start":435,"line_end":435,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038090,"byte_end":12038105,"line_start":436,"line_end":436,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038110,"byte_end":12038117,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038122,"byte_end":12038129,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038895,"byte_end":12038898,"line_start":466,"line_end":466,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038229,"byte_end":12038287,"line_start":443,"line_end":443,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038292,"byte_end":12038295,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038300,"byte_end":12038366,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038371,"byte_end":12038374,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038379,"byte_end":12038406,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038411,"byte_end":12038414,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038419,"byte_end":12038433,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038438,"byte_end":12038441,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038557,"byte_end":12038585,"line_start":453,"line_end":453,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038590,"byte_end":12038595,"line_start":454,"line_end":454,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038600,"byte_end":12038647,"line_start":455,"line_end":455,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038652,"byte_end":12038680,"line_start":456,"line_end":456,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038685,"byte_end":12038688,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038693,"byte_end":12038751,"line_start":458,"line_end":458,"column_start":5,"column_end":63}},{"value":"/ socket.set_ttl(255)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038756,"byte_end":12038781,"line_start":459,"line_end":459,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038786,"byte_end":12038789,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038794,"byte_end":12038829,"line_start":461,"line_end":461,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038834,"byte_end":12038839,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038844,"byte_end":12038859,"line_start":463,"line_end":463,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038864,"byte_end":12038871,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038876,"byte_end":12038883,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039442,"byte_end":12039459,"line_start":478,"line_end":478,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12038963,"byte_end":12039021,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039026,"byte_end":12039029,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039034,"byte_end":12039108,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039113,"byte_end":12039186,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039191,"byte_end":12039263,"line_start":474,"line_end":474,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039268,"byte_end":12039338,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039343,"byte_end":12039381,"line_start":476,"line_end":476,"column_start":5,"column_end":43}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039386,"byte_end":12039430,"line_start":477,"line_end":477,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039966,"byte_end":12039983,"line_start":488,"line_end":488,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039601,"byte_end":12039661,"line_start":482,"line_end":482,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039666,"byte_end":12039669,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039674,"byte_end":12039748,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039753,"byte_end":12039826,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039831,"byte_end":12039905,"line_start":486,"line_end":486,"column_start":5,"column_end":79}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12039910,"byte_end":12039954,"line_start":487,"line_end":487,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040386,"byte_end":12040404,"line_start":499,"line_end":499,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040119,"byte_end":12040178,"line_start":492,"line_end":492,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040183,"byte_end":12040186,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040191,"byte_end":12040238,"line_start":494,"line_end":494,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040243,"byte_end":12040275,"line_start":495,"line_end":495,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040280,"byte_end":12040283,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040288,"byte_end":12040325,"line_start":497,"line_end":497,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040330,"byte_end":12040374,"line_start":498,"line_end":498,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040816,"byte_end":12040834,"line_start":510,"line_end":510,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040547,"byte_end":12040608,"line_start":503,"line_end":503,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040613,"byte_end":12040616,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040621,"byte_end":12040668,"line_start":505,"line_end":505,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040673,"byte_end":12040705,"line_start":506,"line_end":506,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040710,"byte_end":12040713,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040718,"byte_end":12040755,"line_start":508,"line_end":508,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040760,"byte_end":12040804,"line_start":509,"line_end":509,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12041093,"byte_end":12041100,"line_start":516,"line_end":516,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<UdpSocket>::only_v6","value":"pub fn only_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_V6ONLY` option on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12040971,"byte_end":12041032,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12041037,"byte_end":12041081,"line_start":515,"line_end":515,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12041433,"byte_end":12041443,"line_start":525,"line_end":525,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12041180,"byte_end":12041238,"line_start":520,"line_end":520,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12041243,"byte_end":12041246,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12041251,"byte_end":12041325,"line_start":522,"line_end":522,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12041330,"byte_end":12041406,"line_start":523,"line_end":523,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12041411,"byte_end":12041421,"line_start":524,"line_end":524,"column_start":5,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2072,"byte_end":2079,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"name":"windows","qualname":"::windows","value":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":238}],"decl_id":null,"docs":" Windows only extensions.\n","sig":null,"attributes":[{"value":"cfg(all(windows, feature = \"os-ext\"))","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1959,"byte_end":1999,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/ Windows only extensions.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2086,"byte_end":2114,"line_start":90,"line_end":90,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2174,"byte_end":2182,"line_start":95,"line_end":95,"column_start":9,"column_end":17},"name":"features","qualname":"::features","value":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Mio's optional features.","sig":null,"attributes":[{"value":"/ # Mio's optional features.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2189,"byte_end":2219,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2224,"byte_end":2227,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This document describes the available features in Mio.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2232,"byte_end":2290,"line_start":98,"line_end":98,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2295,"byte_end":2298,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2449,"byte_end":2452,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Mio by default provides only a shell implementation, that `panic!`s the","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2457,"byte_end":2532,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ moment it is actually run. To run it requires OS support, this is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2537,"byte_end":2606,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ enabled by activating the `os-poll` feature.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2611,"byte_end":2659,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2664,"byte_end":2667,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This makes `Poll`, `Registry` and `Waker` functional.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2672,"byte_end":2729,"line_start":107,"line_end":107,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2734,"byte_end":2737,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2884,"byte_end":2887,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ `os-ext` enables additional OS specific facilities. These facilities can","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2892,"byte_end":2968,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ be found in the `unix` and `windows` module.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":2973,"byte_end":3021,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3026,"byte_end":3029,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3180,"byte_end":3183,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The `net` feature enables networking primitives in the `net` module.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3188,"byte_end":3260,"line_start":118,"line_end":118,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3272,"byte_end":3277,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"guide","qualname":"::guide","value":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Getting started guide.","sig":null,"attributes":[{"value":"/ # Getting started guide.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3284,"byte_end":3312,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3317,"byte_end":3320,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ In this guide we'll do the following:","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3325,"byte_end":3366,"line_start":124,"line_end":124,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3371,"byte_end":3374,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ 1. Create a [`Poll`] instance (and learn what it is).","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3379,"byte_end":3436,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ 2. Register an [event source].","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3441,"byte_end":3475,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/ 3. Create an event loop.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3480,"byte_end":3508,"line_start":128,"line_end":128,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3513,"byte_end":3516,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ At the end you'll have a very small (but quick) TCP server that accepts","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3521,"byte_end":3596,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ connections and then drops (disconnects) them.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3601,"byte_end":3651,"line_start":131,"line_end":131,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3656,"byte_end":3659,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ## 1. Creating a `Poll` instance","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3664,"byte_end":3700,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3705,"byte_end":3708,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Using Mio starts by creating a [`Poll`] instance, which monitors events","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3713,"byte_end":3788,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/ from the OS and puts them into [`Events`]. This allows us to execute I/O","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3793,"byte_end":3869,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ operations based on what operations are ready.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3874,"byte_end":3924,"line_start":137,"line_end":137,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3929,"byte_end":3932,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3937,"byte_end":3970,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/ [`Events`]: ../event/struct.Events.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":3975,"byte_end":4018,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4023,"byte_end":4026,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # use mio::{Poll, Events};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4144,"byte_end":4174,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4179,"byte_end":4219,"line_start":145,"line_end":145,"column_start":5,"column_end":45}},{"value":"/ // `Poll` allows for polling of readiness events.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4224,"byte_end":4277,"line_start":146,"line_end":146,"column_start":5,"column_end":58}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4282,"byte_end":4310,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ // `Events` is collection of readiness `Event`s and can be filled by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4315,"byte_end":4387,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"/ // calling `Poll::poll`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4392,"byte_end":4420,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ let events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4425,"byte_end":4469,"line_start":150,"line_end":150,"column_start":5,"column_end":49}},{"value":"/ # drop((poll, events));","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4474,"byte_end":4501,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4506,"byte_end":4518,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4523,"byte_end":4530,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4535,"byte_end":4542,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4547,"byte_end":4550,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ For example if we're using a [`TcpListener`],  we'll only want to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4555,"byte_end":4624,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/ attempt to accept an incoming connection *iff* any connections are","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4629,"byte_end":4699,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ queued and ready to be accepted. We don't want to waste our time if no","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4704,"byte_end":4778,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ connections are ready.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4783,"byte_end":4809,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4814,"byte_end":4817,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener`]: ../net/struct.TcpListener.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4822,"byte_end":4873,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4878,"byte_end":4881,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ## 2. Registering event source","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4886,"byte_end":4920,"line_start":163,"line_end":163,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4925,"byte_end":4928,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance that monitors events from the OS","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":4933,"byte_end":5009,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ for us, we need to provide it with a source of events. This is done by","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5014,"byte_end":5088,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ registering an [event source]. As the name “event source” suggests it is","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5093,"byte_end":5173,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ a source of events which can be polled using a `Poll` instance. On Unix","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5178,"byte_end":5253,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ systems this is usually a file descriptor, or a socket/handle on","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5258,"byte_end":5326,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ Windows.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5331,"byte_end":5343,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5348,"byte_end":5351,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ In the example below we'll use a [`TcpListener`] for which we'll receive","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5356,"byte_end":5432,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"/ an event (from [`Poll`]) once a connection is ready to be accepted.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5437,"byte_end":5508,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5513,"byte_end":5516,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [event source]: ../event/trait.Source.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5521,"byte_end":5567,"line_start":175,"line_end":175,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5572,"byte_end":5575,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5739,"byte_end":5771,"line_start":179,"line_end":179,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5776,"byte_end":5815,"line_start":180,"line_end":180,"column_start":5,"column_end":44}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5820,"byte_end":5860,"line_start":181,"line_end":181,"column_start":5,"column_end":45}},{"value":"/ # let poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5865,"byte_end":5895,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5900,"byte_end":5951,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"/ // Create a `TcpListener`, binding it to `address`.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":5956,"byte_end":6011,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ let mut listener = TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6016,"byte_end":6067,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6072,"byte_end":6075,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ // Next we register it with `Poll` to receive events for it. The `SERVER`","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6080,"byte_end":6157,"line_start":187,"line_end":187,"column_start":5,"column_end":82}},{"value":"/ // `Token` is used to determine that we received an event for the listener","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6162,"byte_end":6240,"line_start":188,"line_end":188,"column_start":5,"column_end":83}},{"value":"/ // later on.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6245,"byte_end":6261,"line_start":189,"line_end":189,"column_start":5,"column_end":21}},{"value":"/ const SERVER: Token = Token(0);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6266,"byte_end":6301,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6306,"byte_end":6379,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6384,"byte_end":6396,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6401,"byte_end":6408,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6413,"byte_end":6420,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6425,"byte_end":6428,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Multiple event sources can be [registered] (concurrently), so we can","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6433,"byte_end":6505,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/ monitor multiple sources at a time.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6510,"byte_end":6549,"line_start":197,"line_end":197,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6554,"byte_end":6557,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [registered]: ../struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6562,"byte_end":6619,"line_start":199,"line_end":199,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6624,"byte_end":6627,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ## 3. Creating the event loop","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6632,"byte_end":6665,"line_start":201,"line_end":201,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6670,"byte_end":6673,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance and registered one or more","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6678,"byte_end":6748,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/ [event sources] with it, we can [poll] it for events. Polling for events","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6753,"byte_end":6829,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ is simple, we need a container to store the events: [`Events`] and need","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6834,"byte_end":6909,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ to do something based on the polled events (this part is up to you, we","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6914,"byte_end":6988,"line_start":206,"line_end":206,"column_start":5,"column_end":79}},{"value":"/ can't do it all!). If we do this in a loop we've got ourselves an event","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":6993,"byte_end":7068,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ loop.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7073,"byte_end":7082,"line_start":208,"line_end":208,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7087,"byte_end":7090,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The example below shows the event loop in action, completing our small","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7095,"byte_end":7169,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ TCP server.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7174,"byte_end":7189,"line_start":211,"line_end":211,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7194,"byte_end":7197,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ [poll]: ../struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7202,"byte_end":7245,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/ [event sources]: ../event/trait.Source.html","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7250,"byte_end":7297,"line_start":214,"line_end":214,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7302,"byte_end":7305,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7469,"byte_end":7487,"line_start":218,"line_end":218,"column_start":5,"column_end":23}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7492,"byte_end":7522,"line_start":219,"line_end":219,"column_start":5,"column_end":35}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7527,"byte_end":7559,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest, Events};","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7564,"byte_end":7611,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7616,"byte_end":7651,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/ # let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7656,"byte_end":7690,"line_start":223,"line_end":223,"column_start":5,"column_end":39}},{"value":"/ # let mut events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7695,"byte_end":7745,"line_start":224,"line_end":224,"column_start":5,"column_end":55}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7750,"byte_end":7801,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/ # let mut listener = TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7806,"byte_end":7859,"line_start":226,"line_end":226,"column_start":5,"column_end":58}},{"value":"/ # const SERVER: Token = Token(0);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7864,"byte_end":7901,"line_start":227,"line_end":227,"column_start":5,"column_end":42}},{"value":"/ # poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7906,"byte_end":7981,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ // Start our event loop.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":7986,"byte_end":8014,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8019,"byte_end":8029,"line_start":230,"line_end":230,"column_start":5,"column_end":15}},{"value":"/     // Poll the OS for events, waiting at most 100 milliseconds.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8034,"byte_end":8102,"line_start":231,"line_end":231,"column_start":5,"column_end":73}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8107,"byte_end":8173,"line_start":232,"line_end":232,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8178,"byte_end":8181,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/     // Process each event.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8186,"byte_end":8216,"line_start":234,"line_end":234,"column_start":5,"column_end":35}},{"value":"/     for event in events.iter() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8221,"byte_end":8257,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/         // We can use the token we previously provided to `register` to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8262,"byte_end":8337,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/         // determine for which type the event is.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8342,"byte_end":8395,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/         match event.token() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8400,"byte_end":8433,"line_start":238,"line_end":238,"column_start":5,"column_end":38}},{"value":"/             SERVER => loop {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8438,"byte_end":8470,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/                 // One or more connections are ready, so we'll attempt to","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8475,"byte_end":8552,"line_start":240,"line_end":240,"column_start":5,"column_end":82}},{"value":"/                 // accept them (in a loop).","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8557,"byte_end":8604,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/                 match listener.accept() {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8609,"byte_end":8654,"line_start":242,"line_end":242,"column_start":5,"column_end":50}},{"value":"/                     Ok((connection, address)) => {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8659,"byte_end":8713,"line_start":243,"line_end":243,"column_start":5,"column_end":59}},{"value":"/                         println!(\"Got a connection from: {}\", address);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8718,"byte_end":8793,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ #                       drop(connection);","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8798,"byte_end":8843,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/                     },","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8848,"byte_end":8874,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/                     // A \"would block error\" is returned if the operation","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8879,"byte_end":8956,"line_start":247,"line_end":247,"column_start":5,"column_end":82}},{"value":"/                     // is not ready, so we'll stop trying to accept","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":8961,"byte_end":9032,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/                     // connections.","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9037,"byte_end":9076,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/                     Err(ref err) if would_block(err) => break,","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9081,"byte_end":9147,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/                     Err(err) => return Err(err),","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9152,"byte_end":9204,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/                 }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9209,"byte_end":9230,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9235,"byte_end":9252,"line_start":253,"line_end":253,"column_start":5,"column_end":22}},{"value":"/ #           _ => unreachable!(),","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9257,"byte_end":9293,"line_start":254,"line_end":254,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9298,"byte_end":9311,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9316,"byte_end":9325,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ #   return Ok(());","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9330,"byte_end":9352,"line_start":257,"line_end":257,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9357,"byte_end":9362,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9367,"byte_end":9370,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ fn would_block(err: &io::Error) -> bool {","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9375,"byte_end":9420,"line_start":260,"line_end":260,"column_start":5,"column_end":50}},{"value":"/     err.kind() == io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9425,"byte_end":9472,"line_start":261,"line_end":261,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9477,"byte_end":9482,"line_start":262,"line_end":262,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9487,"byte_end":9494,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":9499,"byte_end":9506,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":12397,"byte_end":12405,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":15336,"byte_end":15344,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":15487,"byte_end":15495,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":15623,"byte_end":15631,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25371,"byte_end":25375,"line_start":213,"line_end":213,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29590,"byte_end":29594,"line_start":319,"line_end":319,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31147,"byte_end":31151,"line_start":368,"line_end":368,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31275,"byte_end":31283,"line_start":374,"line_end":374,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":41321,"byte_end":41329,"line_start":633,"line_end":633,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\afd.rs","byte_start":11897196,"byte_end":11897213,"line_start":31,"line_end":31,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\afd.rs","byte_start":11897440,"byte_end":11897451,"line_start":42,"line_end":42,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\afd.rs","byte_start":11897578,"byte_end":11897581,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\afd.rs","byte_start":11901574,"byte_end":11901585,"line_start":161,"line_end":161,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\afd.rs","byte_start":11901687,"byte_end":11901690,"line_start":167,"line_end":167,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\io_status_block.rs","byte_start":11904780,"byte_end":11904793,"line_start":11,"line_end":11,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\io_status_block.rs","byte_start":11905004,"byte_end":11905017,"line_start":21,"line_end":21,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\io_status_block.rs","byte_start":11905037,"byte_end":11905050,"line_start":23,"line_end":23,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\io_status_block.rs","byte_start":11905170,"byte_end":11905183,"line_start":30,"line_end":30,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\io_status_block.rs","byte_start":11905286,"byte_end":11905299,"line_start":36,"line_end":36,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\event.rs","byte_start":11905664,"byte_end":11905669,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\event.rs","byte_start":11908815,"byte_end":11908821,"line_start":129,"line_end":129,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11910717,"byte_end":11910725,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11911123,"byte_end":11911131,"line_start":53,"line_end":53,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11912566,"byte_end":11912575,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11918582,"byte_end":11918591,"line_start":260,"line_end":260,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11919663,"byte_end":11919672,"line_start":291,"line_end":291,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11921386,"byte_end":11921394,"line_start":335,"line_end":335,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11922900,"byte_end":11922908,"line_start":387,"line_end":387,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11923833,"byte_end":11923846,"line_start":422,"line_end":422,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11923856,"byte_end":11923869,"line_start":424,"line_end":424,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11927791,"byte_end":11927804,"line_start":545,"line_end":545,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11933325,"byte_end":11933338,"line_start":694,"line_end":694,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\overlapped.rs","byte_start":11935649,"byte_end":11935659,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\overlapped.rs","byte_start":11936007,"byte_end":11936017,"line_start":30,"line_end":30,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\overlapped.rs","byte_start":11936159,"byte_end":11936169,"line_start":36,"line_end":36,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\overlapped.rs","byte_start":11936194,"byte_end":11936204,"line_start":37,"line_end":37,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\net.rs","byte_start":11938760,"byte_end":11938775,"line_start":57,"line_end":57,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11956307,"byte_end":11956312,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11958619,"byte_end":11958628,"line_start":159,"line_end":159,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962903,"byte_end":11962912,"line_start":257,"line_end":257,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11963902,"byte_end":11963911,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11964053,"byte_end":11964062,"line_start":290,"line_end":290,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11967330,"byte_end":11967339,"line_start":389,"line_end":389,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11969250,"byte_end":11969259,"line_start":464,"line_end":464,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11969376,"byte_end":11969385,"line_start":470,"line_end":470,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11969507,"byte_end":11969516,"line_start":476,"line_end":476,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11970091,"byte_end":11970096,"line_start":497,"line_end":497,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11978684,"byte_end":11978686,"line_start":734,"line_end":734,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11980086,"byte_end":11980096,"line_start":780,"line_end":780,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\waker.rs","byte_start":11936454,"byte_end":11936459,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\mod.rs","byte_start":11893461,"byte_end":11893474,"line_start":57,"line_end":57,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\mod.rs","byte_start":11893920,"byte_end":11893933,"line_start":72,"line_end":72,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":52012,"byte_end":52017,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53121,"byte_end":53126,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":59776,"byte_end":59781,"line_start":193,"line_end":193,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":60490,"byte_end":60502,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62865,"byte_end":62871,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65987,"byte_end":65991,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":66467,"byte_end":66473,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":70639,"byte_end":70642,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11982461,"byte_end":11982469,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11983769,"byte_end":11983777,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11984044,"byte_end":11984052,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11985133,"byte_end":11985141,"line_start":167,"line_end":167,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11986021,"byte_end":11986029,"line_start":201,"line_end":201,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11986334,"byte_end":11986344,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11988660,"byte_end":11988670,"line_start":286,"line_end":286,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990776,"byte_end":11990787,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11994060,"byte_end":11994071,"line_start":127,"line_end":127,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11994627,"byte_end":11994638,"line_start":151,"line_end":151,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11995376,"byte_end":11995387,"line_start":185,"line_end":185,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11995530,"byte_end":11995541,"line_start":192,"line_end":192,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1632}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11995670,"byte_end":11995681,"line_start":199,"line_end":199,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11997331,"byte_end":11997340,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12008478,"byte_end":12008487,"line_start":332,"line_end":332,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12009201,"byte_end":12009210,"line_start":369,"line_end":369,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12009683,"byte_end":12009692,"line_start":385,"line_end":385,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12009816,"byte_end":12009825,"line_start":392,"line_end":392,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010161,"byte_end":12010173,"line_start":406,"line_end":406,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014252,"byte_end":12014261,"line_start":49,"line_end":49,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12019001,"byte_end":12019010,"line_start":175,"line_end":175,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1791},{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12019622,"byte_end":12019631,"line_start":195,"line_end":195,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1804},{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12020444,"byte_end":12020453,"line_start":223,"line_end":223,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12021009,"byte_end":12021018,"line_start":247,"line_end":247,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12021744,"byte_end":12021753,"line_start":281,"line_end":281,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12021896,"byte_end":12021905,"line_start":288,"line_end":288,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1825}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12022034,"byte_end":12022043,"line_start":295,"line_end":295,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025780,"byte_end":12025789,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1904},{"krate":0,"index":1906},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12041550,"byte_end":12041559,"line_start":530,"line_end":530,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12042115,"byte_end":12042124,"line_start":554,"line_end":554,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12042850,"byte_end":12042859,"line_start":588,"line_end":588,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12043002,"byte_end":12043011,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12043140,"byte_end":12043149,"line_start":602,"line_end":602,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1376,"byte_end":1381,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":118}},{"kind":"Mod","span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\lib.rs","byte_start":1446,"byte_end":1449,"line_start":61,"line_end":61,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1555}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":12397,"byte_end":12405,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":15336,"byte_end":15344,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":2981}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":15487,"byte_end":15495,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":3007}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\interest.rs","byte_start":15623,"byte_end":15631,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":25371,"byte_end":25375,"line_start":213,"line_end":213,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":29590,"byte_end":29594,"line_start":319,"line_end":319,"column_start":10,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31147,"byte_end":31151,"line_start":368,"line_end":368,"column_start":21,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":71},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":31275,"byte_end":31283,"line_start":374,"line_end":374,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":73},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\poll.rs","byte_start":41321,"byte_end":41329,"line_start":633,"line_end":633,"column_start":21,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\afd.rs","byte_start":11897196,"byte_end":11897213,"line_start":31,"line_end":31,"column_start":22,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":2853}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\afd.rs","byte_start":11897440,"byte_end":11897451,"line_start":42,"line_end":42,"column_start":21,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\afd.rs","byte_start":11897578,"byte_end":11897581,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\afd.rs","byte_start":11901574,"byte_end":11901585,"line_start":161,"line_end":161,"column_start":10,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\afd.rs","byte_start":11901687,"byte_end":11901690,"line_start":167,"line_end":167,"column_start":10,"column_end":13},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\io_status_block.rs","byte_start":11904780,"byte_end":11904793,"line_start":11,"line_end":11,"column_start":10,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\io_status_block.rs","byte_start":11905004,"byte_end":11905017,"line_start":21,"line_end":21,"column_start":22,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":2853}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\io_status_block.rs","byte_start":11905037,"byte_end":11905050,"line_start":23,"line_end":23,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":3064}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\io_status_block.rs","byte_start":11905170,"byte_end":11905183,"line_start":30,"line_end":30,"column_start":19,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":3077}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\io_status_block.rs","byte_start":11905286,"byte_end":11905299,"line_start":36,"line_end":36,"column_start":21,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\event.rs","byte_start":11905664,"byte_end":11905669,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\event.rs","byte_start":11908815,"byte_end":11908821,"line_start":129,"line_end":129,"column_start":6,"column_end":12},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11910717,"byte_end":11910725,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11911123,"byte_end":11911131,"line_start":53,"line_end":53,"column_start":10,"column_end":18},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11912566,"byte_end":11912575,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11918582,"byte_end":11918591,"line_start":260,"line_end":260,"column_start":10,"column_end":19},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11919663,"byte_end":11919672,"line_start":291,"line_end":291,"column_start":15,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11921386,"byte_end":11921394,"line_start":335,"line_end":335,"column_start":6,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11922900,"byte_end":11922908,"line_start":387,"line_end":387,"column_start":10,"column_end":18},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11923833,"byte_end":11923846,"line_start":422,"line_end":422,"column_start":22,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":781},"to":{"krate":2,"index":2865}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11923856,"byte_end":11923869,"line_start":424,"line_end":424,"column_start":6,"column_end":19},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11927791,"byte_end":11927804,"line_start":545,"line_end":545,"column_start":10,"column_end":23},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\selector.rs","byte_start":11933325,"byte_end":11933338,"line_start":694,"line_end":694,"column_start":15,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":781},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\overlapped.rs","byte_start":11935649,"byte_end":11935659,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\overlapped.rs","byte_start":11936007,"byte_end":11936017,"line_start":30,"line_end":30,"column_start":21,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":578},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\overlapped.rs","byte_start":11936159,"byte_end":11936169,"line_start":36,"line_end":36,"column_start":22,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":578},"to":{"krate":2,"index":2853}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\overlapped.rs","byte_start":11936194,"byte_end":11936204,"line_start":37,"line_end":37,"column_start":22,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":578},"to":{"krate":2,"index":2865}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\net.rs","byte_start":11938760,"byte_end":11938775,"line_start":57,"line_end":57,"column_start":6,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11956307,"byte_end":11956312,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11958619,"byte_end":11958628,"line_start":159,"line_end":159,"column_start":6,"column_end":15},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11962903,"byte_end":11962912,"line_start":257,"line_end":257,"column_start":24,"column_end":33},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1283},"to":{"krate":1,"index":5401}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11963902,"byte_end":11963911,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1283},"to":{"krate":1,"index":4271}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11964053,"byte_end":11964062,"line_start":290,"line_end":290,"column_start":16,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1283},"to":{"krate":1,"index":4332}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11967330,"byte_end":11967339,"line_start":389,"line_end":389,"column_start":17,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1283},"to":{"krate":0,"index":196}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11969250,"byte_end":11969259,"line_start":464,"line_end":464,"column_start":22,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1283},"to":{"krate":1,"index":5399}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11969376,"byte_end":11969385,"line_start":470,"line_end":470,"column_start":21,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11969507,"byte_end":11969516,"line_start":476,"line_end":476,"column_start":15,"column_end":24},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11970091,"byte_end":11970096,"line_start":497,"line_end":497,"column_start":6,"column_end":11},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11978684,"byte_end":11978686,"line_start":734,"line_end":734,"column_start":6,"column_end":8},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\named_pipe.rs","byte_start":11980086,"byte_end":11980096,"line_start":780,"line_end":780,"column_start":6,"column_end":16},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\waker.rs","byte_start":11936454,"byte_end":11936459,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\mod.rs","byte_start":11893461,"byte_end":11893474,"line_start":57,"line_end":57,"column_start":19,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1411},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\sys\\windows\\mod.rs","byte_start":11893920,"byte_end":11893933,"line_start":72,"line_end":72,"column_start":10,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\waker.rs","byte_start":52012,"byte_end":52017,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":53121,"byte_end":53126,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":59776,"byte_end":59781,"line_start":193,"line_end":193,"column_start":21,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\event.rs","byte_start":60490,"byte_end":60502,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":62865,"byte_end":62871,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":65987,"byte_end":65991,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1462},"to":{"krate":2,"index":7317}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\events.rs","byte_start":66467,"byte_end":66473,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\event\\source.rs","byte_start":70639,"byte_end":70642,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"kind":{"Impl":{"id":60}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":196}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11982461,"byte_end":11982469,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11983769,"byte_end":11983777,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1516},"to":{"krate":2,"index":3064}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11984044,"byte_end":11984052,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1516},"to":{"krate":2,"index":3077}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11985133,"byte_end":11985141,"line_start":167,"line_end":167,"column_start":27,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1516},"to":{"krate":0,"index":196}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11986021,"byte_end":11986029,"line_start":201,"line_end":201,"column_start":24,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1516},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11986334,"byte_end":11986344,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\io_source.rs","byte_start":11988660,"byte_end":11988670,"line_start":286,"line_end":286,"column_start":16,"column_end":26},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1551},"to":{"krate":2,"index":2474}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11990776,"byte_end":11990787,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11994060,"byte_end":11994071,"line_start":127,"line_end":127,"column_start":24,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1611},"to":{"krate":0,"index":196}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11994627,"byte_end":11994638,"line_start":151,"line_end":151,"column_start":21,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1611},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11995376,"byte_end":11995387,"line_start":185,"line_end":185,"column_start":24,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1611},"to":{"krate":1,"index":5430}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11995530,"byte_end":11995541,"line_start":192,"line_end":192,"column_start":22,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1611},"to":{"krate":1,"index":5426}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\listener.rs","byte_start":11995670,"byte_end":11995681,"line_start":199,"line_end":199,"column_start":24,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1611},"to":{"krate":1,"index":5428}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":11997331,"byte_end":11997340,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12008478,"byte_end":12008487,"line_start":332,"line_end":332,"column_start":15,"column_end":24},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1946},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12009201,"byte_end":12009210,"line_start":369,"line_end":369,"column_start":24,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1946},"to":{"krate":1,"index":5430}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12009683,"byte_end":12009692,"line_start":385,"line_end":385,"column_start":22,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1946},"to":{"krate":1,"index":5426}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12009816,"byte_end":12009825,"line_start":392,"line_end":392,"column_start":24,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1946},"to":{"krate":1,"index":5428}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\socket.rs","byte_start":12010161,"byte_end":12010173,"line_start":406,"line_end":406,"column_start":6,"column_end":18},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12014252,"byte_end":12014261,"line_start":49,"line_end":49,"column_start":6,"column_end":15},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12019001,"byte_end":12019010,"line_start":175,"line_end":175,"column_start":15,"column_end":24},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1776},"to":{"krate":1,"index":4271}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12019622,"byte_end":12019631,"line_start":195,"line_end":195,"column_start":16,"column_end":25},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1776},"to":{"krate":1,"index":4332}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12020444,"byte_end":12020453,"line_start":223,"line_end":223,"column_start":24,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1776},"to":{"krate":0,"index":196}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12021009,"byte_end":12021018,"line_start":247,"line_end":247,"column_start":21,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1776},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12021744,"byte_end":12021753,"line_start":281,"line_end":281,"column_start":24,"column_end":33},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1776},"to":{"krate":1,"index":5430}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12021896,"byte_end":12021905,"line_start":288,"line_end":288,"column_start":22,"column_end":31},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1776},"to":{"krate":1,"index":5426}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\tcp\\stream.rs","byte_start":12022034,"byte_end":12022043,"line_start":295,"line_end":295,"column_start":24,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1776},"to":{"krate":1,"index":5428}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12025780,"byte_end":12025789,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12041550,"byte_end":12041559,"line_start":530,"line_end":530,"column_start":24,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1896},"to":{"krate":0,"index":196}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12042115,"byte_end":12042124,"line_start":554,"line_end":554,"column_start":21,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1896},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12042850,"byte_end":12042859,"line_start":588,"line_end":588,"column_start":24,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1896},"to":{"krate":1,"index":5430}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12043002,"byte_end":12043011,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1896},"to":{"krate":1,"index":5426}},{"span":{"file_name":"C:\\Users\\aaron\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.14\\src\\net\\udp.rs","byte_start":12043140,"byte_end":12043149,"line_start":602,"line_end":602,"column_start":24,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1896},"to":{"krate":1,"index":5428}}]}